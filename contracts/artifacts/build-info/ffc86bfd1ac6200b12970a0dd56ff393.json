{
	"id": "ffc86bfd1ac6200b12970a0dd56ff393",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Exchange.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.19;\r\n\r\nimport 'https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol';\r\nimport 'https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol';\r\nimport './IFactory.sol';\r\nimport './IExchange.sol';\r\n\r\ncontract Exchange is ERC20, IExchange {\r\n    address public tokenAddress;\r\n    address public factoryAddress;\r\n\r\n    constructor(address _token) ERC20(\"Muniswap-V1\", \"MUNI-V1\") {\r\n        require(_token != address(0), \"Invalid token address\");\r\n\r\n        tokenAddress = _token;\r\n        factoryAddress = msg.sender;\r\n    }\r\n\r\n    function addLiquidity(uint _tokenAmount) external payable {\r\n        if (getReserve() == 0) {\r\n        IERC20 token = IERC20(tokenAddress);\r\n        token.transferFrom(msg.sender, address(this), _tokenAmount);\r\n        \r\n        uint256 liquidity = address(this).balance;\r\n        _mint(msg.sender, liquidity);\r\n\r\n        } else {\r\n            uint256 ethReserve = address(this).balance - msg.value;\r\n            uint256 tokenReserve = getReserve();\r\n            uint256 tokenAmount = msg.value * tokenReserve / ethReserve;\r\n            require(_tokenAmount >= tokenAmount, \"Insufficient token amount\");\r\n\r\n            IERC20(tokenAddress).transferFrom(msg.sender, address(this), tokenAmount);\r\n\r\n            uint256 liquidity = totalSupply() * msg.value / ethReserve;\r\n            _mint(msg.sender, liquidity);\r\n        }\r\n    }\r\n\r\n    function getReserve() public view returns(uint256) {\r\n        return IERC20(tokenAddress).balanceOf(address(this));\r\n    }\r\n\r\n    function getAmount(\r\n        uint256 inputAmount,\r\n        uint256 inputReserve,\r\n        uint256 outputReserve\r\n    ) private pure returns(uint256) {\r\n        require(inputReserve > 0 && outputReserve > 0, \"Invalid reserve\");\r\n\r\n        uint256 inputAmountWithFee = inputAmount * 99;\r\n        uint256 numerator = inputAmountWithFee * outputReserve;\r\n        uint256 denominator = (inputReserve * 100) + inputAmountWithFee;\r\n\r\n        return numerator / denominator;\r\n    }\r\n\r\n    function getTokenAmount(uint256 _ethSold) public view returns(uint256) {\r\n        require(_ethSold > 0, \"Invalid input\");\r\n        uint256 tokenReserve = getReserve();\r\n        return getAmount(_ethSold, address(this).balance, tokenReserve);\r\n    }\r\n\r\n    function getEthAmount(uint256 _tokenSold) public view returns(uint256) {\r\n        require(_tokenSold > 0, \"Invalid input\");\r\n        uint256 tokenReserve = getReserve();\r\n        return getAmount(_tokenSold, tokenReserve, address(this).balance); \r\n    }\r\n\r\n    function ethToTokenSwap(uint256 _minTokens) public payable override returns(uint256) {\r\n        uint256 tokenReserve = getReserve();\r\n        uint256 tokensBought = getAmount(\r\n            msg.value,\r\n            address(this).balance - msg.value,\r\n            tokenReserve\r\n        );\r\n        require(tokensBought >= _minTokens, \"Insufficient output amount\");\r\n\r\n        IERC20(tokenAddress).transfer(msg.sender, tokensBought);\r\n        return tokensBought;\r\n    }\r\n\r\n    function tokenToEthSwap(uint256 _tokenSold, uint256 _minEth) public payable returns(uint256) {\r\n        uint256 tokenReserve = getReserve();\r\n        uint256 ethBought = getAmount(\r\n            _tokenSold,\r\n            tokenReserve,\r\n            address(this).balance\r\n        );\r\n        require(ethBought >= _minEth, \"Insufficient output amount\");\r\n\r\n        IERC20(tokenAddress).transferFrom(msg.sender, address(this), _tokenSold);\r\n        payable(msg.sender).transfer(ethBought);\r\n        return ethBought;\r\n    }\r\n\r\n    function removeLiquidity(uint256 _amountWithrawn) public payable {\r\n        require(_amountWithrawn > 0, \"Insufficient liquidity\");\r\n\r\n        uint256 ethWithrawn = address(this).balance * _amountWithrawn / totalSupply();\r\n        uint256 tokenWithrawn = getReserve() * _amountWithrawn / totalSupply();\r\n\r\n        _burn(msg.sender, _amountWithrawn);\r\n        payable(msg.sender).transfer(ethWithrawn);\r\n        IERC20(tokenAddress).transfer(msg.sender, tokenWithrawn);\r\n    }\r\n\r\n    function tokenToTokenSwap(\r\n        uint256 _tokenSold, \r\n        uint256 _minTokensBought, \r\n        address _tokenAddress\r\n    ) public payable {\r\n        // (, bytes memory data) = factoryAddress.call(abi.encodeWithSignature(\"getExchange(address)\", _tokenAddress));\r\n        // Exchange exchangeAddress = Exchange(abi.decode(data, (address)));\r\n\r\n        address exchangeAddress = IFactory(factoryAddress).getExchange(_tokenAddress);\r\n        require(\r\n            exchangeAddress != address(this) && exchangeAddress != address(0),\r\n            \"Invalid exchange address\"\r\n        );\r\n        \r\n        uint256 tokenReserve = getReserve();\r\n        uint256 ethAmount = getAmount(\r\n            _tokenSold,\r\n            tokenReserve,\r\n            address(this).balance\r\n        );\r\n        IERC20(tokenAddress).transferFrom(msg.sender, address(this), _tokenSold);\r\n\r\n        uint256 tokensBought = IExchange(exchangeAddress).ethToTokenSwap{value: ethAmount}(_minTokensBought);\r\n        IERC20(_tokenAddress).transfer(msg.sender, tokensBought);\r\n    }\r\n}"
			},
			"contracts/IExchange.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.19;\r\n\r\ninterface IExchange {\r\n    function ethToTokenSwap(uint256 _minTokens) external payable returns(uint256);\r\n}"
			},
			"contracts/IFactory.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.19;\r\n\r\ninterface IFactory {\r\n    function getExchange(address _tokenAddress) external returns(address);\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.19;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error ERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `requestedDecrease`.\n     */\n    function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < requestedDecrease) {\n            revert ERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n        }\n        unchecked {\n            _approve(owner, spender, currentAllowance - requestedDecrease);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 amount) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, amount);\n    }\n\n    /**\n     * @dev Transfers `amount` of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is\n     * the zero address. All customizations to transfers, mints, and burns should be done by overriding this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 amount) internal virtual {\n        if (from == address(0)) {\n            _totalSupply += amount;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < amount) {\n                revert ERC20InsufficientBalance(from, fromBalance, amount);\n            }\n            unchecked {\n                // Overflow not possible: amount <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - amount;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: amount <= totalSupply or amount <= fromBalance <= totalSupply.\n                _totalSupply -= amount;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + amount is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += amount;\n            }\n        }\n\n        emit Transfer(from, to, amount);\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 amount) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, by transferring it to address(0).\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 amount) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < amount) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, amount);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the ERC6093 custom errors for ERC20 tokens\n * as defined in https://eips.ethereum.org/EIPS/eip-6093\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the ERC6093 custom errors for ERC721 tokens\n * as defined in https://eips.ethereum.org/EIPS/eip-6093\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the ERC6093 custom errors for ERC1155 tokens\n * as defined in https://eips.ethereum.org/EIPS/eip-6093\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155InsufficientApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.19;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Exchange.sol": {
				"Exchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "ERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenAmount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minTokens",
									"type": "uint256"
								}
							],
							"name": "ethToTokenSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenSold",
									"type": "uint256"
								}
							],
							"name": "getEthAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ethSold",
									"type": "uint256"
								}
							],
							"name": "getTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountWithrawn",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenSold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minEth",
									"type": "uint256"
								}
							],
							"name": "tokenToEthSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenSold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minTokensBought",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"name": "tokenToTokenSwap",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Exchange.sol\":346:5178  contract Exchange is ERC20, IExchange {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Exchange.sol\":463:668  constructor(address _token) ERC20(\"Muniswap-V1\", \"MUNI-V1\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2179:2292  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x4d756e69737761702d5631000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4d554e492d563100000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2253:2258  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2245:2258  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2278:2285  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2268:2275  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2268:2285  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2179:2292  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/Exchange.sol\":560:561  0 */\n  0x00\n    /* \"contracts/Exchange.sol\":542:562  _token != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Exchange.sol\":542:548  _token */\n  dup2\n    /* \"contracts/Exchange.sol\":542:562  _token != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/Exchange.sol\":534:588  require(_token != address(0), \"Invalid token address\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/Exchange.sol\":616:622  _token */\n  dup1\n    /* \"contracts/Exchange.sol\":601:613  tokenAddress */\n  0x05\n  0x00\n    /* \"contracts/Exchange.sol\":601:622  tokenAddress = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Exchange.sol\":650:660  msg.sender */\n  caller\n    /* \"contracts/Exchange.sol\":633:647  factoryAddress */\n  0x06\n  0x00\n    /* \"contracts/Exchange.sol\":633:660  factoryAddress = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Exchange.sol\":463:668  constructor(address _token) ERC20(\"Muniswap-V1\", \"MUNI-V1\") {... */\n  pop\n    /* \"contracts/Exchange.sol\":346:5178  contract Exchange is ERC20, IExchange {... */\n  jump(tag_14)\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_51\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_53\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_54:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_56\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":932:1051   */\ntag_58:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_60\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_22:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_23:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_24:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_25:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_65:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_67\n  tag_24\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1909:1993   */\ntag_66:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_26:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_27:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_28:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_29:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_72\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_28\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2624:2663   */\n  tag_73\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_28\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_30:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_31:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_32:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_77\n    /* \"#utility.yul\":3013:3047   */\n  tag_78\n    /* \"#utility.yul\":3022:3046   */\n  tag_79\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_30\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3013:3047   */\n  tag_31\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2995:3048   */\n  tag_30\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_33:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_34:\n    /* \"#utility.yul\":3251:3290   */\n  tag_82\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_32\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3312:3403   */\n  tag_83\n    /* \"#utility.yul\":3361:3402   */\n  tag_84\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_33\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_29\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_35:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_36:\n    /* \"#utility.yul\":3572:3604   */\n  tag_87\n  tag_35\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3613:3678   */\n  tag_88\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_34\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_37:\n    /* \"#utility.yul\":3750:3870   */\ntag_90:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_93\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_36\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_90)\ntag_92:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_38:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_96\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_26\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4101:4130   */\n  tag_97\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_27\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_98:\n    /* \"#utility.yul\":4328:4408   */\n  tag_99\n    /* \"#utility.yul\":4384:4406   */\n  tag_100\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_27\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_37\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_95:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_39:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_40:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_103\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_39\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_41:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_105\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_40\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_8:\n    /* \"#utility.yul\":5145:5182   */\n  tag_107\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_22\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_109\n  tag_23\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5233:5289   */\ntag_108:\n    /* \"#utility.yul\":5313:5351   */\n  tag_110\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_25\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5398:5465   */\n  tag_111\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_38\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_113\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_114:\n    /* \"#utility.yul\":6339:6406   */\n  tag_115\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_41\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_112)\n    /* \"#utility.yul\":5560:6178   */\ntag_113:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_116\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_26\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_117:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_117)\ntag_119:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_121\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_40\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_120:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_112:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6598   */\ntag_42:\n    /* \"#utility.yul\":6513:6524   */\n  0x00\n    /* \"#utility.yul\":6547:6553   */\n  dup3\n    /* \"#utility.yul\":6542:6545   */\n  dup3\n    /* \"#utility.yul\":6535:6554   */\n  mstore\n    /* \"#utility.yul\":6587:6591   */\n  0x20\n    /* \"#utility.yul\":6582:6585   */\n  dup3\n    /* \"#utility.yul\":6578:6592   */\n  add\n    /* \"#utility.yul\":6563:6592   */\n  swap1\n  pop\n    /* \"#utility.yul\":6429:6598   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6604:6775   */\ntag_43:\n    /* \"#utility.yul\":6744:6767   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":6740:6741   */\n  0x00\n    /* \"#utility.yul\":6732:6738   */\n  dup3\n    /* \"#utility.yul\":6728:6742   */\n  add\n    /* \"#utility.yul\":6721:6768   */\n  mstore\n    /* \"#utility.yul\":6604:6775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:7147   */\ntag_44:\n    /* \"#utility.yul\":6923:6926   */\n  0x00\n    /* \"#utility.yul\":6944:7011   */\n  tag_125\n    /* \"#utility.yul\":7008:7010   */\n  0x15\n    /* \"#utility.yul\":7003:7006   */\n  dup4\n    /* \"#utility.yul\":6944:7011   */\n  tag_42\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6937:7011   */\n  swap2\n  pop\n    /* \"#utility.yul\":7020:7113   */\n  tag_126\n    /* \"#utility.yul\":7109:7112   */\n  dup3\n    /* \"#utility.yul\":7020:7113   */\n  tag_43\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":7138:7140   */\n  0x20\n    /* \"#utility.yul\":7133:7136   */\n  dup3\n    /* \"#utility.yul\":7129:7141   */\n  add\n    /* \"#utility.yul\":7122:7141   */\n  swap1\n  pop\n    /* \"#utility.yul\":6781:7147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7153:7572   */\ntag_13:\n    /* \"#utility.yul\":7319:7323   */\n  0x00\n    /* \"#utility.yul\":7357:7359   */\n  0x20\n    /* \"#utility.yul\":7346:7355   */\n  dup3\n    /* \"#utility.yul\":7342:7360   */\n  add\n    /* \"#utility.yul\":7334:7360   */\n  swap1\n  pop\n    /* \"#utility.yul\":7406:7415   */\n  dup2\n    /* \"#utility.yul\":7400:7404   */\n  dup2\n    /* \"#utility.yul\":7396:7416   */\n  sub\n    /* \"#utility.yul\":7392:7393   */\n  0x00\n    /* \"#utility.yul\":7381:7390   */\n  dup4\n    /* \"#utility.yul\":7377:7394   */\n  add\n    /* \"#utility.yul\":7370:7417   */\n  mstore\n    /* \"#utility.yul\":7434:7565   */\n  tag_128\n    /* \"#utility.yul\":7560:7564   */\n  dup2\n    /* \"#utility.yul\":7434:7565   */\n  tag_44\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":7426:7565   */\n  swap1\n  pop\n    /* \"#utility.yul\":7153:7572   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/Exchange.sol\":346:5178  contract Exchange is ERC20, IExchange {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Exchange.sol\":346:5178  contract Exchange is ERC20, IExchange {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc2507ac1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe0486c8a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf7a7e324\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf979dcd7\n      eq\n      tag_22\n      jumpi\n      jump(tag_1)\n    tag_24:\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x966dae0e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_23:\n      dup1\n      0x39509351\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x51c6590a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x59bf5d39\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8fc7a25d\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2357:2446  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4580:4768  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3427:3524  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5330:5577  function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3285:3367  function decimals() public view virtual returns (uint8) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5972:6206  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":676:1505  function addLiquidity(uint _tokenAmount) external payable {... */\n    tag_8:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/Exchange.sol\":1513:1635  function getReserve() public view returns(uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3582:3698  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":2380:2633  function getEthAmount(uint256 _tokenSold) public view returns(uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2559:2652  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":425:454  address public factoryAddress */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":3641:4116  function removeLiquidity(uint256 _amountWithrawn) public payable {... */\n    tag_14:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/Exchange.sol\":391:418  address public tokenAddress */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6695:7188  function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3894:4074  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":2124:2372  function getTokenAmount(uint256 _ethSold) public view returns(uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4132:4272  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":3115:3633  function tokenToEthSwap(uint256 _tokenSold, uint256 _minEth) public payable returns(uint256) {... */\n    tag_20:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      tag_118\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Exchange.sol\":4124:5175  function tokenToTokenSwap(... */\n    tag_21:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n    tag_120:\n      stop\n        /* \"contracts/Exchange.sol\":2641:3107  function ethToTokenSwap(uint256 _minTokens) public payable override returns(uint256) {... */\n    tag_22:\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2357:2446  function name() public view virtual returns (string memory) {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2402:2415  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2434:2439  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2427:2439  return _name */\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_130\n      jump\t// in\n    tag_131:\n      dup1\n      iszero\n      tag_132\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_133\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_132)\n    tag_133:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_134:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_134\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2357:2446  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4580:4768  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4654:4658  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4670:4683  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4686:4698  _msgSender() */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4686:4696  _msgSender */\n      tag_137\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4686:4698  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4670:4698  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4708:4740  _approve(owner, spender, amount) */\n      tag_138\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4717:4722  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4724:4731  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4733:4739  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4708:4716  _approve */\n      tag_139\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4708:4740  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_138:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4757:4761  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4750:4761  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4580:4768  function approve(address spender, uint256 amount) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3427:3524  function totalSupply() public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3479:3486  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3505:3517  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3498:3517  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3427:3524  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5330:5577  function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {... */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5418:5422  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5434:5449  address spender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5452:5464  _msgSender() */\n      tag_142\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5452:5462  _msgSender */\n      tag_137\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5452:5464  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5434:5464  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5474:5512  _spendAllowance(from, spender, amount) */\n      tag_143\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5490:5494  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5496:5503  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5505:5511  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5474:5489  _spendAllowance */\n      tag_144\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5474:5512  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_143:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5522:5549  _transfer(from, to, amount) */\n      tag_145\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5532:5536  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5538:5540  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5542:5548  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5522:5531  _transfer */\n      tag_146\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5522:5549  _transfer(from, to, amount) */\n      jump\t// in\n    tag_145:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5566:5570  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5559:5570  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5330:5577  function transferFrom(address from, address to, uint256 amount) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3285:3367  function decimals() public view virtual returns (uint8) {... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3334:3339  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3358:3360  18 */\n      0x12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3351:3360  return 18 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3285:3367  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5972:6206  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6060:6064  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6076:6089  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6092:6104  _msgSender() */\n      tag_149\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6092:6102  _msgSender */\n      tag_137\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6092:6104  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6076:6104  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6114:6178  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_150\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6123:6128  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6130:6137  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6167:6177  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6139:6164  allowance(owner, spender) */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6149:6154  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6156:6163  spender */\n      dup10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6139:6148  allowance */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6139:6164  allowance(owner, spender) */\n      jump\t// in\n    tag_151:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6139:6177  allowance(owner, spender) + addedValue */\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6114:6122  _approve */\n      tag_139\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6114:6178  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_150:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6195:6199  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6188:6199  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5972:6206  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":676:1505  function addLiquidity(uint _tokenAmount) external payable {... */\n    tag_62:\n        /* \"contracts/Exchange.sol\":765:766  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":749:761  getReserve() */\n      tag_155\n        /* \"contracts/Exchange.sol\":749:759  getReserve */\n      tag_65\n        /* \"contracts/Exchange.sol\":749:761  getReserve() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/Exchange.sol\":749:766  getReserve() == 0 */\n      sub\n        /* \"contracts/Exchange.sol\":745:1498  if (getReserve() == 0) {... */\n      tag_156\n      jumpi\n        /* \"contracts/Exchange.sol\":779:791  IERC20 token */\n      0x00\n        /* \"contracts/Exchange.sol\":801:813  tokenAddress */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":779:814  IERC20 token = IERC20(tokenAddress) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":825:830  token */\n      dup1\n        /* \"contracts/Exchange.sol\":825:843  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Exchange.sol\":844:854  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":864:868  this */\n      address\n        /* \"contracts/Exchange.sol\":871:883  _tokenAmount */\n      dup6\n        /* \"contracts/Exchange.sol\":825:884  token.transferFrom(msg.sender, address(this), _tokenAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      pop\n        /* \"contracts/Exchange.sol\":905:922  uint256 liquidity */\n      0x00\n        /* \"contracts/Exchange.sol\":925:946  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":905:946  uint256 liquidity = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":957:985  _mint(msg.sender, liquidity) */\n      tag_163\n        /* \"contracts/Exchange.sol\":963:973  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":975:984  liquidity */\n      dup3\n        /* \"contracts/Exchange.sol\":957:962  _mint */\n      tag_164\n        /* \"contracts/Exchange.sol\":957:985  _mint(msg.sender, liquidity) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/Exchange.sol\":768:999  {... */\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":745:1498  if (getReserve() == 0) {... */\n      jump(tag_165)\n    tag_156:\n        /* \"contracts/Exchange.sol\":1020:1038  uint256 ethReserve */\n      0x00\n        /* \"contracts/Exchange.sol\":1065:1074  msg.value */\n      callvalue\n        /* \"contracts/Exchange.sol\":1041:1062  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":1041:1074  address(this).balance - msg.value */\n      tag_166\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"contracts/Exchange.sol\":1020:1074  uint256 ethReserve = address(this).balance - msg.value */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":1089:1109  uint256 tokenReserve */\n      0x00\n        /* \"contracts/Exchange.sol\":1112:1124  getReserve() */\n      tag_168\n        /* \"contracts/Exchange.sol\":1112:1122  getReserve */\n      tag_65\n        /* \"contracts/Exchange.sol\":1112:1124  getReserve() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/Exchange.sol\":1089:1124  uint256 tokenReserve = getReserve() */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":1139:1158  uint256 tokenAmount */\n      0x00\n        /* \"contracts/Exchange.sol\":1188:1198  ethReserve */\n      dup3\n        /* \"contracts/Exchange.sol\":1173:1185  tokenReserve */\n      dup3\n        /* \"contracts/Exchange.sol\":1161:1170  msg.value */\n      callvalue\n        /* \"contracts/Exchange.sol\":1161:1185  msg.value * tokenReserve */\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"contracts/Exchange.sol\":1161:1198  msg.value * tokenReserve / ethReserve */\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"contracts/Exchange.sol\":1139:1198  uint256 tokenAmount = msg.value * tokenReserve / ethReserve */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":1237:1248  tokenAmount */\n      dup1\n        /* \"contracts/Exchange.sol\":1221:1233  _tokenAmount */\n      dup5\n        /* \"contracts/Exchange.sol\":1221:1248  _tokenAmount >= tokenAmount */\n      lt\n      iszero\n        /* \"contracts/Exchange.sol\":1213:1278  require(_tokenAmount >= tokenAmount, \"Insufficient token amount\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"contracts/Exchange.sol\":1302:1314  tokenAddress */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":1295:1328  IERC20(tokenAddress).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Exchange.sol\":1329:1339  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":1349:1353  this */\n      address\n        /* \"contracts/Exchange.sol\":1356:1367  tokenAmount */\n      dup5\n        /* \"contracts/Exchange.sol\":1295:1368  IERC20(tokenAddress).transferFrom(msg.sender, address(this), tokenAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_176:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_179:\n      pop\n        /* \"contracts/Exchange.sol\":1385:1402  uint256 liquidity */\n      0x00\n        /* \"contracts/Exchange.sol\":1433:1443  ethReserve */\n      dup4\n        /* \"contracts/Exchange.sol\":1421:1430  msg.value */\n      callvalue\n        /* \"contracts/Exchange.sol\":1405:1418  totalSupply() */\n      tag_180\n        /* \"contracts/Exchange.sol\":1405:1416  totalSupply */\n      tag_40\n        /* \"contracts/Exchange.sol\":1405:1418  totalSupply() */\n      jump\t// in\n    tag_180:\n        /* \"contracts/Exchange.sol\":1405:1430  totalSupply() * msg.value */\n      tag_181\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_181:\n        /* \"contracts/Exchange.sol\":1405:1443  totalSupply() * msg.value / ethReserve */\n      tag_182\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_182:\n        /* \"contracts/Exchange.sol\":1385:1443  uint256 liquidity = totalSupply() * msg.value / ethReserve */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":1458:1486  _mint(msg.sender, liquidity) */\n      tag_183\n        /* \"contracts/Exchange.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":1476:1485  liquidity */\n      dup3\n        /* \"contracts/Exchange.sol\":1458:1463  _mint */\n      tag_164\n        /* \"contracts/Exchange.sol\":1458:1486  _mint(msg.sender, liquidity) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/Exchange.sol\":1005:1498  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":745:1498  if (getReserve() == 0) {... */\n    tag_165:\n        /* \"contracts/Exchange.sol\":676:1505  function addLiquidity(uint _tokenAmount) external payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":1513:1635  function getReserve() public view returns(uint256) {... */\n    tag_65:\n        /* \"contracts/Exchange.sol\":1555:1562  uint256 */\n      0x00\n        /* \"contracts/Exchange.sol\":1589:1601  tokenAddress */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":1582:1612  IERC20(tokenAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Exchange.sol\":1621:1625  this */\n      address\n        /* \"contracts/Exchange.sol\":1582:1627  IERC20(tokenAddress).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_185:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"contracts/Exchange.sol\":1575:1627  return IERC20(tokenAddress).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":1513:1635  function getReserve() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3582:3698  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3647:3654  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3673:3682  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3673:3691  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3683:3690  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3673:3691  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3666:3691  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3582:3698  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":2380:2633  function getEthAmount(uint256 _tokenSold) public view returns(uint256) {... */\n    tag_76:\n        /* \"contracts/Exchange.sol\":2442:2449  uint256 */\n      0x00\n        /* \"contracts/Exchange.sol\":2483:2484  0 */\n      dup1\n        /* \"contracts/Exchange.sol\":2470:2480  _tokenSold */\n      dup3\n        /* \"contracts/Exchange.sol\":2470:2484  _tokenSold > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":2462:2502  require(_tokenSold > 0, \"Invalid input\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/Exchange.sol\":2513:2533  uint256 tokenReserve */\n      0x00\n        /* \"contracts/Exchange.sol\":2536:2548  getReserve() */\n      tag_195\n        /* \"contracts/Exchange.sol\":2536:2546  getReserve */\n      tag_65\n        /* \"contracts/Exchange.sol\":2536:2548  getReserve() */\n      jump\t// in\n    tag_195:\n        /* \"contracts/Exchange.sol\":2513:2548  uint256 tokenReserve = getReserve() */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":2566:2624  getAmount(_tokenSold, tokenReserve, address(this).balance) */\n      tag_196\n        /* \"contracts/Exchange.sol\":2576:2586  _tokenSold */\n      dup4\n        /* \"contracts/Exchange.sol\":2588:2600  tokenReserve */\n      dup3\n        /* \"contracts/Exchange.sol\":2602:2623  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":2566:2575  getAmount */\n      tag_197\n        /* \"contracts/Exchange.sol\":2566:2624  getAmount(_tokenSold, tokenReserve, address(this).balance) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/Exchange.sol\":2559:2624  return getAmount(_tokenSold, tokenReserve, address(this).balance) */\n      swap2\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":2380:2633  function getEthAmount(uint256 _tokenSold) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2559:2652  function symbol() public view virtual returns (string memory) {... */\n    tag_80:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2606:2619  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2638:2645  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2631:2645  return _symbol */\n      dup1\n      sload\n      tag_199\n      swap1\n      tag_130\n      jump\t// in\n    tag_199:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_200\n      swap1\n      tag_130\n      jump\t// in\n    tag_200:\n      dup1\n      iszero\n      tag_201\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_202\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_201)\n    tag_202:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_203:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_203\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2559:2652  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Exchange.sol\":425:454  address public factoryAddress */\n    tag_84:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Exchange.sol\":3641:4116  function removeLiquidity(uint256 _amountWithrawn) public payable {... */\n    tag_89:\n        /* \"contracts/Exchange.sol\":3743:3744  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":3725:3740  _amountWithrawn */\n      dup2\n        /* \"contracts/Exchange.sol\":3725:3744  _amountWithrawn > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":3717:3771  require(_amountWithrawn > 0, \"Insufficient liquidity\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"contracts/Exchange.sol\":3784:3803  uint256 ethWithrawn */\n      0x00\n        /* \"contracts/Exchange.sol\":3848:3861  totalSupply() */\n      tag_208\n        /* \"contracts/Exchange.sol\":3848:3859  totalSupply */\n      tag_40\n        /* \"contracts/Exchange.sol\":3848:3861  totalSupply() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/Exchange.sol\":3830:3845  _amountWithrawn */\n      dup3\n        /* \"contracts/Exchange.sol\":3806:3827  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":3806:3845  address(this).balance * _amountWithrawn */\n      tag_209\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_209:\n        /* \"contracts/Exchange.sol\":3806:3861  address(this).balance * _amountWithrawn / totalSupply() */\n      tag_210\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_210:\n        /* \"contracts/Exchange.sol\":3784:3861  uint256 ethWithrawn = address(this).balance * _amountWithrawn / totalSupply() */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":3872:3893  uint256 tokenWithrawn */\n      0x00\n        /* \"contracts/Exchange.sol\":3929:3942  totalSupply() */\n      tag_211\n        /* \"contracts/Exchange.sol\":3929:3940  totalSupply */\n      tag_40\n        /* \"contracts/Exchange.sol\":3929:3942  totalSupply() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/Exchange.sol\":3911:3926  _amountWithrawn */\n      dup4\n        /* \"contracts/Exchange.sol\":3896:3908  getReserve() */\n      tag_212\n        /* \"contracts/Exchange.sol\":3896:3906  getReserve */\n      tag_65\n        /* \"contracts/Exchange.sol\":3896:3908  getReserve() */\n      jump\t// in\n    tag_212:\n        /* \"contracts/Exchange.sol\":3896:3926  getReserve() * _amountWithrawn */\n      tag_213\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_213:\n        /* \"contracts/Exchange.sol\":3896:3942  getReserve() * _amountWithrawn / totalSupply() */\n      tag_214\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_214:\n        /* \"contracts/Exchange.sol\":3872:3942  uint256 tokenWithrawn = getReserve() * _amountWithrawn / totalSupply() */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":3955:3989  _burn(msg.sender, _amountWithrawn) */\n      tag_215\n        /* \"contracts/Exchange.sol\":3961:3971  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":3973:3988  _amountWithrawn */\n      dup5\n        /* \"contracts/Exchange.sol\":3955:3960  _burn */\n      tag_216\n        /* \"contracts/Exchange.sol\":3955:3989  _burn(msg.sender, _amountWithrawn) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/Exchange.sol\":4008:4018  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":4000:4028  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":4000:4041  payable(msg.sender).transfer(ethWithrawn) */\n      0x08fc\n        /* \"contracts/Exchange.sol\":4029:4040  ethWithrawn */\n      dup4\n        /* \"contracts/Exchange.sol\":4000:4041  payable(msg.sender).transfer(ethWithrawn) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n        /* \"contracts/Exchange.sol\":4059:4071  tokenAddress */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":4052:4081  IERC20(tokenAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Exchange.sol\":4082:4092  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":4094:4107  tokenWithrawn */\n      dup4\n        /* \"contracts/Exchange.sol\":4052:4108  IERC20(tokenAddress).transfer(msg.sender, tokenWithrawn) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap3\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_222\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_223\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_223:\n      pop\n        /* \"contracts/Exchange.sol\":3706:4116  {... */\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":3641:4116  function removeLiquidity(uint256 _amountWithrawn) public payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":391:418  address public tokenAddress */\n    tag_92:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6695:7188  function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {... */\n    tag_97:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6790:6794  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6806:6819  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6822:6834  _msgSender() */\n      tag_225\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6822:6832  _msgSender */\n      tag_137\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6822:6834  _msgSender() */\n      jump\t// in\n    tag_225:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6806:6834  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6844:6868  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6871:6896  allowance(owner, spender) */\n      tag_226\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6881:6886  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6888:6895  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6871:6880  allowance */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6871:6896  allowance(owner, spender) */\n      jump\t// in\n    tag_226:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6844:6896  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6929:6946  requestedDecrease */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6910:6926  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6910:6946  currentAllowance < requestedDecrease */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6906:7054  if (currentAllowance < requestedDecrease) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6998:7005  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7007:7023  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7025:7042  requestedDecrease */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6969:7043  ERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease) */\n      mload(0x40)\n      0xa60f030c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6906:7054  if (currentAllowance < requestedDecrease) {... */\n    tag_227:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7087:7149  _approve(owner, spender, currentAllowance - requestedDecrease) */\n      tag_230\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7096:7101  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7103:7110  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7131:7148  requestedDecrease */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7112:7128  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7112:7148  currentAllowance - requestedDecrease */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7087:7095  _approve */\n      tag_139\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7087:7149  _approve(owner, spender, currentAllowance - requestedDecrease) */\n      jump\t// in\n    tag_230:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7177:7181  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7170:7181  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6695:7188  function decreaseAllowance(address spender, uint256 requestedDecrease) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3894:4074  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3964:3968  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3980:3993  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3996:4008  _msgSender() */\n      tag_232\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3996:4006  _msgSender */\n      tag_137\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3996:4008  _msgSender() */\n      jump\t// in\n    tag_232:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3980:4008  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4018:4046  _transfer(owner, to, amount) */\n      tag_233\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4028:4033  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4035:4037  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4039:4045  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4018:4027  _transfer */\n      tag_146\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4018:4046  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_233:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4063:4067  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4056:4067  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3894:4074  function transfer(address to, uint256 amount) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":2124:2372  function getTokenAmount(uint256 _ethSold) public view returns(uint256) {... */\n    tag_107:\n        /* \"contracts/Exchange.sol\":2186:2193  uint256 */\n      0x00\n        /* \"contracts/Exchange.sol\":2225:2226  0 */\n      dup1\n        /* \"contracts/Exchange.sol\":2214:2222  _ethSold */\n      dup3\n        /* \"contracts/Exchange.sol\":2214:2226  _ethSold > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":2206:2244  require(_ethSold > 0, \"Invalid input\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_194\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"contracts/Exchange.sol\":2255:2275  uint256 tokenReserve */\n      0x00\n        /* \"contracts/Exchange.sol\":2278:2290  getReserve() */\n      tag_237\n        /* \"contracts/Exchange.sol\":2278:2288  getReserve */\n      tag_65\n        /* \"contracts/Exchange.sol\":2278:2290  getReserve() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/Exchange.sol\":2255:2290  uint256 tokenReserve = getReserve() */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":2308:2364  getAmount(_ethSold, address(this).balance, tokenReserve) */\n      tag_238\n        /* \"contracts/Exchange.sol\":2318:2326  _ethSold */\n      dup4\n        /* \"contracts/Exchange.sol\":2328:2349  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":2351:2363  tokenReserve */\n      dup4\n        /* \"contracts/Exchange.sol\":2308:2317  getAmount */\n      tag_197\n        /* \"contracts/Exchange.sol\":2308:2364  getAmount(_ethSold, address(this).balance, tokenReserve) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/Exchange.sol\":2301:2364  return getAmount(_ethSold, address(this).balance, tokenReserve) */\n      swap2\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":2124:2372  function getTokenAmount(uint256 _ethSold) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4132:4272  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_113:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4212:4219  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4238:4249  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4238:4256  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4250:4255  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4238:4256  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4238:4265  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4257:4264  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4238:4265  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4231:4265  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4132:4272  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":3115:3633  function tokenToEthSwap(uint256 _tokenSold, uint256 _minEth) public payable returns(uint256) {... */\n    tag_118:\n        /* \"contracts/Exchange.sol\":3199:3206  uint256 */\n      0x00\n        /* \"contracts/Exchange.sol\":3219:3239  uint256 tokenReserve */\n      dup1\n        /* \"contracts/Exchange.sol\":3242:3254  getReserve() */\n      tag_241\n        /* \"contracts/Exchange.sol\":3242:3252  getReserve */\n      tag_65\n        /* \"contracts/Exchange.sol\":3242:3254  getReserve() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/Exchange.sol\":3219:3254  uint256 tokenReserve = getReserve() */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":3265:3282  uint256 ethBought */\n      0x00\n        /* \"contracts/Exchange.sol\":3285:3393  getAmount(... */\n      tag_242\n        /* \"contracts/Exchange.sol\":3309:3319  _tokenSold */\n      dup6\n        /* \"contracts/Exchange.sol\":3334:3346  tokenReserve */\n      dup4\n        /* \"contracts/Exchange.sol\":3361:3382  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":3285:3294  getAmount */\n      tag_197\n        /* \"contracts/Exchange.sol\":3285:3393  getAmount(... */\n      jump\t// in\n    tag_242:\n        /* \"contracts/Exchange.sol\":3265:3393  uint256 ethBought = getAmount(... */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":3425:3432  _minEth */\n      dup4\n        /* \"contracts/Exchange.sol\":3412:3421  ethBought */\n      dup2\n        /* \"contracts/Exchange.sol\":3412:3432  ethBought >= _minEth */\n      lt\n      iszero\n        /* \"contracts/Exchange.sol\":3404:3463  require(ethBought >= _minEth, \"Insufficient output amount\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_243:\n        /* \"contracts/Exchange.sol\":3483:3495  tokenAddress */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":3476:3509  IERC20(tokenAddress).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Exchange.sol\":3510:3520  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":3530:3534  this */\n      address\n        /* \"contracts/Exchange.sol\":3537:3547  _tokenSold */\n      dup9\n        /* \"contracts/Exchange.sol\":3476:3548  IERC20(tokenAddress).transferFrom(msg.sender, address(this), _tokenSold) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_246:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_248\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_249\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_249:\n      pop\n        /* \"contracts/Exchange.sol\":3567:3577  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":3559:3587  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":3559:3598  payable(msg.sender).transfer(ethBought) */\n      0x08fc\n        /* \"contracts/Exchange.sol\":3588:3597  ethBought */\n      dup3\n        /* \"contracts/Exchange.sol\":3559:3598  payable(msg.sender).transfer(ethBought) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n        /* \"contracts/Exchange.sol\":3616:3625  ethBought */\n      dup1\n        /* \"contracts/Exchange.sol\":3609:3625  return ethBought */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":3115:3633  function tokenToEthSwap(uint256 _tokenSold, uint256 _minEth) public payable returns(uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":4124:5175  function tokenToTokenSwap(... */\n    tag_123:\n        /* \"contracts/Exchange.sol\":4482:4505  address exchangeAddress */\n      0x00\n        /* \"contracts/Exchange.sol\":4517:4531  factoryAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":4508:4544  IFactory(factoryAddress).getExchange */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x06f2bf62\n        /* \"contracts/Exchange.sol\":4545:4558  _tokenAddress */\n      dup4\n        /* \"contracts/Exchange.sol\":4508:4559  IFactory(factoryAddress).getExchange(_tokenAddress) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_253:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_255\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_255:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_256\n      swap2\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n        /* \"contracts/Exchange.sol\":4482:4559  address exchangeAddress = IFactory(factoryAddress).getExchange(_tokenAddress) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":4619:4623  this */\n      address\n        /* \"contracts/Exchange.sol\":4592:4624  exchangeAddress != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":4592:4607  exchangeAddress */\n      dup2\n        /* \"contracts/Exchange.sol\":4592:4624  exchangeAddress != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Exchange.sol\":4592:4657  exchangeAddress != address(this) && exchangeAddress != address(0) */\n      dup1\n      iszero\n      tag_258\n      jumpi\n      pop\n        /* \"contracts/Exchange.sol\":4655:4656  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":4628:4657  exchangeAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":4628:4643  exchangeAddress */\n      dup2\n        /* \"contracts/Exchange.sol\":4628:4657  exchangeAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Exchange.sol\":4592:4657  exchangeAddress != address(this) && exchangeAddress != address(0) */\n    tag_258:\n        /* \"contracts/Exchange.sol\":4570:4709  require(... */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"contracts/Exchange.sol\":4730:4750  uint256 tokenReserve */\n      0x00\n        /* \"contracts/Exchange.sol\":4753:4765  getReserve() */\n      tag_262\n        /* \"contracts/Exchange.sol\":4753:4763  getReserve */\n      tag_65\n        /* \"contracts/Exchange.sol\":4753:4765  getReserve() */\n      jump\t// in\n    tag_262:\n        /* \"contracts/Exchange.sol\":4730:4765  uint256 tokenReserve = getReserve() */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":4776:4793  uint256 ethAmount */\n      0x00\n        /* \"contracts/Exchange.sol\":4796:4904  getAmount(... */\n      tag_263\n        /* \"contracts/Exchange.sol\":4820:4830  _tokenSold */\n      dup7\n        /* \"contracts/Exchange.sol\":4845:4857  tokenReserve */\n      dup4\n        /* \"contracts/Exchange.sol\":4872:4893  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":4796:4805  getAmount */\n      tag_197\n        /* \"contracts/Exchange.sol\":4796:4904  getAmount(... */\n      jump\t// in\n    tag_263:\n        /* \"contracts/Exchange.sol\":4776:4904  uint256 ethAmount = getAmount(... */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":4922:4934  tokenAddress */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":4915:4948  IERC20(tokenAddress).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Exchange.sol\":4949:4959  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":4969:4973  this */\n      address\n        /* \"contracts/Exchange.sol\":4976:4986  _tokenSold */\n      dup10\n        /* \"contracts/Exchange.sol\":4915:4987  IERC20(tokenAddress).transferFrom(msg.sender, address(this), _tokenSold) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_264:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_266\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_266:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_267\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_267:\n      pop\n        /* \"contracts/Exchange.sol\":5000:5020  uint256 tokensBought */\n      0x00\n        /* \"contracts/Exchange.sol\":5033:5048  exchangeAddress */\n      dup4\n        /* \"contracts/Exchange.sol\":5023:5064  IExchange(exchangeAddress).ethToTokenSwap */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf979dcd7\n        /* \"contracts/Exchange.sol\":5072:5081  ethAmount */\n      dup4\n        /* \"contracts/Exchange.sol\":5083:5099  _minTokensBought */\n      dup9\n        /* \"contracts/Exchange.sol\":5023:5100  IExchange(exchangeAddress).ethToTokenSwap{value: ethAmount}(_minTokensBought) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_268:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_271\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_271:\n        /* \"contracts/Exchange.sol\":5000:5100  uint256 tokensBought = IExchange(exchangeAddress).ethToTokenSwap{value: ethAmount}(_minTokensBought) */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":5118:5131  _tokenAddress */\n      dup5\n        /* \"contracts/Exchange.sol\":5111:5141  IERC20(_tokenAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Exchange.sol\":5142:5152  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":5154:5166  tokensBought */\n      dup4\n        /* \"contracts/Exchange.sol\":5111:5167  IERC20(_tokenAddress).transfer(msg.sender, tokensBought) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap3\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_272:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_274\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_274:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_275\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_275:\n      pop\n        /* \"contracts/Exchange.sol\":4270:5175  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":4124:5175  function tokenToTokenSwap(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":2641:3107  function ethToTokenSwap(uint256 _minTokens) public payable override returns(uint256) {... */\n    tag_126:\n        /* \"contracts/Exchange.sol\":2717:2724  uint256 */\n      0x00\n        /* \"contracts/Exchange.sol\":2737:2757  uint256 tokenReserve */\n      dup1\n        /* \"contracts/Exchange.sol\":2760:2772  getReserve() */\n      tag_277\n        /* \"contracts/Exchange.sol\":2760:2770  getReserve */\n      tag_65\n        /* \"contracts/Exchange.sol\":2760:2772  getReserve() */\n      jump\t// in\n    tag_277:\n        /* \"contracts/Exchange.sol\":2737:2772  uint256 tokenReserve = getReserve() */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":2783:2803  uint256 tokensBought */\n      0x00\n        /* \"contracts/Exchange.sol\":2806:2925  getAmount(... */\n      tag_278\n        /* \"contracts/Exchange.sol\":2830:2839  msg.value */\n      callvalue\n        /* \"contracts/Exchange.sol\":2878:2887  msg.value */\n      callvalue\n        /* \"contracts/Exchange.sol\":2854:2875  address(this).balance */\n      selfbalance\n        /* \"contracts/Exchange.sol\":2854:2887  address(this).balance - msg.value */\n      tag_279\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_279:\n        /* \"contracts/Exchange.sol\":2902:2914  tokenReserve */\n      dup5\n        /* \"contracts/Exchange.sol\":2806:2815  getAmount */\n      tag_197\n        /* \"contracts/Exchange.sol\":2806:2925  getAmount(... */\n      jump\t// in\n    tag_278:\n        /* \"contracts/Exchange.sol\":2783:2925  uint256 tokensBought = getAmount(... */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":2960:2970  _minTokens */\n      dup4\n        /* \"contracts/Exchange.sol\":2944:2956  tokensBought */\n      dup2\n        /* \"contracts/Exchange.sol\":2944:2970  tokensBought >= _minTokens */\n      lt\n      iszero\n        /* \"contracts/Exchange.sol\":2936:3001  require(tokensBought >= _minTokens, \"Insufficient output amount\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap1\n      tag_245\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"contracts/Exchange.sol\":3021:3033  tokenAddress */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Exchange.sol\":3014:3043  IERC20(tokenAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Exchange.sol\":3044:3054  msg.sender */\n      caller\n        /* \"contracts/Exchange.sol\":3056:3068  tokensBought */\n      dup4\n        /* \"contracts/Exchange.sol\":3014:3069  IERC20(tokenAddress).transfer(msg.sender, tokensBought) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap3\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_282:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_284:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_285\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_285:\n      pop\n        /* \"contracts/Exchange.sol\":3087:3099  tokensBought */\n      dup1\n        /* \"contracts/Exchange.sol\":3080:3099  return tokensBought */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":2641:3107  function ethToTokenSwap(uint256 _minTokens) public payable override returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":641:737  function _msgSender() internal view virtual returns (address) {... */\n    tag_137:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":694:701  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":720:730  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":713:730  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":641:737  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10659:11039  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_139:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10773:10774  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10756:10775  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10756:10761  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10756:10775  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10752:10841  if (owner == address(0)) {... */\n      tag_288\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10827:10828  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10798:10830  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10752:10841  if (owner == address(0)) {... */\n    tag_288:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10873:10874  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10854:10875  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10854:10861  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10854:10875  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10850:10940  if (spender == address(0)) {... */\n      tag_290\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10926:10927  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10898:10929  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10850:10940  if (spender == address(0)) {... */\n    tag_290:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10979:10985  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10949:10960  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10949:10967  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10961:10966  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10949:10967  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10949:10976  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10968:10975  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10949:10976  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10949:10985  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11016:11023  spender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11000:11032  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11009:11014  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11000:11032  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11025:11031  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11000:11032  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_292\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10659:11039  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11320:11794  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_144:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11420:11444  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11447:11472  allowance(owner, spender) */\n      tag_294\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11457:11462  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11464:11471  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11447:11456  allowance */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11447:11472  allowance(owner, spender) */\n      jump\t// in\n    tag_294:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11420:11472  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11506:11523  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11486:11502  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11486:11523  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11482:11788  if (currentAllowance != type(uint256).max) {... */\n      tag_295\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11562:11568  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11543:11559  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11543:11568  currentAllowance < amount */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11539:11671  if (currentAllowance < amount) {... */\n      iszero\n      tag_296\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11622:11629  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11631:11647  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11649:11655  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11595:11656  ERC20InsufficientAllowance(spender, currentAllowance, amount) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11539:11671  if (currentAllowance < amount) {... */\n    tag_296:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11712:11763  _approve(owner, spender, currentAllowance - amount) */\n      tag_298\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11721:11726  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11728:11735  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11756:11762  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11737:11753  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11737:11762  currentAllowance - amount */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11712:11720  _approve */\n      tag_139\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11712:11763  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_298:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11482:11788  if (currentAllowance != type(uint256).max) {... */\n    tag_295:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11410:11794  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11320:11794  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7553:7855  function _transfer(address from, address to, uint256 amount) internal {... */\n    tag_146:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7653:7654  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7637:7655  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7637:7641  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7637:7655  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7633:7719  if (from == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7705:7706  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7678:7708  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7633:7719  if (from == address(0)) {... */\n    tag_300:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7746:7747  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7732:7748  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7732:7734  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7732:7748  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7728:7814  if (to == address(0)) {... */\n      tag_302\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7800:7801  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7771:7803  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7728:7814  if (to == address(0)) {... */\n    tag_302:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7823:7848  _update(from, to, amount) */\n      tag_304\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7831:7835  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7837:7839  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7841:7847  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7823:7830  _update */\n      tag_305\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7823:7848  _update(from, to, amount) */\n      jump\t// in\n    tag_304:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7553:7855  function _transfer(address from, address to, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9504:9714  function _mint(address account, uint256 amount) internal {... */\n    tag_164:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9594:9595  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9575:9596  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9575:9582  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9575:9596  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9571:9662  if (account == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9648:9649  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9619:9651  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9571:9662  if (account == address(0)) {... */\n    tag_307:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9671:9707  _update(address(0), account, amount) */\n      tag_309\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9687:9688  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9691:9698  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9700:9706  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9671:9678  _update */\n      tag_305\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9671:9707  _update(address(0), account, amount) */\n      jump\t// in\n    tag_309:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9504:9714  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Exchange.sol\":1643:2116  function getAmount(... */\n    tag_197:\n        /* \"contracts/Exchange.sol\":1783:1790  uint256 */\n      0x00\n        /* \"contracts/Exchange.sol\":1826:1827  0 */\n      dup1\n        /* \"contracts/Exchange.sol\":1811:1823  inputReserve */\n      dup4\n        /* \"contracts/Exchange.sol\":1811:1827  inputReserve > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":1811:1848  inputReserve > 0 && outputReserve > 0 */\n      dup1\n      iszero\n      tag_311\n      jumpi\n      pop\n        /* \"contracts/Exchange.sol\":1847:1848  0 */\n      0x00\n        /* \"contracts/Exchange.sol\":1831:1844  outputReserve */\n      dup3\n        /* \"contracts/Exchange.sol\":1831:1848  outputReserve > 0 */\n      gt\n        /* \"contracts/Exchange.sol\":1811:1848  inputReserve > 0 && outputReserve > 0 */\n    tag_311:\n        /* \"contracts/Exchange.sol\":1803:1868  require(inputReserve > 0 && outputReserve > 0, \"Invalid reserve\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_312:\n        /* \"contracts/Exchange.sol\":1881:1907  uint256 inputAmountWithFee */\n      0x00\n        /* \"contracts/Exchange.sol\":1924:1926  99 */\n      0x63\n        /* \"contracts/Exchange.sol\":1910:1921  inputAmount */\n      dup6\n        /* \"contracts/Exchange.sol\":1910:1926  inputAmount * 99 */\n      tag_315\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_315:\n        /* \"contracts/Exchange.sol\":1881:1926  uint256 inputAmountWithFee = inputAmount * 99 */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":1937:1954  uint256 numerator */\n      0x00\n        /* \"contracts/Exchange.sol\":1978:1991  outputReserve */\n      dup4\n        /* \"contracts/Exchange.sol\":1957:1975  inputAmountWithFee */\n      dup3\n        /* \"contracts/Exchange.sol\":1957:1991  inputAmountWithFee * outputReserve */\n      tag_316\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_316:\n        /* \"contracts/Exchange.sol\":1937:1991  uint256 numerator = inputAmountWithFee * outputReserve */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":2002:2021  uint256 denominator */\n      0x00\n        /* \"contracts/Exchange.sol\":2047:2065  inputAmountWithFee */\n      dup3\n        /* \"contracts/Exchange.sol\":2040:2043  100 */\n      0x64\n        /* \"contracts/Exchange.sol\":2025:2037  inputReserve */\n      dup8\n        /* \"contracts/Exchange.sol\":2025:2043  inputReserve * 100 */\n      tag_317\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_317:\n        /* \"contracts/Exchange.sol\":2024:2065  (inputReserve * 100) + inputAmountWithFee */\n      tag_318\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_318:\n        /* \"contracts/Exchange.sol\":2002:2065  uint256 denominator = (inputReserve * 100) + inputAmountWithFee */\n      swap1\n      pop\n        /* \"contracts/Exchange.sol\":2097:2108  denominator */\n      dup1\n        /* \"contracts/Exchange.sol\":2085:2094  numerator */\n      dup3\n        /* \"contracts/Exchange.sol\":2085:2108  numerator / denominator */\n      tag_319\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_319:\n        /* \"contracts/Exchange.sol\":2078:2108  return numerator / denominator */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Exchange.sol\":1643:2116  function getAmount(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10028:10236  function _burn(address account, uint256 amount) internal {... */\n    tag_216:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10118:10119  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10099:10120  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10099:10106  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10099:10120  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10095:10184  if (account == address(0)) {... */\n      tag_321\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10170:10171  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10143:10173  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_322\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10095:10184  if (account == address(0)) {... */\n    tag_321:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10193:10229  _update(account, address(0), amount) */\n      tag_323\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10201:10208  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10218:10219  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10222:10228  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10193:10200  _update */\n      tag_305\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10193:10229  _update(account, address(0), amount) */\n      jump\t// in\n    tag_323:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10028:10236  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8155:9172  function _update(address from, address to, uint256 amount) internal virtual {... */\n    tag_305:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8261:8262  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8245:8263  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8245:8249  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8245:8263  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8241:8684  if (from == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8295:8301  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8279:8291  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8279:8301  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_326\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_326:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8241:8684  if (from == address(0)) {... */\n      jump(tag_327)\n    tag_325:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8332:8351  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8354:8363  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8354:8369  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8364:8368  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8354:8369  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8332:8369  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8401:8407  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8387:8398  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8387:8407  fromBalance < amount */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8383:8500  if (fromBalance < amount) {... */\n      iszero\n      tag_328\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8459:8463  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8465:8476  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8478:8484  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8434:8485  ERC20InsufficientBalance(from, fromBalance, amount) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8383:8500  if (fromBalance < amount) {... */\n    tag_328:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8653:8659  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8639:8650  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8639:8659  fromBalance - amount */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8621:8630  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8621:8636  _balances[from] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8631:8635  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8621:8636  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8621:8659  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8318:8684  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8241:8684  if (from == address(0)) {... */\n    tag_327:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8712:8713  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8698:8714  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8698:8700  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8698:8714  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8694:9124  if (to == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8879:8885  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8863:8875  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8863:8885  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8694:9124  if (to == address(0)) {... */\n      jump(tag_331)\n    tag_330:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9093:9099  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9076:9085  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9076:9089  _balances[to] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9086:9088  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9076:9089  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9076:9099  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8694:9124  if (to == address(0)) {... */\n    tag_331:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9154:9156  to */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9139:9165  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9148:9152  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9139:9165  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9158:9164  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9139:9165  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_332\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8155:9172  function _update(address from, address to, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_333:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_334:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_335:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_377:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_377)\n    tag_379:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_336:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_337:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_382\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_333\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":818:889   */\n      tag_383\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_334\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_384\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_335\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":988:1017   */\n      tag_385\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_336\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_30:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_387\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_337\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_339:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_341:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_342:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_393\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_341\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_343:\n        /* \"#utility.yul\":1983:2007   */\n      tag_395\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_342\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_396:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_344:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_398\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_343\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_345:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_346:\n        /* \"#utility.yul\":2339:2363   */\n      tag_401\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_345\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_402:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_347:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_404\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_346\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_34:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_407\n      tag_339\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":2632:2751   */\n    tag_406:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_408\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_344\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_409\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_347\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_348:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_349:\n        /* \"#utility.yul\":3196:3217   */\n      tag_412\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_348\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_37:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_414\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_349\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_350:\n        /* \"#utility.yul\":3533:3557   */\n      tag_416\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_345\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_42:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_418\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_350\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_46:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_421\n      tag_339\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":3908:4027   */\n    tag_420:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_422\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_344\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_423\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_344\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_424\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_347\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_351:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_352:\n        /* \"#utility.yul\":4598:4620   */\n      tag_427\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_351\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_53:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_429\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_352\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_61:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_432\n      tag_339\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":4929:5048   */\n    tag_431:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_433\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_347\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_70:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_436\n      tag_339\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":5264:5383   */\n    tag_435:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_437\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_344\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5641   */\n    tag_353:\n        /* \"#utility.yul\":5610:5634   */\n      tag_439\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5610:5634   */\n      tag_342\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5598:5635   */\n      mstore\n        /* \"#utility.yul\":5523:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5869   */\n    tag_86:\n        /* \"#utility.yul\":5740:5744   */\n      0x00\n        /* \"#utility.yul\":5778:5780   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5763:5781   */\n      add\n        /* \"#utility.yul\":5755:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5862   */\n      tag_441\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5835:5841   */\n      dup5\n        /* \"#utility.yul\":5791:5862   */\n      tag_353\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":5647:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:6349   */\n    tag_112:\n        /* \"#utility.yul\":5943:5949   */\n      0x00\n        /* \"#utility.yul\":5951:5957   */\n      dup1\n        /* \"#utility.yul\":6000:6002   */\n      0x40\n        /* \"#utility.yul\":5988:5997   */\n      dup4\n        /* \"#utility.yul\":5979:5986   */\n      dup6\n        /* \"#utility.yul\":5975:5998   */\n      sub\n        /* \"#utility.yul\":5971:6003   */\n      slt\n        /* \"#utility.yul\":5968:6087   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":6006:6085   */\n      tag_444\n      tag_339\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5968:6087   */\n    tag_443:\n        /* \"#utility.yul\":6126:6127   */\n      0x00\n        /* \"#utility.yul\":6151:6204   */\n      tag_445\n        /* \"#utility.yul\":6196:6203   */\n      dup6\n        /* \"#utility.yul\":6187:6193   */\n      dup3\n        /* \"#utility.yul\":6176:6185   */\n      dup7\n        /* \"#utility.yul\":6172:6194   */\n      add\n        /* \"#utility.yul\":6151:6204   */\n      tag_344\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":6141:6204   */\n      swap3\n      pop\n        /* \"#utility.yul\":6097:6214   */\n      pop\n        /* \"#utility.yul\":6253:6255   */\n      0x20\n        /* \"#utility.yul\":6279:6332   */\n      tag_446\n        /* \"#utility.yul\":6324:6331   */\n      dup6\n        /* \"#utility.yul\":6315:6321   */\n      dup3\n        /* \"#utility.yul\":6304:6313   */\n      dup7\n        /* \"#utility.yul\":6300:6322   */\n      add\n        /* \"#utility.yul\":6279:6332   */\n      tag_344\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":6269:6332   */\n      swap2\n      pop\n        /* \"#utility.yul\":6224:6342   */\n      pop\n        /* \"#utility.yul\":5875:6349   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6355:6829   */\n    tag_117:\n        /* \"#utility.yul\":6423:6429   */\n      0x00\n        /* \"#utility.yul\":6431:6437   */\n      dup1\n        /* \"#utility.yul\":6480:6482   */\n      0x40\n        /* \"#utility.yul\":6468:6477   */\n      dup4\n        /* \"#utility.yul\":6459:6466   */\n      dup6\n        /* \"#utility.yul\":6455:6478   */\n      sub\n        /* \"#utility.yul\":6451:6483   */\n      slt\n        /* \"#utility.yul\":6448:6567   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":6486:6565   */\n      tag_449\n      tag_339\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":6448:6567   */\n    tag_448:\n        /* \"#utility.yul\":6606:6607   */\n      0x00\n        /* \"#utility.yul\":6631:6684   */\n      tag_450\n        /* \"#utility.yul\":6676:6683   */\n      dup6\n        /* \"#utility.yul\":6667:6673   */\n      dup3\n        /* \"#utility.yul\":6656:6665   */\n      dup7\n        /* \"#utility.yul\":6652:6674   */\n      add\n        /* \"#utility.yul\":6631:6684   */\n      tag_347\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":6621:6684   */\n      swap3\n      pop\n        /* \"#utility.yul\":6577:6694   */\n      pop\n        /* \"#utility.yul\":6733:6735   */\n      0x20\n        /* \"#utility.yul\":6759:6812   */\n      tag_451\n        /* \"#utility.yul\":6804:6811   */\n      dup6\n        /* \"#utility.yul\":6795:6801   */\n      dup3\n        /* \"#utility.yul\":6784:6793   */\n      dup7\n        /* \"#utility.yul\":6780:6802   */\n      add\n        /* \"#utility.yul\":6759:6812   */\n      tag_347\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":6749:6812   */\n      swap2\n      pop\n        /* \"#utility.yul\":6704:6822   */\n      pop\n        /* \"#utility.yul\":6355:6829   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6835:7454   */\n    tag_122:\n        /* \"#utility.yul\":6912:6918   */\n      0x00\n        /* \"#utility.yul\":6920:6926   */\n      dup1\n        /* \"#utility.yul\":6928:6934   */\n      0x00\n        /* \"#utility.yul\":6977:6979   */\n      0x60\n        /* \"#utility.yul\":6965:6974   */\n      dup5\n        /* \"#utility.yul\":6956:6963   */\n      dup7\n        /* \"#utility.yul\":6952:6975   */\n      sub\n        /* \"#utility.yul\":6948:6980   */\n      slt\n        /* \"#utility.yul\":6945:7064   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":6983:7062   */\n      tag_454\n      tag_339\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":6945:7064   */\n    tag_453:\n        /* \"#utility.yul\":7103:7104   */\n      0x00\n        /* \"#utility.yul\":7128:7181   */\n      tag_455\n        /* \"#utility.yul\":7173:7180   */\n      dup7\n        /* \"#utility.yul\":7164:7170   */\n      dup3\n        /* \"#utility.yul\":7153:7162   */\n      dup8\n        /* \"#utility.yul\":7149:7171   */\n      add\n        /* \"#utility.yul\":7128:7181   */\n      tag_347\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":7118:7181   */\n      swap4\n      pop\n        /* \"#utility.yul\":7074:7191   */\n      pop\n        /* \"#utility.yul\":7230:7232   */\n      0x20\n        /* \"#utility.yul\":7256:7309   */\n      tag_456\n        /* \"#utility.yul\":7301:7308   */\n      dup7\n        /* \"#utility.yul\":7292:7298   */\n      dup3\n        /* \"#utility.yul\":7281:7290   */\n      dup8\n        /* \"#utility.yul\":7277:7299   */\n      add\n        /* \"#utility.yul\":7256:7309   */\n      tag_347\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":7246:7309   */\n      swap3\n      pop\n        /* \"#utility.yul\":7201:7319   */\n      pop\n        /* \"#utility.yul\":7358:7360   */\n      0x40\n        /* \"#utility.yul\":7384:7437   */\n      tag_457\n        /* \"#utility.yul\":7429:7436   */\n      dup7\n        /* \"#utility.yul\":7420:7426   */\n      dup3\n        /* \"#utility.yul\":7409:7418   */\n      dup8\n        /* \"#utility.yul\":7405:7427   */\n      add\n        /* \"#utility.yul\":7384:7437   */\n      tag_344\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":7374:7437   */\n      swap2\n      pop\n        /* \"#utility.yul\":7329:7447   */\n      pop\n        /* \"#utility.yul\":6835:7454   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7460:7640   */\n    tag_354:\n        /* \"#utility.yul\":7508:7585   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7505:7506   */\n      0x00\n        /* \"#utility.yul\":7498:7586   */\n      mstore\n        /* \"#utility.yul\":7605:7609   */\n      0x22\n        /* \"#utility.yul\":7602:7603   */\n      0x04\n        /* \"#utility.yul\":7595:7610   */\n      mstore\n        /* \"#utility.yul\":7629:7633   */\n      0x24\n        /* \"#utility.yul\":7626:7627   */\n      0x00\n        /* \"#utility.yul\":7619:7634   */\n      revert\n        /* \"#utility.yul\":7646:7966   */\n    tag_130:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7727:7728   */\n      0x02\n        /* \"#utility.yul\":7721:7725   */\n      dup3\n        /* \"#utility.yul\":7717:7729   */\n      div\n        /* \"#utility.yul\":7707:7729   */\n      swap1\n      pop\n        /* \"#utility.yul\":7774:7775   */\n      0x01\n        /* \"#utility.yul\":7768:7772   */\n      dup3\n        /* \"#utility.yul\":7764:7776   */\n      and\n        /* \"#utility.yul\":7795:7813   */\n      dup1\n        /* \"#utility.yul\":7785:7866   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":7851:7855   */\n      0x7f\n        /* \"#utility.yul\":7843:7849   */\n      dup3\n        /* \"#utility.yul\":7839:7856   */\n      and\n        /* \"#utility.yul\":7829:7856   */\n      swap2\n      pop\n        /* \"#utility.yul\":7785:7866   */\n    tag_460:\n        /* \"#utility.yul\":7913:7915   */\n      0x20\n        /* \"#utility.yul\":7905:7911   */\n      dup3\n        /* \"#utility.yul\":7902:7916   */\n      lt\n        /* \"#utility.yul\":7882:7900   */\n      dup2\n        /* \"#utility.yul\":7879:7917   */\n      sub\n        /* \"#utility.yul\":7876:7960   */\n      tag_461\n      jumpi\n        /* \"#utility.yul\":7932:7950   */\n      tag_462\n      tag_354\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":7876:7960   */\n    tag_461:\n        /* \"#utility.yul\":7697:7966   */\n      pop\n        /* \"#utility.yul\":7646:7966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7972:8152   */\n    tag_355:\n        /* \"#utility.yul\":8020:8097   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8017:8018   */\n      0x00\n        /* \"#utility.yul\":8010:8098   */\n      mstore\n        /* \"#utility.yul\":8117:8121   */\n      0x11\n        /* \"#utility.yul\":8114:8115   */\n      0x04\n        /* \"#utility.yul\":8107:8122   */\n      mstore\n        /* \"#utility.yul\":8141:8145   */\n      0x24\n        /* \"#utility.yul\":8138:8139   */\n      0x00\n        /* \"#utility.yul\":8131:8146   */\n      revert\n        /* \"#utility.yul\":8158:8349   */\n    tag_153:\n        /* \"#utility.yul\":8198:8201   */\n      0x00\n        /* \"#utility.yul\":8217:8237   */\n      tag_465\n        /* \"#utility.yul\":8235:8236   */\n      dup3\n        /* \"#utility.yul\":8217:8237   */\n      tag_345\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":8212:8237   */\n      swap2\n      pop\n        /* \"#utility.yul\":8251:8271   */\n      tag_466\n        /* \"#utility.yul\":8269:8270   */\n      dup4\n        /* \"#utility.yul\":8251:8271   */\n      tag_345\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":8246:8271   */\n      swap3\n      pop\n        /* \"#utility.yul\":8294:8295   */\n      dup3\n        /* \"#utility.yul\":8291:8292   */\n      dup3\n        /* \"#utility.yul\":8287:8296   */\n      add\n        /* \"#utility.yul\":8280:8296   */\n      swap1\n      pop\n        /* \"#utility.yul\":8315:8318   */\n      dup1\n        /* \"#utility.yul\":8312:8313   */\n      dup3\n        /* \"#utility.yul\":8309:8319   */\n      gt\n        /* \"#utility.yul\":8306:8342   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":8322:8340   */\n      tag_468\n      tag_355\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":8306:8342   */\n    tag_467:\n        /* \"#utility.yul\":8158:8349   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8355:8797   */\n    tag_158:\n        /* \"#utility.yul\":8504:8508   */\n      0x00\n        /* \"#utility.yul\":8542:8544   */\n      0x60\n        /* \"#utility.yul\":8531:8540   */\n      dup3\n        /* \"#utility.yul\":8527:8545   */\n      add\n        /* \"#utility.yul\":8519:8545   */\n      swap1\n      pop\n        /* \"#utility.yul\":8555:8626   */\n      tag_470\n        /* \"#utility.yul\":8623:8624   */\n      0x00\n        /* \"#utility.yul\":8612:8621   */\n      dup4\n        /* \"#utility.yul\":8608:8625   */\n      add\n        /* \"#utility.yul\":8599:8605   */\n      dup7\n        /* \"#utility.yul\":8555:8626   */\n      tag_353\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":8636:8708   */\n      tag_471\n        /* \"#utility.yul\":8704:8706   */\n      0x20\n        /* \"#utility.yul\":8693:8702   */\n      dup4\n        /* \"#utility.yul\":8689:8707   */\n      add\n        /* \"#utility.yul\":8680:8686   */\n      dup6\n        /* \"#utility.yul\":8636:8708   */\n      tag_353\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":8718:8790   */\n      tag_472\n        /* \"#utility.yul\":8786:8788   */\n      0x40\n        /* \"#utility.yul\":8775:8784   */\n      dup4\n        /* \"#utility.yul\":8771:8789   */\n      add\n        /* \"#utility.yul\":8762:8768   */\n      dup5\n        /* \"#utility.yul\":8718:8790   */\n      tag_350\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":8355:8797   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8803:8919   */\n    tag_356:\n        /* \"#utility.yul\":8873:8894   */\n      tag_474\n        /* \"#utility.yul\":8888:8893   */\n      dup2\n        /* \"#utility.yul\":8873:8894   */\n      tag_348\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":8866:8871   */\n      dup2\n        /* \"#utility.yul\":8863:8895   */\n      eq\n        /* \"#utility.yul\":8853:8913   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":8909:8910   */\n      0x00\n        /* \"#utility.yul\":8906:8907   */\n      dup1\n        /* \"#utility.yul\":8899:8911   */\n      revert\n        /* \"#utility.yul\":8853:8913   */\n    tag_475:\n        /* \"#utility.yul\":8803:8919   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8925:9062   */\n    tag_357:\n        /* \"#utility.yul\":8979:8984   */\n      0x00\n        /* \"#utility.yul\":9010:9016   */\n      dup2\n        /* \"#utility.yul\":9004:9017   */\n      mload\n        /* \"#utility.yul\":8995:9017   */\n      swap1\n      pop\n        /* \"#utility.yul\":9026:9056   */\n      tag_477\n        /* \"#utility.yul\":9050:9055   */\n      dup2\n        /* \"#utility.yul\":9026:9056   */\n      tag_356\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":8925:9062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9068:9413   */\n    tag_162:\n        /* \"#utility.yul\":9135:9141   */\n      0x00\n        /* \"#utility.yul\":9184:9186   */\n      0x20\n        /* \"#utility.yul\":9172:9181   */\n      dup3\n        /* \"#utility.yul\":9163:9170   */\n      dup5\n        /* \"#utility.yul\":9159:9182   */\n      sub\n        /* \"#utility.yul\":9155:9187   */\n      slt\n        /* \"#utility.yul\":9152:9271   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":9190:9269   */\n      tag_480\n      tag_339\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":9152:9271   */\n    tag_479:\n        /* \"#utility.yul\":9310:9311   */\n      0x00\n        /* \"#utility.yul\":9335:9396   */\n      tag_481\n        /* \"#utility.yul\":9388:9395   */\n      dup5\n        /* \"#utility.yul\":9379:9385   */\n      dup3\n        /* \"#utility.yul\":9368:9377   */\n      dup6\n        /* \"#utility.yul\":9364:9386   */\n      add\n        /* \"#utility.yul\":9335:9396   */\n      tag_357\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":9325:9396   */\n      swap2\n      pop\n        /* \"#utility.yul\":9281:9406   */\n      pop\n        /* \"#utility.yul\":9068:9413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9419:9613   */\n    tag_167:\n        /* \"#utility.yul\":9459:9463   */\n      0x00\n        /* \"#utility.yul\":9479:9499   */\n      tag_483\n        /* \"#utility.yul\":9497:9498   */\n      dup3\n        /* \"#utility.yul\":9479:9499   */\n      tag_345\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":9474:9499   */\n      swap2\n      pop\n        /* \"#utility.yul\":9513:9533   */\n      tag_484\n        /* \"#utility.yul\":9531:9532   */\n      dup4\n        /* \"#utility.yul\":9513:9533   */\n      tag_345\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":9508:9533   */\n      swap3\n      pop\n        /* \"#utility.yul\":9557:9558   */\n      dup3\n        /* \"#utility.yul\":9554:9555   */\n      dup3\n        /* \"#utility.yul\":9550:9559   */\n      sub\n        /* \"#utility.yul\":9542:9559   */\n      swap1\n      pop\n        /* \"#utility.yul\":9581:9582   */\n      dup2\n        /* \"#utility.yul\":9575:9579   */\n      dup2\n        /* \"#utility.yul\":9572:9583   */\n      gt\n        /* \"#utility.yul\":9569:9606   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":9586:9604   */\n      tag_486\n      tag_355\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":9569:9606   */\n    tag_485:\n        /* \"#utility.yul\":9419:9613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9619:10029   */\n    tag_170:\n        /* \"#utility.yul\":9659:9666   */\n      0x00\n        /* \"#utility.yul\":9682:9702   */\n      tag_488\n        /* \"#utility.yul\":9700:9701   */\n      dup3\n        /* \"#utility.yul\":9682:9702   */\n      tag_345\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":9677:9702   */\n      swap2\n      pop\n        /* \"#utility.yul\":9716:9736   */\n      tag_489\n        /* \"#utility.yul\":9734:9735   */\n      dup4\n        /* \"#utility.yul\":9716:9736   */\n      tag_345\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":9711:9736   */\n      swap3\n      pop\n        /* \"#utility.yul\":9771:9772   */\n      dup3\n        /* \"#utility.yul\":9768:9769   */\n      dup3\n        /* \"#utility.yul\":9764:9773   */\n      mul\n        /* \"#utility.yul\":9793:9823   */\n      tag_490\n        /* \"#utility.yul\":9811:9822   */\n      dup2\n        /* \"#utility.yul\":9793:9823   */\n      tag_345\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":9782:9823   */\n      swap2\n      pop\n        /* \"#utility.yul\":9972:9973   */\n      dup3\n        /* \"#utility.yul\":9963:9970   */\n      dup3\n        /* \"#utility.yul\":9959:9974   */\n      div\n        /* \"#utility.yul\":9956:9957   */\n      dup5\n        /* \"#utility.yul\":9953:9975   */\n      eq\n        /* \"#utility.yul\":9933:9934   */\n      dup4\n        /* \"#utility.yul\":9926:9935   */\n      iszero\n        /* \"#utility.yul\":9906:9989   */\n      or\n        /* \"#utility.yul\":9883:10022   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":10002:10020   */\n      tag_492\n      tag_355\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":9883:10022   */\n    tag_491:\n        /* \"#utility.yul\":9667:10029   */\n      pop\n        /* \"#utility.yul\":9619:10029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10035:10215   */\n    tag_358:\n        /* \"#utility.yul\":10083:10160   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10080:10081   */\n      0x00\n        /* \"#utility.yul\":10073:10161   */\n      mstore\n        /* \"#utility.yul\":10180:10184   */\n      0x12\n        /* \"#utility.yul\":10177:10178   */\n      0x04\n        /* \"#utility.yul\":10170:10185   */\n      mstore\n        /* \"#utility.yul\":10204:10208   */\n      0x24\n        /* \"#utility.yul\":10201:10202   */\n      0x00\n        /* \"#utility.yul\":10194:10209   */\n      revert\n        /* \"#utility.yul\":10221:10406   */\n    tag_172:\n        /* \"#utility.yul\":10261:10262   */\n      0x00\n        /* \"#utility.yul\":10278:10298   */\n      tag_495\n        /* \"#utility.yul\":10296:10297   */\n      dup3\n        /* \"#utility.yul\":10278:10298   */\n      tag_345\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":10273:10298   */\n      swap2\n      pop\n        /* \"#utility.yul\":10312:10332   */\n      tag_496\n        /* \"#utility.yul\":10330:10331   */\n      dup4\n        /* \"#utility.yul\":10312:10332   */\n      tag_345\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":10307:10332   */\n      swap3\n      pop\n        /* \"#utility.yul\":10351:10352   */\n      dup3\n        /* \"#utility.yul\":10341:10376   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":10356:10374   */\n      tag_498\n      tag_358\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":10341:10376   */\n    tag_497:\n        /* \"#utility.yul\":10398:10399   */\n      dup3\n        /* \"#utility.yul\":10395:10396   */\n      dup3\n        /* \"#utility.yul\":10391:10400   */\n      div\n        /* \"#utility.yul\":10386:10400   */\n      swap1\n      pop\n        /* \"#utility.yul\":10221:10406   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10412:10587   */\n    tag_359:\n        /* \"#utility.yul\":10552:10579   */\n      0x496e73756666696369656e7420746f6b656e20616d6f756e7400000000000000\n        /* \"#utility.yul\":10548:10549   */\n      0x00\n        /* \"#utility.yul\":10540:10546   */\n      dup3\n        /* \"#utility.yul\":10536:10550   */\n      add\n        /* \"#utility.yul\":10529:10580   */\n      mstore\n        /* \"#utility.yul\":10412:10587   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10593:10959   */\n    tag_360:\n        /* \"#utility.yul\":10735:10738   */\n      0x00\n        /* \"#utility.yul\":10756:10823   */\n      tag_501\n        /* \"#utility.yul\":10820:10822   */\n      0x19\n        /* \"#utility.yul\":10815:10818   */\n      dup4\n        /* \"#utility.yul\":10756:10823   */\n      tag_334\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":10749:10823   */\n      swap2\n      pop\n        /* \"#utility.yul\":10832:10925   */\n      tag_502\n        /* \"#utility.yul\":10921:10924   */\n      dup3\n        /* \"#utility.yul\":10832:10925   */\n      tag_359\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":10950:10952   */\n      0x20\n        /* \"#utility.yul\":10945:10948   */\n      dup3\n        /* \"#utility.yul\":10941:10953   */\n      add\n        /* \"#utility.yul\":10934:10953   */\n      swap1\n      pop\n        /* \"#utility.yul\":10593:10959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10965:11384   */\n    tag_175:\n        /* \"#utility.yul\":11131:11135   */\n      0x00\n        /* \"#utility.yul\":11169:11171   */\n      0x20\n        /* \"#utility.yul\":11158:11167   */\n      dup3\n        /* \"#utility.yul\":11154:11172   */\n      add\n        /* \"#utility.yul\":11146:11172   */\n      swap1\n      pop\n        /* \"#utility.yul\":11218:11227   */\n      dup2\n        /* \"#utility.yul\":11212:11216   */\n      dup2\n        /* \"#utility.yul\":11208:11228   */\n      sub\n        /* \"#utility.yul\":11204:11205   */\n      0x00\n        /* \"#utility.yul\":11193:11202   */\n      dup4\n        /* \"#utility.yul\":11189:11206   */\n      add\n        /* \"#utility.yul\":11182:11229   */\n      mstore\n        /* \"#utility.yul\":11246:11377   */\n      tag_504\n        /* \"#utility.yul\":11372:11376   */\n      dup2\n        /* \"#utility.yul\":11246:11377   */\n      tag_360\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":11238:11377   */\n      swap1\n      pop\n        /* \"#utility.yul\":10965:11384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11390:11533   */\n    tag_361:\n        /* \"#utility.yul\":11447:11452   */\n      0x00\n        /* \"#utility.yul\":11478:11484   */\n      dup2\n        /* \"#utility.yul\":11472:11485   */\n      mload\n        /* \"#utility.yul\":11463:11485   */\n      swap1\n      pop\n        /* \"#utility.yul\":11494:11527   */\n      tag_506\n        /* \"#utility.yul\":11521:11526   */\n      dup2\n        /* \"#utility.yul\":11494:11527   */\n      tag_346\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":11390:11533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11539:11890   */\n    tag_189:\n        /* \"#utility.yul\":11609:11615   */\n      0x00\n        /* \"#utility.yul\":11658:11660   */\n      0x20\n        /* \"#utility.yul\":11646:11655   */\n      dup3\n        /* \"#utility.yul\":11637:11644   */\n      dup5\n        /* \"#utility.yul\":11633:11656   */\n      sub\n        /* \"#utility.yul\":11629:11661   */\n      slt\n        /* \"#utility.yul\":11626:11745   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":11664:11743   */\n      tag_509\n      tag_339\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":11626:11745   */\n    tag_508:\n        /* \"#utility.yul\":11784:11785   */\n      0x00\n        /* \"#utility.yul\":11809:11873   */\n      tag_510\n        /* \"#utility.yul\":11865:11872   */\n      dup5\n        /* \"#utility.yul\":11856:11862   */\n      dup3\n        /* \"#utility.yul\":11845:11854   */\n      dup6\n        /* \"#utility.yul\":11841:11863   */\n      add\n        /* \"#utility.yul\":11809:11873   */\n      tag_361\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":11799:11873   */\n      swap2\n      pop\n        /* \"#utility.yul\":11755:11883   */\n      pop\n        /* \"#utility.yul\":11539:11890   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11896:12059   */\n    tag_362:\n        /* \"#utility.yul\":12036:12051   */\n      0x496e76616c696420696e70757400000000000000000000000000000000000000\n        /* \"#utility.yul\":12032:12033   */\n      0x00\n        /* \"#utility.yul\":12024:12030   */\n      dup3\n        /* \"#utility.yul\":12020:12034   */\n      add\n        /* \"#utility.yul\":12013:12052   */\n      mstore\n        /* \"#utility.yul\":11896:12059   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12065:12431   */\n    tag_363:\n        /* \"#utility.yul\":12207:12210   */\n      0x00\n        /* \"#utility.yul\":12228:12295   */\n      tag_513\n        /* \"#utility.yul\":12292:12294   */\n      0x0d\n        /* \"#utility.yul\":12287:12290   */\n      dup4\n        /* \"#utility.yul\":12228:12295   */\n      tag_334\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":12221:12295   */\n      swap2\n      pop\n        /* \"#utility.yul\":12304:12397   */\n      tag_514\n        /* \"#utility.yul\":12393:12396   */\n      dup3\n        /* \"#utility.yul\":12304:12397   */\n      tag_362\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":12422:12424   */\n      0x20\n        /* \"#utility.yul\":12417:12420   */\n      dup3\n        /* \"#utility.yul\":12413:12425   */\n      add\n        /* \"#utility.yul\":12406:12425   */\n      swap1\n      pop\n        /* \"#utility.yul\":12065:12431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12437:12856   */\n    tag_194:\n        /* \"#utility.yul\":12603:12607   */\n      0x00\n        /* \"#utility.yul\":12641:12643   */\n      0x20\n        /* \"#utility.yul\":12630:12639   */\n      dup3\n        /* \"#utility.yul\":12626:12644   */\n      add\n        /* \"#utility.yul\":12618:12644   */\n      swap1\n      pop\n        /* \"#utility.yul\":12690:12699   */\n      dup2\n        /* \"#utility.yul\":12684:12688   */\n      dup2\n        /* \"#utility.yul\":12680:12700   */\n      sub\n        /* \"#utility.yul\":12676:12677   */\n      0x00\n        /* \"#utility.yul\":12665:12674   */\n      dup4\n        /* \"#utility.yul\":12661:12678   */\n      add\n        /* \"#utility.yul\":12654:12701   */\n      mstore\n        /* \"#utility.yul\":12718:12849   */\n      tag_516\n        /* \"#utility.yul\":12844:12848   */\n      dup2\n        /* \"#utility.yul\":12718:12849   */\n      tag_363\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":12710:12849   */\n      swap1\n      pop\n        /* \"#utility.yul\":12437:12856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12862:13034   */\n    tag_364:\n        /* \"#utility.yul\":13002:13026   */\n      0x496e73756666696369656e74206c697175696469747900000000000000000000\n        /* \"#utility.yul\":12998:12999   */\n      0x00\n        /* \"#utility.yul\":12990:12996   */\n      dup3\n        /* \"#utility.yul\":12986:13000   */\n      add\n        /* \"#utility.yul\":12979:13027   */\n      mstore\n        /* \"#utility.yul\":12862:13034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13040:13406   */\n    tag_365:\n        /* \"#utility.yul\":13182:13185   */\n      0x00\n        /* \"#utility.yul\":13203:13270   */\n      tag_519\n        /* \"#utility.yul\":13267:13269   */\n      0x16\n        /* \"#utility.yul\":13262:13265   */\n      dup4\n        /* \"#utility.yul\":13203:13270   */\n      tag_334\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":13196:13270   */\n      swap2\n      pop\n        /* \"#utility.yul\":13279:13372   */\n      tag_520\n        /* \"#utility.yul\":13368:13371   */\n      dup3\n        /* \"#utility.yul\":13279:13372   */\n      tag_364\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":13397:13399   */\n      0x20\n        /* \"#utility.yul\":13392:13395   */\n      dup3\n        /* \"#utility.yul\":13388:13400   */\n      add\n        /* \"#utility.yul\":13381:13400   */\n      swap1\n      pop\n        /* \"#utility.yul\":13040:13406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13412:13831   */\n    tag_207:\n        /* \"#utility.yul\":13578:13582   */\n      0x00\n        /* \"#utility.yul\":13616:13618   */\n      0x20\n        /* \"#utility.yul\":13605:13614   */\n      dup3\n        /* \"#utility.yul\":13601:13619   */\n      add\n        /* \"#utility.yul\":13593:13619   */\n      swap1\n      pop\n        /* \"#utility.yul\":13665:13674   */\n      dup2\n        /* \"#utility.yul\":13659:13663   */\n      dup2\n        /* \"#utility.yul\":13655:13675   */\n      sub\n        /* \"#utility.yul\":13651:13652   */\n      0x00\n        /* \"#utility.yul\":13640:13649   */\n      dup4\n        /* \"#utility.yul\":13636:13653   */\n      add\n        /* \"#utility.yul\":13629:13676   */\n      mstore\n        /* \"#utility.yul\":13693:13824   */\n      tag_522\n        /* \"#utility.yul\":13819:13823   */\n      dup2\n        /* \"#utility.yul\":13693:13824   */\n      tag_365\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":13685:13824   */\n      swap1\n      pop\n        /* \"#utility.yul\":13412:13831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13837:14169   */\n    tag_220:\n        /* \"#utility.yul\":13958:13962   */\n      0x00\n        /* \"#utility.yul\":13996:13998   */\n      0x40\n        /* \"#utility.yul\":13985:13994   */\n      dup3\n        /* \"#utility.yul\":13981:13999   */\n      add\n        /* \"#utility.yul\":13973:13999   */\n      swap1\n      pop\n        /* \"#utility.yul\":14009:14080   */\n      tag_524\n        /* \"#utility.yul\":14077:14078   */\n      0x00\n        /* \"#utility.yul\":14066:14075   */\n      dup4\n        /* \"#utility.yul\":14062:14079   */\n      add\n        /* \"#utility.yul\":14053:14059   */\n      dup6\n        /* \"#utility.yul\":14009:14080   */\n      tag_353\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":14090:14162   */\n      tag_525\n        /* \"#utility.yul\":14158:14160   */\n      0x20\n        /* \"#utility.yul\":14147:14156   */\n      dup4\n        /* \"#utility.yul\":14143:14161   */\n      add\n        /* \"#utility.yul\":14134:14140   */\n      dup5\n        /* \"#utility.yul\":14090:14162   */\n      tag_350\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":13837:14169   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14175:14617   */\n    tag_229:\n        /* \"#utility.yul\":14324:14328   */\n      0x00\n        /* \"#utility.yul\":14362:14364   */\n      0x60\n        /* \"#utility.yul\":14351:14360   */\n      dup3\n        /* \"#utility.yul\":14347:14365   */\n      add\n        /* \"#utility.yul\":14339:14365   */\n      swap1\n      pop\n        /* \"#utility.yul\":14375:14446   */\n      tag_527\n        /* \"#utility.yul\":14443:14444   */\n      0x00\n        /* \"#utility.yul\":14432:14441   */\n      dup4\n        /* \"#utility.yul\":14428:14445   */\n      add\n        /* \"#utility.yul\":14419:14425   */\n      dup7\n        /* \"#utility.yul\":14375:14446   */\n      tag_353\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":14456:14528   */\n      tag_528\n        /* \"#utility.yul\":14524:14526   */\n      0x20\n        /* \"#utility.yul\":14513:14522   */\n      dup4\n        /* \"#utility.yul\":14509:14527   */\n      add\n        /* \"#utility.yul\":14500:14506   */\n      dup6\n        /* \"#utility.yul\":14456:14528   */\n      tag_350\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":14538:14610   */\n      tag_529\n        /* \"#utility.yul\":14606:14608   */\n      0x40\n        /* \"#utility.yul\":14595:14604   */\n      dup4\n        /* \"#utility.yul\":14591:14609   */\n      add\n        /* \"#utility.yul\":14582:14588   */\n      dup5\n        /* \"#utility.yul\":14538:14610   */\n      tag_350\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":14175:14617   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14623:14799   */\n    tag_366:\n        /* \"#utility.yul\":14763:14791   */\n      0x496e73756666696369656e74206f757470757420616d6f756e74000000000000\n        /* \"#utility.yul\":14759:14760   */\n      0x00\n        /* \"#utility.yul\":14751:14757   */\n      dup3\n        /* \"#utility.yul\":14747:14761   */\n      add\n        /* \"#utility.yul\":14740:14792   */\n      mstore\n        /* \"#utility.yul\":14623:14799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14805:15171   */\n    tag_367:\n        /* \"#utility.yul\":14947:14950   */\n      0x00\n        /* \"#utility.yul\":14968:15035   */\n      tag_532\n        /* \"#utility.yul\":15032:15034   */\n      0x1a\n        /* \"#utility.yul\":15027:15030   */\n      dup4\n        /* \"#utility.yul\":14968:15035   */\n      tag_334\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":14961:15035   */\n      swap2\n      pop\n        /* \"#utility.yul\":15044:15137   */\n      tag_533\n        /* \"#utility.yul\":15133:15136   */\n      dup3\n        /* \"#utility.yul\":15044:15137   */\n      tag_366\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15162:15164   */\n      0x20\n        /* \"#utility.yul\":15157:15160   */\n      dup3\n        /* \"#utility.yul\":15153:15165   */\n      add\n        /* \"#utility.yul\":15146:15165   */\n      swap1\n      pop\n        /* \"#utility.yul\":14805:15171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15177:15596   */\n    tag_245:\n        /* \"#utility.yul\":15343:15347   */\n      0x00\n        /* \"#utility.yul\":15381:15383   */\n      0x20\n        /* \"#utility.yul\":15370:15379   */\n      dup3\n        /* \"#utility.yul\":15366:15384   */\n      add\n        /* \"#utility.yul\":15358:15384   */\n      swap1\n      pop\n        /* \"#utility.yul\":15430:15439   */\n      dup2\n        /* \"#utility.yul\":15424:15428   */\n      dup2\n        /* \"#utility.yul\":15420:15440   */\n      sub\n        /* \"#utility.yul\":15416:15417   */\n      0x00\n        /* \"#utility.yul\":15405:15414   */\n      dup4\n        /* \"#utility.yul\":15401:15418   */\n      add\n        /* \"#utility.yul\":15394:15441   */\n      mstore\n        /* \"#utility.yul\":15458:15589   */\n      tag_535\n        /* \"#utility.yul\":15584:15588   */\n      dup2\n        /* \"#utility.yul\":15458:15589   */\n      tag_367\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":15450:15589   */\n      swap1\n      pop\n        /* \"#utility.yul\":15177:15596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15602:15745   */\n    tag_368:\n        /* \"#utility.yul\":15659:15664   */\n      0x00\n        /* \"#utility.yul\":15690:15696   */\n      dup2\n        /* \"#utility.yul\":15684:15697   */\n      mload\n        /* \"#utility.yul\":15675:15697   */\n      swap1\n      pop\n        /* \"#utility.yul\":15706:15739   */\n      tag_537\n        /* \"#utility.yul\":15733:15738   */\n      dup2\n        /* \"#utility.yul\":15706:15739   */\n      tag_343\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":15602:15745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15751:16102   */\n    tag_257:\n        /* \"#utility.yul\":15821:15827   */\n      0x00\n        /* \"#utility.yul\":15870:15872   */\n      0x20\n        /* \"#utility.yul\":15858:15867   */\n      dup3\n        /* \"#utility.yul\":15849:15856   */\n      dup5\n        /* \"#utility.yul\":15845:15868   */\n      sub\n        /* \"#utility.yul\":15841:15873   */\n      slt\n        /* \"#utility.yul\":15838:15957   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":15876:15955   */\n      tag_540\n      tag_339\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":15838:15957   */\n    tag_539:\n        /* \"#utility.yul\":15996:15997   */\n      0x00\n        /* \"#utility.yul\":16021:16085   */\n      tag_541\n        /* \"#utility.yul\":16077:16084   */\n      dup5\n        /* \"#utility.yul\":16068:16074   */\n      dup3\n        /* \"#utility.yul\":16057:16066   */\n      dup6\n        /* \"#utility.yul\":16053:16075   */\n      add\n        /* \"#utility.yul\":16021:16085   */\n      tag_368\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":16011:16085   */\n      swap2\n      pop\n        /* \"#utility.yul\":15967:16095   */\n      pop\n        /* \"#utility.yul\":15751:16102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16108:16282   */\n    tag_369:\n        /* \"#utility.yul\":16248:16274   */\n      0x496e76616c69642065786368616e676520616464726573730000000000000000\n        /* \"#utility.yul\":16244:16245   */\n      0x00\n        /* \"#utility.yul\":16236:16242   */\n      dup3\n        /* \"#utility.yul\":16232:16246   */\n      add\n        /* \"#utility.yul\":16225:16275   */\n      mstore\n        /* \"#utility.yul\":16108:16282   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16288:16654   */\n    tag_370:\n        /* \"#utility.yul\":16430:16433   */\n      0x00\n        /* \"#utility.yul\":16451:16518   */\n      tag_544\n        /* \"#utility.yul\":16515:16517   */\n      0x18\n        /* \"#utility.yul\":16510:16513   */\n      dup4\n        /* \"#utility.yul\":16451:16518   */\n      tag_334\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":16444:16518   */\n      swap2\n      pop\n        /* \"#utility.yul\":16527:16620   */\n      tag_545\n        /* \"#utility.yul\":16616:16619   */\n      dup3\n        /* \"#utility.yul\":16527:16620   */\n      tag_369\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":16645:16647   */\n      0x20\n        /* \"#utility.yul\":16640:16643   */\n      dup3\n        /* \"#utility.yul\":16636:16648   */\n      add\n        /* \"#utility.yul\":16629:16648   */\n      swap1\n      pop\n        /* \"#utility.yul\":16288:16654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16660:17079   */\n    tag_261:\n        /* \"#utility.yul\":16826:16830   */\n      0x00\n        /* \"#utility.yul\":16864:16866   */\n      0x20\n        /* \"#utility.yul\":16853:16862   */\n      dup3\n        /* \"#utility.yul\":16849:16867   */\n      add\n        /* \"#utility.yul\":16841:16867   */\n      swap1\n      pop\n        /* \"#utility.yul\":16913:16922   */\n      dup2\n        /* \"#utility.yul\":16907:16911   */\n      dup2\n        /* \"#utility.yul\":16903:16923   */\n      sub\n        /* \"#utility.yul\":16899:16900   */\n      0x00\n        /* \"#utility.yul\":16888:16897   */\n      dup4\n        /* \"#utility.yul\":16884:16901   */\n      add\n        /* \"#utility.yul\":16877:16924   */\n      mstore\n        /* \"#utility.yul\":16941:17072   */\n      tag_547\n        /* \"#utility.yul\":17067:17071   */\n      dup2\n        /* \"#utility.yul\":16941:17072   */\n      tag_370\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":16933:17072   */\n      swap1\n      pop\n        /* \"#utility.yul\":16660:17079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17085:17250   */\n    tag_371:\n        /* \"#utility.yul\":17225:17242   */\n      0x496e76616c696420726573657276650000000000000000000000000000000000\n        /* \"#utility.yul\":17221:17222   */\n      0x00\n        /* \"#utility.yul\":17213:17219   */\n      dup3\n        /* \"#utility.yul\":17209:17223   */\n      add\n        /* \"#utility.yul\":17202:17243   */\n      mstore\n        /* \"#utility.yul\":17085:17250   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17256:17622   */\n    tag_372:\n        /* \"#utility.yul\":17398:17401   */\n      0x00\n        /* \"#utility.yul\":17419:17486   */\n      tag_550\n        /* \"#utility.yul\":17483:17485   */\n      0x0f\n        /* \"#utility.yul\":17478:17481   */\n      dup4\n        /* \"#utility.yul\":17419:17486   */\n      tag_334\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":17412:17486   */\n      swap2\n      pop\n        /* \"#utility.yul\":17495:17588   */\n      tag_551\n        /* \"#utility.yul\":17584:17587   */\n      dup3\n        /* \"#utility.yul\":17495:17588   */\n      tag_371\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":17613:17615   */\n      0x20\n        /* \"#utility.yul\":17608:17611   */\n      dup3\n        /* \"#utility.yul\":17604:17616   */\n      add\n        /* \"#utility.yul\":17597:17616   */\n      swap1\n      pop\n        /* \"#utility.yul\":17256:17622   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17628:18047   */\n    tag_314:\n        /* \"#utility.yul\":17794:17798   */\n      0x00\n        /* \"#utility.yul\":17832:17834   */\n      0x20\n        /* \"#utility.yul\":17821:17830   */\n      dup3\n        /* \"#utility.yul\":17817:17835   */\n      add\n        /* \"#utility.yul\":17809:17835   */\n      swap1\n      pop\n        /* \"#utility.yul\":17881:17890   */\n      dup2\n        /* \"#utility.yul\":17875:17879   */\n      dup2\n        /* \"#utility.yul\":17871:17891   */\n      sub\n        /* \"#utility.yul\":17867:17868   */\n      0x00\n        /* \"#utility.yul\":17856:17865   */\n      dup4\n        /* \"#utility.yul\":17852:17869   */\n      add\n        /* \"#utility.yul\":17845:17892   */\n      mstore\n        /* \"#utility.yul\":17909:18040   */\n      tag_553\n        /* \"#utility.yul\":18035:18039   */\n      dup2\n        /* \"#utility.yul\":17909:18040   */\n      tag_372\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":17901:18040   */\n      swap1\n      pop\n        /* \"#utility.yul\":17628:18047   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207159efda554dd21452c0fe4046cb1fc6d231d596c2ca665823e6e8167de6276064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_42": {
									"entryPoint": null,
									"id": 42,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_740": {
									"entryPoint": null,
									"id": 740,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 607,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 1453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 988,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7575:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:8"
															},
															"nodeType": "YulIf",
															"src": "932:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:8",
														"type": ""
													}
												],
												"src": "845:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1272:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1244:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1254:6:8",
														"type": ""
													}
												],
												"src": "1202:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1521:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1730:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1740:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1848:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1862:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:26:8"
															},
															"nodeType": "YulIf",
															"src": "1818:81:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1951:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:38:8"
															},
															"nodeType": "YulIf",
															"src": "1909:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1714:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1723:6:8",
														"type": ""
													}
												],
												"src": "1679:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2059:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2069:11:8",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2077:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2113:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2046:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2054:4:8",
														"type": ""
													}
												],
												"src": "2005:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:49:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2206:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2179:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2189:6:8",
														"type": ""
													}
												],
												"src": "2152:93:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2304:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2314:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:8"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2279:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2285:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2295:8:8",
														"type": ""
													}
												],
												"src": "2251:107:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2440:317:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2506:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2612:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2672:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2711:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:8"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2401:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2408:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2420:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2433:6:8",
														"type": ""
													}
												],
												"src": "2364:393:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2808:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2818:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2829:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2790:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2800:7:8",
														"type": ""
													}
												],
												"src": "2763:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2878:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2888:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2895:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2864:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2874:3:8",
														"type": ""
													}
												],
												"src": "2846:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2972:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2982:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2952:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2962:9:8",
														"type": ""
													}
												],
												"src": "2912:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3107:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3117:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3124:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3093:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3103:3:8",
														"type": ""
													}
												],
												"src": "3060:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3217:193:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:105:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3194:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3200:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3208:7:8",
														"type": ""
													}
												],
												"src": "3141:269:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3465:24:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3475:8:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3482:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3461:3:8",
														"type": ""
													}
												],
												"src": "3416:73:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:136:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3534:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3540:6:8",
														"type": ""
													}
												],
												"src": "3495:189:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3740:136:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3807:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:14:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3772:26:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3774:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3754:2:8",
																"statements": []
															},
															"src": "3750:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "3728:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3735:3:8",
														"type": ""
													}
												],
												"src": "3690:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3961:464:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3987:431:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4288:27:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4290:23:8",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:8"
																		},
																		"nodeType": "YulIf",
																		"src": "4266:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3975:11:8"
															},
															"nodeType": "YulIf",
															"src": "3972:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3937:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3944:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "3949:10:8",
														"type": ""
													}
												],
												"src": "3882:543:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4494:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4504:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:8"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4469:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4475:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4485:8:8",
														"type": ""
													}
												],
												"src": "4431:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4605:118:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4692:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:8"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4702:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4582:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "4588:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4598:6:8",
														"type": ""
													}
												],
												"src": "4554:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4809:214:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4942:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:8"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4988:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4996:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4790:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4796:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "4804:4:8",
														"type": ""
													}
												],
												"src": "4728:295:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:1303:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5145:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5267:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:30:8"
															},
															"nodeType": "YulIf",
															"src": "5233:56:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:8"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5398:67:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5492:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5503:17:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5516:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5567:611:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5764:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:8"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5841:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:8"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5882:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:8"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "5742:21:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5744:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "5723:3:8",
																					"statements": []
																				},
																				"src": "5719:208:8"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5963:156:8",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:8"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:8"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:8"
																				},
																				"nodeType": "YulIf",
																				"src": "5940:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:8"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5560:618:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6195:222:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6246:67:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6264:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:8"
																				},
																				"nodeType": "YulIf",
																				"src": "6236:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:8"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6187:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:14:8"
															},
															"nodeType": "YulSwitch",
															"src": "5530:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5109:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5115:3:8",
														"type": ""
													}
												],
												"src": "5028:1395:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6525:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6542:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6547:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6535:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6535:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6535:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6563:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6582:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6587:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6578:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6578:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6563:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6497:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6502:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6513:11:8",
														"type": ""
													}
												],
												"src": "6429:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6710:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6732:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6740:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6728:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6728:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6744:23:8",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6721:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6721:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6721:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6702:6:8",
														"type": ""
													}
												],
												"src": "6604:171:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6927:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6937:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7003:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7008:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6944:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6937:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7109:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nodeType": "YulIdentifier",
																	"src": "7020:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7020:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7020:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7122:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7133:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7138:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7129:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7129:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7122:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6915:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6923:3:8",
														"type": ""
													}
												],
												"src": "6781:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7324:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7334:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7346:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7357:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7334:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7381:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7392:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7377:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7400:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7406:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7396:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7396:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7370:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7370:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7370:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7426:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7560:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7434:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7434:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7426:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7304:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7319:4:8",
														"type": ""
													}
												],
												"src": "7153:419:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200293538038062002935833981810160405281019062000036919062000225565b6040518060400160405280600b81526020017f4d756e69737761702d56310000000000000000000000000000000000000000008152506040518060400160405280600781526020017f4d554e492d5631000000000000000000000000000000000000000000000000008152508160039081620000b39190620004b9565b508060049081620000c59190620004b9565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000139576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200013090620005fb565b60405180910390fd5b8060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200061b565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001ef82620001c4565b9050919050565b6200020181620001e3565b81146200020c575f80fd5b50565b5f815190506200021f81620001f6565b92915050565b5f602082840312156200023d576200023c620001c0565b5b5f6200024c848285016200020f565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002d157607f821691505b602082108103620002e757620002e66200028c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200034b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030e565b6200035786836200030e565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003a16200039b62000395846200036f565b62000378565b6200036f565b9050919050565b5f819050919050565b620003bc8362000381565b620003d4620003cb82620003a8565b8484546200031a565b825550505050565b5f90565b620003ea620003dc565b620003f7818484620003b1565b505050565b5b818110156200041e57620004125f82620003e0565b600181019050620003fd565b5050565b601f8211156200046d576200043781620002ed565b6200044284620002ff565b8101602085101562000452578190505b6200046a6200046185620002ff565b830182620003fc565b50505b505050565b5f82821c905092915050565b5f6200048f5f198460080262000472565b1980831691505092915050565b5f620004a983836200047e565b9150826002028217905092915050565b620004c48262000255565b67ffffffffffffffff811115620004e057620004df6200025f565b5b620004ec8254620002b9565b620004f982828562000422565b5f60209050601f8311600181146200052f575f84156200051a578287015190505b6200052685826200049c565b86555062000595565b601f1984166200053f86620002ed565b5f5b82811015620005685784890151825560018201915060208501945060208101905062000541565b8683101562000588578489015162000584601f8916826200047e565b8355505b6001600288020188555050505b505050505050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f620005e36015836200059d565b9150620005f082620005ad565b602082019050919050565b5f6020820190508181035f8301526200061481620005d5565b9050919050565b61230c80620006295f395ff3fe608060405260043610610129575f3560e01c806395d89b41116100aa578063a9059cbb1161006e578063a9059cbb146103f3578063c2507ac11461042f578063dd62ed3e1461046b578063e0486c8a146104a7578063f7a7e324146104d7578063f979dcd7146104f357610129565b806395d89b411461031d578063966dae0e146103475780639c8f9f23146103715780639d76ea581461038d578063a457c2d7146103b757610129565b806339509351116100f1578063395093511461022357806351c6590a1461025f57806359bf5d391461027b57806370a08231146102a55780638fc7a25d146102e157610129565b806306fdde031461012d578063095ea7b31461015757806318160ddd1461019357806323b872dd146101bd578063313ce567146101f9575b5f80fd5b348015610138575f80fd5b50610141610523565b60405161014e9190611a5c565b60405180910390f35b348015610162575f80fd5b5061017d60048036038101906101789190611b0d565b6105b3565b60405161018a9190611b65565b60405180910390f35b34801561019e575f80fd5b506101a76105d5565b6040516101b49190611b8d565b60405180910390f35b3480156101c8575f80fd5b506101e360048036038101906101de9190611ba6565b6105de565b6040516101f09190611b65565b60405180910390f35b348015610204575f80fd5b5061020d61060c565b60405161021a9190611c11565b60405180910390f35b34801561022e575f80fd5b5061024960048036038101906102449190611b0d565b610614565b6040516102569190611b65565b60405180910390f35b61027960048036038101906102749190611c2a565b61064a565b005b348015610286575f80fd5b5061028f610859565b60405161029c9190611b8d565b60405180910390f35b3480156102b0575f80fd5b506102cb60048036038101906102c69190611c55565b6108f8565b6040516102d89190611b8d565b60405180910390f35b3480156102ec575f80fd5b5061030760048036038101906103029190611c2a565b61093d565b6040516103149190611b8d565b60405180910390f35b348015610328575f80fd5b5061033161099e565b60405161033e9190611a5c565b60405180910390f35b348015610352575f80fd5b5061035b610a2e565b6040516103689190611c8f565b60405180910390f35b61038b60048036038101906103869190611c2a565b610a53565b005b348015610398575f80fd5b506103a1610bce565b6040516103ae9190611c8f565b60405180910390f35b3480156103c2575f80fd5b506103dd60048036038101906103d89190611b0d565b610bf3565b6040516103ea9190611b65565b60405180910390f35b3480156103fe575f80fd5b5061041960048036038101906104149190611b0d565b610c6e565b6040516104269190611b65565b60405180910390f35b34801561043a575f80fd5b5061045560048036038101906104509190611c2a565b610c90565b6040516104629190611b8d565b60405180910390f35b348015610476575f80fd5b50610491600480360381019061048c9190611ca8565b610cf1565b60405161049e9190611b8d565b60405180910390f35b6104c160048036038101906104bc9190611ce6565b610d73565b6040516104ce9190611b8d565b60405180910390f35b6104f160048036038101906104ec9190611d24565b610ebe565b005b61050d60048036038101906105089190611c2a565b6111bd565b60405161051a9190611b8d565b60405180910390f35b60606003805461053290611da1565b80601f016020809104026020016040519081016040528092919081815260200182805461055e90611da1565b80156105a95780601f10610580576101008083540402835291602001916105a9565b820191905f5260205f20905b81548152906001019060200180831161058c57829003601f168201915b5050505050905090565b5f806105bd6112cc565b90506105ca8185856112d3565b600191505092915050565b5f600254905090565b5f806105e86112cc565b90506105f585828561149a565b61060085858561152b565b60019150509392505050565b5f6012905090565b5f8061061e6112cc565b905061063f8185856106308589610cf1565b61063a9190611dfe565b6112d3565b600191505092915050565b5f610653610859565b03610710575f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016106ba93929190611e31565b6020604051808303815f875af11580156106d6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106fa9190611e90565b505f479050610709338261161b565b5050610856565b5f344761071d9190611ebb565b90505f610728610859565b90505f8282346107389190611eee565b6107429190611f5c565b905080841015610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e90611fd6565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016107e593929190611e31565b6020604051808303815f875af1158015610801573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108259190611e90565b505f83346108316105d5565b61083b9190611eee565b6108459190611f5c565b9050610851338261161b565b505050505b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108b49190611c8f565b602060405180830381865afa1580156108cf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f39190612008565b905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f808211610980576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109779061207d565b60405180910390fd5b5f610989610859565b905061099683824761169a565b915050919050565b6060600480546109ad90611da1565b80601f01602080910402602001604051908101604052809291908181526020018280546109d990611da1565b8015610a245780601f106109fb57610100808354040283529160200191610a24565b820191905f5260205f20905b815481529060010190602001808311610a0757829003601f168201915b5050505050905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8111610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c906120e5565b60405180910390fd5b5f610a9e6105d5565b8247610aaa9190611eee565b610ab49190611f5c565b90505f610abf6105d5565b83610ac8610859565b610ad29190611eee565b610adc9190611f5c565b9050610ae8338461173a565b3373ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f19350505050158015610b2b573d5f803e3d5ffd5b5060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b88929190612103565b6020604051808303815f875af1158015610ba4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bc89190611e90565b50505050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80610bfd6112cc565b90505f610c0a8286610cf1565b905083811015610c55578481856040517fa60f030c000000000000000000000000000000000000000000000000000000008152600401610c4c9392919061212a565b60405180910390fd5b610c6282868684036112d3565b60019250505092915050565b5f80610c786112cc565b9050610c8581858561152b565b600191505092915050565b5f808211610cd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cca9061207d565b60405180910390fd5b5f610cdc610859565b9050610ce983478361169a565b915050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f80610d7d610859565b90505f610d8b85834761169a565b905083811015610dd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc7906121a9565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b8152600401610e2e93929190611e31565b6020604051808303815f875af1158015610e4a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e6e9190611e90565b503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610eb2573d5f803e3d5ffd5b50809250505092915050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306f2bf62836040518263ffffffff1660e01b8152600401610f199190611c8f565b6020604051808303815f875af1158015610f35573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f5991906121db565b90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610fc357505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b611002576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff990612250565b60405180910390fd5b5f61100b610859565b90505f61101986834761169a565b905060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b815260040161107993929190611e31565b6020604051808303815f875af1158015611095573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110b99190611e90565b505f8373ffffffffffffffffffffffffffffffffffffffff1663f979dcd783886040518363ffffffff1660e01b81526004016110f59190611b8d565b60206040518083038185885af1158015611111573d5f803e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906111369190612008565b90508473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611173929190612103565b6020604051808303815f875af115801561118f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111b39190611e90565b5050505050505050565b5f806111c7610859565b90505f6111e03434476111da9190611ebb565b8461169a565b905083811015611225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121c906121a9565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611281929190612103565b6020604051808303815f875af115801561129d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112c19190611e90565b508092505050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611343575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161133a9190611c8f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113b3575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016113aa9190611c8f565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161148d9190611b8d565b60405180910390a3505050565b5f6114a58484610cf1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146115255781811015611517578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161150e9392919061212a565b60405180910390fd5b61152484848484036112d3565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361159b575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115929190611c8f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361160b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116029190611c8f565b60405180910390fd5b6116168383836117b9565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361168b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116829190611c8f565b60405180910390fd5b6116965f83836117b9565b5050565b5f80831180156116a957505f82115b6116e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116df906122b8565b60405180910390fd5b5f6063856116f69190611eee565b90505f83826117059190611eee565b90505f826064876117169190611eee565b6117209190611dfe565b9050808261172e9190611f5c565b93505050509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117aa575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117a19190611c8f565b60405180910390fd5b6117b5825f836117b9565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611809578060025f8282546117fd9190611dfe565b925050819055506118d7565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611892578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016118899392919061212a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361191e578060025f8282540392505081905550611968565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119c59190611b8d565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611a095780820151818401526020810190506119ee565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611a2e826119d2565b611a3881856119dc565b9350611a488185602086016119ec565b611a5181611a14565b840191505092915050565b5f6020820190508181035f830152611a748184611a24565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611aa982611a80565b9050919050565b611ab981611a9f565b8114611ac3575f80fd5b50565b5f81359050611ad481611ab0565b92915050565b5f819050919050565b611aec81611ada565b8114611af6575f80fd5b50565b5f81359050611b0781611ae3565b92915050565b5f8060408385031215611b2357611b22611a7c565b5b5f611b3085828601611ac6565b9250506020611b4185828601611af9565b9150509250929050565b5f8115159050919050565b611b5f81611b4b565b82525050565b5f602082019050611b785f830184611b56565b92915050565b611b8781611ada565b82525050565b5f602082019050611ba05f830184611b7e565b92915050565b5f805f60608486031215611bbd57611bbc611a7c565b5b5f611bca86828701611ac6565b9350506020611bdb86828701611ac6565b9250506040611bec86828701611af9565b9150509250925092565b5f60ff82169050919050565b611c0b81611bf6565b82525050565b5f602082019050611c245f830184611c02565b92915050565b5f60208284031215611c3f57611c3e611a7c565b5b5f611c4c84828501611af9565b91505092915050565b5f60208284031215611c6a57611c69611a7c565b5b5f611c7784828501611ac6565b91505092915050565b611c8981611a9f565b82525050565b5f602082019050611ca25f830184611c80565b92915050565b5f8060408385031215611cbe57611cbd611a7c565b5b5f611ccb85828601611ac6565b9250506020611cdc85828601611ac6565b9150509250929050565b5f8060408385031215611cfc57611cfb611a7c565b5b5f611d0985828601611af9565b9250506020611d1a85828601611af9565b9150509250929050565b5f805f60608486031215611d3b57611d3a611a7c565b5b5f611d4886828701611af9565b9350506020611d5986828701611af9565b9250506040611d6a86828701611ac6565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611db857607f821691505b602082108103611dcb57611dca611d74565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e0882611ada565b9150611e1383611ada565b9250828201905080821115611e2b57611e2a611dd1565b5b92915050565b5f606082019050611e445f830186611c80565b611e516020830185611c80565b611e5e6040830184611b7e565b949350505050565b611e6f81611b4b565b8114611e79575f80fd5b50565b5f81519050611e8a81611e66565b92915050565b5f60208284031215611ea557611ea4611a7c565b5b5f611eb284828501611e7c565b91505092915050565b5f611ec582611ada565b9150611ed083611ada565b9250828203905081811115611ee857611ee7611dd1565b5b92915050565b5f611ef882611ada565b9150611f0383611ada565b9250828202611f1181611ada565b91508282048414831517611f2857611f27611dd1565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f6682611ada565b9150611f7183611ada565b925082611f8157611f80611f2f565b5b828204905092915050565b7f496e73756666696369656e7420746f6b656e20616d6f756e74000000000000005f82015250565b5f611fc06019836119dc565b9150611fcb82611f8c565b602082019050919050565b5f6020820190508181035f830152611fed81611fb4565b9050919050565b5f8151905061200281611ae3565b92915050565b5f6020828403121561201d5761201c611a7c565b5b5f61202a84828501611ff4565b91505092915050565b7f496e76616c696420696e707574000000000000000000000000000000000000005f82015250565b5f612067600d836119dc565b915061207282612033565b602082019050919050565b5f6020820190508181035f8301526120948161205b565b9050919050565b7f496e73756666696369656e74206c6971756964697479000000000000000000005f82015250565b5f6120cf6016836119dc565b91506120da8261209b565b602082019050919050565b5f6020820190508181035f8301526120fc816120c3565b9050919050565b5f6040820190506121165f830185611c80565b6121236020830184611b7e565b9392505050565b5f60608201905061213d5f830186611c80565b61214a6020830185611b7e565b6121576040830184611b7e565b949350505050565b7f496e73756666696369656e74206f757470757420616d6f756e740000000000005f82015250565b5f612193601a836119dc565b915061219e8261215f565b602082019050919050565b5f6020820190508181035f8301526121c081612187565b9050919050565b5f815190506121d581611ab0565b92915050565b5f602082840312156121f0576121ef611a7c565b5b5f6121fd848285016121c7565b91505092915050565b7f496e76616c69642065786368616e6765206164647265737300000000000000005f82015250565b5f61223a6018836119dc565b915061224582612206565b602082019050919050565b5f6020820190508181035f8301526122678161222e565b9050919050565b7f496e76616c6964207265736572766500000000000000000000000000000000005f82015250565b5f6122a2600f836119dc565b91506122ad8261226e565b602082019050919050565b5f6020820190508181035f8301526122cf81612296565b905091905056fea26469706673582212207159efda554dd21452c0fe4046cb1fc6d231d596c2ca665823e6e8167de6276064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2935 CODESIZE SUB DUP1 PUSH3 0x2935 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D756E69737761702D5631000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D554E492D563100000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB3 SWAP2 SWAP1 PUSH3 0x4B9 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0x4B9 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x139 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x130 SWAP1 PUSH3 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x61B JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1EF DUP3 PUSH3 0x1C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x201 DUP2 PUSH3 0x1E3 JUMP JUMPDEST DUP2 EQ PUSH3 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x21F DUP2 PUSH3 0x1F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x23D JUMPI PUSH3 0x23C PUSH3 0x1C0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x24C DUP5 DUP3 DUP6 ADD PUSH3 0x20F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E7 JUMPI PUSH3 0x2E6 PUSH3 0x28C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x34B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30E JUMP JUMPDEST PUSH3 0x357 DUP7 DUP4 PUSH3 0x30E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x3A1 PUSH3 0x39B PUSH3 0x395 DUP5 PUSH3 0x36F JUMP JUMPDEST PUSH3 0x378 JUMP JUMPDEST PUSH3 0x36F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3BC DUP4 PUSH3 0x381 JUMP JUMPDEST PUSH3 0x3D4 PUSH3 0x3CB DUP3 PUSH3 0x3A8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x3EA PUSH3 0x3DC JUMP JUMPDEST PUSH3 0x3F7 DUP2 DUP5 DUP5 PUSH3 0x3B1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x41E JUMPI PUSH3 0x412 PUSH0 DUP3 PUSH3 0x3E0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3FD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x46D JUMPI PUSH3 0x437 DUP2 PUSH3 0x2ED JUMP JUMPDEST PUSH3 0x442 DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x452 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x46A PUSH3 0x461 DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3FC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x48F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x472 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4A9 DUP4 DUP4 PUSH3 0x47E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4C4 DUP3 PUSH3 0x255 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4E0 JUMPI PUSH3 0x4DF PUSH3 0x25F JUMP JUMPDEST JUMPDEST PUSH3 0x4EC DUP3 SLOAD PUSH3 0x2B9 JUMP JUMPDEST PUSH3 0x4F9 DUP3 DUP3 DUP6 PUSH3 0x422 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x52F JUMPI PUSH0 DUP5 ISZERO PUSH3 0x51A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x526 DUP6 DUP3 PUSH3 0x49C JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x595 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x53F DUP7 PUSH3 0x2ED JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x568 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x541 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x588 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x584 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x47E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x5E3 PUSH1 0x15 DUP4 PUSH3 0x59D JUMP JUMPDEST SWAP2 POP PUSH3 0x5F0 DUP3 PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x614 DUP2 PUSH3 0x5D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x230C DUP1 PUSH3 0x629 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xC2507AC1 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xE0486C8A EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0xF7A7E324 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xF979DCD7 EQ PUSH2 0x4F3 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x966DAE0E EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3B7 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x59BF5D39 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x8FC7A25D EQ PUSH2 0x2E1 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH2 0x99E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35B PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0xBCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0xC6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x1CA8 JUMP JUMPDEST PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0xEBE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x532 SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x55E SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x580 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x58C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5BD PUSH2 0x12CC JUMP JUMPDEST SWAP1 POP PUSH2 0x5CA DUP2 DUP6 DUP6 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5E8 PUSH2 0x12CC JUMP JUMPDEST SWAP1 POP PUSH2 0x5F5 DUP6 DUP3 DUP6 PUSH2 0x149A JUMP JUMPDEST PUSH2 0x600 DUP6 DUP6 DUP6 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x61E PUSH2 0x12CC JUMP JUMPDEST SWAP1 POP PUSH2 0x63F DUP2 DUP6 DUP6 PUSH2 0x630 DUP6 DUP10 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x1DFE JUMP JUMPDEST PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x653 PUSH2 0x859 JUMP JUMPDEST SUB PUSH2 0x710 JUMPI PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH0 SELFBALANCE SWAP1 POP PUSH2 0x709 CALLER DUP3 PUSH2 0x161B JUMP JUMPDEST POP POP PUSH2 0x856 JUMP JUMPDEST PUSH0 CALLVALUE SELFBALANCE PUSH2 0x71D SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x728 PUSH2 0x859 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP3 CALLVALUE PUSH2 0x738 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH2 0x742 SWAP2 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST SWAP1 POP DUP1 DUP5 LT ISZERO PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x801 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x825 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH0 DUP4 CALLVALUE PUSH2 0x831 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x83B SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST SWAP1 POP PUSH2 0x851 CALLER DUP3 PUSH2 0x161B JUMP JUMPDEST POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8CF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F3 SWAP2 SWAP1 PUSH2 0x2008 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 GT PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x977 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x989 PUSH2 0x859 JUMP JUMPDEST SWAP1 POP PUSH2 0x996 DUP4 DUP3 SELFBALANCE PUSH2 0x169A JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9AD SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D9 SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA24 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA24 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA07 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8C SWAP1 PUSH2 0x20E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xA9E PUSH2 0x5D5 JUMP JUMPDEST DUP3 SELFBALANCE PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH2 0xAB4 SWAP2 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xABF PUSH2 0x5D5 JUMP JUMPDEST DUP4 PUSH2 0xAC8 PUSH2 0x859 JUMP JUMPDEST PUSH2 0xAD2 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST SWAP1 POP PUSH2 0xAE8 CALLER DUP5 PUSH2 0x173A JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB2B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP3 SWAP2 SWAP1 PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBA4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC8 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBFD PUSH2 0x12CC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC0A DUP3 DUP7 PUSH2 0xCF1 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC55 JUMPI DUP5 DUP2 DUP6 PUSH1 0x40 MLOAD PUSH32 0xA60F030C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC62 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC78 PUSH2 0x12CC JUMP JUMPDEST SWAP1 POP PUSH2 0xC85 DUP2 DUP6 DUP6 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 GT PUSH2 0xCD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCA SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xCDC PUSH2 0x859 JUMP JUMPDEST SWAP1 POP PUSH2 0xCE9 DUP4 SELFBALANCE DUP4 PUSH2 0x169A JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD7D PUSH2 0x859 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD8B DUP6 DUP4 SELFBALANCE PUSH2 0x169A JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC7 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE4A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE6E SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEB2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6F2BF62 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF19 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF35 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x21DB JUMP JUMPDEST SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xFC3 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF9 SWAP1 PUSH2 0x2250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x100B PUSH2 0x859 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1019 DUP7 DUP4 SELFBALANCE PUSH2 0x169A JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1079 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1095 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B9 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF979DCD7 DUP4 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F5 SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1111 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1136 SWAP2 SWAP1 PUSH2 0x2008 JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1173 SWAP3 SWAP2 SWAP1 PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x118F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B3 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x11C7 PUSH2 0x859 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x11E0 CALLVALUE CALLVALUE SELFBALANCE PUSH2 0x11DA SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST DUP5 PUSH2 0x169A JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1225 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121C SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1281 SWAP3 SWAP2 SWAP1 PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x129D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12C1 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1343 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133A SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AA SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x148D SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A5 DUP5 DUP5 PUSH2 0xCF1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1525 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1517 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1524 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x12D3 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x159B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1592 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x160B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1602 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1616 DUP4 DUP4 DUP4 PUSH2 0x17B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x168B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1682 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1696 PUSH0 DUP4 DUP4 PUSH2 0x17B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 GT DUP1 ISZERO PUSH2 0x16A9 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x16E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DF SWAP1 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x63 DUP6 PUSH2 0x16F6 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x1705 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x64 DUP8 PUSH2 0x1716 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH2 0x1720 SWAP2 SWAP1 PUSH2 0x1DFE JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x172E SWAP2 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17AA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A1 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17B5 DUP3 PUSH0 DUP4 PUSH2 0x17B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1809 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17FD SWAP2 SWAP1 PUSH2 0x1DFE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18D7 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1892 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1889 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x191E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1968 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19C5 SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A09 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19EE JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2E DUP3 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x1A38 DUP2 DUP6 PUSH2 0x19DC JUMP JUMPDEST SWAP4 POP PUSH2 0x1A48 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19EC JUMP JUMPDEST PUSH2 0x1A51 DUP2 PUSH2 0x1A14 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A74 DUP2 DUP5 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA9 DUP3 PUSH2 0x1A80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB9 DUP2 PUSH2 0x1A9F JUMP JUMPDEST DUP2 EQ PUSH2 0x1AC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AD4 DUP2 PUSH2 0x1AB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEC DUP2 PUSH2 0x1ADA JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B07 DUP2 PUSH2 0x1AE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B23 JUMPI PUSH2 0x1B22 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B30 DUP6 DUP3 DUP7 ADD PUSH2 0x1AC6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B41 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5F DUP2 PUSH2 0x1B4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B78 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B87 DUP2 PUSH2 0x1ADA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BA0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BBD JUMPI PUSH2 0x1BBC PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BCA DUP7 DUP3 DUP8 ADD PUSH2 0x1AC6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BDB DUP7 DUP3 DUP8 ADD PUSH2 0x1AC6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BEC DUP7 DUP3 DUP8 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C0B DUP2 PUSH2 0x1BF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C24 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C3F JUMPI PUSH2 0x1C3E PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C4C DUP5 DUP3 DUP6 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C6A JUMPI PUSH2 0x1C69 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C77 DUP5 DUP3 DUP6 ADD PUSH2 0x1AC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C89 DUP2 PUSH2 0x1A9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CBE JUMPI PUSH2 0x1CBD PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CCB DUP6 DUP3 DUP7 ADD PUSH2 0x1AC6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CDC DUP6 DUP3 DUP7 ADD PUSH2 0x1AC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CFC JUMPI PUSH2 0x1CFB PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D09 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D1A DUP6 DUP3 DUP7 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D3B JUMPI PUSH2 0x1D3A PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D48 DUP7 DUP3 DUP8 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D59 DUP7 DUP3 DUP8 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D6A DUP7 DUP3 DUP8 ADD PUSH2 0x1AC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DB8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DCB JUMPI PUSH2 0x1DCA PUSH2 0x1D74 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E08 DUP3 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E13 DUP4 PUSH2 0x1ADA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E2B JUMPI PUSH2 0x1E2A PUSH2 0x1DD1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E44 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x1E51 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x1E5E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B7E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1E6F DUP2 PUSH2 0x1B4B JUMP JUMPDEST DUP2 EQ PUSH2 0x1E79 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E8A DUP2 PUSH2 0x1E66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA5 JUMPI PUSH2 0x1EA4 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EB2 DUP5 DUP3 DUP6 ADD PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC5 DUP3 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED0 DUP4 PUSH2 0x1ADA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1EE8 JUMPI PUSH2 0x1EE7 PUSH2 0x1DD1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF8 DUP3 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP PUSH2 0x1F03 DUP4 PUSH2 0x1ADA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1F11 DUP2 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1F28 JUMPI PUSH2 0x1F27 PUSH2 0x1DD1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F66 DUP3 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP PUSH2 0x1F71 DUP4 PUSH2 0x1ADA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F81 JUMPI PUSH2 0x1F80 PUSH2 0x1F2F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E20616D6F756E7400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FC0 PUSH1 0x19 DUP4 PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FCB DUP3 PUSH2 0x1F8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FED DUP2 PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2002 DUP2 PUSH2 0x1AE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x201D JUMPI PUSH2 0x201C PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x202A DUP5 DUP3 DUP6 ADD PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E70757400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2067 PUSH1 0xD DUP4 PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x2072 DUP3 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2094 DUP2 PUSH2 0x205B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20CF PUSH1 0x16 DUP4 PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x20DA DUP3 PUSH2 0x209B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20FC DUP2 PUSH2 0x20C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2116 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x2123 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B7E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x213D PUSH0 DUP4 ADD DUP7 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x214A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x2157 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B7E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2193 PUSH1 0x1A DUP4 PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x219E DUP3 PUSH2 0x215F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21C0 DUP2 PUSH2 0x2187 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21D5 DUP2 PUSH2 0x1AB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F0 JUMPI PUSH2 0x21EF PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21FD DUP5 DUP3 DUP6 ADD PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642065786368616E676520616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x223A PUSH1 0x18 DUP4 PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x2245 DUP3 PUSH2 0x2206 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2267 DUP2 PUSH2 0x222E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726573657276650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22A2 PUSH1 0xF DUP4 PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x22AD DUP3 PUSH2 0x226E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22CF DUP2 PUSH2 0x2296 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x59EFDA554DD21452C0FE4046CB1FC6D231D5 SWAP7 0xC2 0xCA PUSH7 0x5823E6E8167DE6 0x27 PUSH1 0x64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "346:4832:0:-:0;;;463:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2179:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2253:5;2245;:13;;;;;;:::i;:::-;;2278:7;2268;:17;;;;;;:::i;:::-;;2179:113;;560:1:0::1;542:20;;:6;:20;;::::0;534:54:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;616:6;601:12;;:21;;;;;;;;;;;;;;;;;;650:10;633:14;;:27;;;;;;;;;;;;;;;;;;463:205:::0;346:4832;;88:117:8;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:169::-;6513:11;6547:6;6542:3;6535:19;6587:4;6582:3;6578:14;6563:29;;6429:169;;;;:::o;6604:171::-;6744:23;6740:1;6732:6;6728:14;6721:47;6604:171;:::o;6781:366::-;6923:3;6944:67;7008:2;7003:3;6944:67;:::i;:::-;6937:74;;7020:93;7109:3;7020:93;:::i;:::-;7138:2;7133:3;7129:12;7122:19;;6781:366;;;:::o;7153:419::-;7319:4;7357:2;7346:9;7342:18;7334:26;;7406:9;7400:4;7396:20;7392:1;7381:9;7377:17;7370:47;7434:131;7560:4;7434:131;:::i;:::-;7426:139;;7153:419;;;:::o;346:4832:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1205": {
									"entryPoint": 4819,
									"id": 1205,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1150": {
									"entryPoint": 5946,
									"id": 1150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_1117": {
									"entryPoint": 5659,
									"id": 1117,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1368": {
									"entryPoint": 4812,
									"id": 1368,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1252": {
									"entryPoint": 5274,
									"id": 1252,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1007": {
									"entryPoint": 5419,
									"id": 1007,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1084": {
									"entryPoint": 6073,
									"id": 1084,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_149": {
									"entryPoint": 1610,
									"id": 149,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_830": {
									"entryPoint": 3313,
									"id": 830,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_854": {
									"entryPoint": 1459,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_789": {
									"entryPoint": 2296,
									"id": 789,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_767": {
									"entryPoint": 1548,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_960": {
									"entryPoint": 3059,
									"id": 960,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@ethToTokenSwap_321": {
									"entryPoint": 4541,
									"id": 321,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@factoryAddress_13": {
									"entryPoint": 2606,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAmount_213": {
									"entryPoint": 5786,
									"id": 213,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getEthAmount_273": {
									"entryPoint": 2365,
									"id": 273,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getReserve_165": {
									"entryPoint": 2137,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokenAmount_243": {
									"entryPoint": 3216,
									"id": 243,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increaseAllowance_915": {
									"entryPoint": 1556,
									"id": 915,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_749": {
									"entryPoint": 1315,
									"id": 749,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidity_439": {
									"entryPoint": 2643,
									"id": 439,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_758": {
									"entryPoint": 2462,
									"id": 758,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenAddress_11": {
									"entryPoint": 3022,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenToEthSwap_379": {
									"entryPoint": 3443,
									"id": 379,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenToTokenSwap_525": {
									"entryPoint": 3774,
									"id": 525,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@totalSupply_776": {
									"entryPoint": 1493,
									"id": 776,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_886": {
									"entryPoint": 1502,
									"id": 886,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_813": {
									"entryPoint": 3182,
									"id": 813,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 8647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 8667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 7460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7729,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8451,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8490,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6636,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7633,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7983,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7540,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11": {
									"entryPoint": 8076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad": {
									"entryPoint": 8347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb": {
									"entryPoint": 8814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90": {
									"entryPoint": 8543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11": {
									"entryPoint": 8710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b": {
									"entryPoint": 8243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18050:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:8",
																"statements": []
															},
															"src": "378:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:246:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:8",
														"type": ""
													}
												],
												"src": "539:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:8",
														"type": ""
													}
												],
												"src": "647:377:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:8",
														"type": ""
													}
												],
												"src": "1030:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:8",
														"type": ""
													}
												],
												"src": "1349:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:8",
														"type": ""
													}
												],
												"src": "1676:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:8",
														"type": ""
													}
												],
												"src": "1808:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:8"
															},
															"nodeType": "YulIf",
															"src": "1963:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:8",
														"type": ""
													}
												],
												"src": "1910:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:8",
														"type": ""
													}
												],
												"src": "2038:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:8",
														"type": ""
													}
												],
												"src": "2183:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:8"
															},
															"nodeType": "YulIf",
															"src": "2319:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:8",
														"type": ""
													}
												],
												"src": "2266:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:8",
														"type": ""
													}
												],
												"src": "2394:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:8"
															},
															"nodeType": "YulIf",
															"src": "2632:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:8",
														"type": ""
													}
												],
												"src": "2539:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:8",
														"type": ""
													}
												],
												"src": "3019:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:8",
														"type": ""
													}
												],
												"src": "3115:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:8",
														"type": ""
													}
												],
												"src": "3230:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:8",
														"type": ""
													}
												],
												"src": "3446:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:8",
														"type": ""
													}
												],
												"src": "3570:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:8"
															},
															"nodeType": "YulIf",
															"src": "3908:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:8",
														"type": ""
													}
												],
												"src": "3798:619:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:8",
														"type": ""
													}
												],
												"src": "4423:86:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:8",
														"type": ""
													}
												],
												"src": "4515:112:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:8",
														"type": ""
													}
												],
												"src": "4633:214:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:8"
															},
															"nodeType": "YulIf",
															"src": "4929:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:8",
														"type": ""
													}
												],
												"src": "4853:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:32:8"
															},
															"nodeType": "YulIf",
															"src": "5264:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "5393:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5437:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5224:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5235:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5247:6:8",
														"type": ""
													}
												],
												"src": "5188:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5588:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5628:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5610:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5598:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5576:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5583:3:8",
														"type": ""
													}
												],
												"src": "5523:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5745:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5755:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5763:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5835:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5791:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5791:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5717:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5729:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5740:4:8",
														"type": ""
													}
												],
												"src": "5647:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5958:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6004:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6006:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6006:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6006:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5979:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5975:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6000:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5971:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5971:32:8"
															},
															"nodeType": "YulIf",
															"src": "5968:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "6097:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6112:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6126:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6116:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6141:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6176:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6187:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6172:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6172:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6196:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6151:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6151:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6141:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6224:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6239:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6253:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6243:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6269:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6304:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6315:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6300:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6300:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6324:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6279:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6279:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6269:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5920:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5931:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5943:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5951:6:8",
														"type": ""
													}
												],
												"src": "5875:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6438:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6484:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6486:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6486:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6486:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6459:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6468:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6455:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6455:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6480:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6451:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6451:32:8"
															},
															"nodeType": "YulIf",
															"src": "6448:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "6577:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6592:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6606:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6596:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6621:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6656:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6667:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6652:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6652:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6676:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6631:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6631:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6621:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6704:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6719:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6733:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6723:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6749:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6784:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6795:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6780:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6780:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6804:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6759:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6759:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6749:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6400:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6411:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6423:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6431:6:8",
														"type": ""
													}
												],
												"src": "6355:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6935:519:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6981:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6983:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6983:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6983:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6956:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6965:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6952:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6952:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6977:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6948:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6948:32:8"
															},
															"nodeType": "YulIf",
															"src": "6945:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "7074:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7089:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7103:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7093:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7118:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7153:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7164:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7149:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7149:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7173:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7128:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7128:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7118:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7201:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7216:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7230:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7220:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7246:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7281:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7292:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7277:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7277:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7301:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7256:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7256:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7246:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7329:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7344:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7358:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7348:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7374:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7409:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7420:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7405:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7405:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7429:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7384:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7384:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7374:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6889:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6900:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6912:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6920:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6928:6:8",
														"type": ""
													}
												],
												"src": "6835:619:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7488:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7505:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7508:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7498:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7498:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7498:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7602:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7605:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7595:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7595:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7595:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7626:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7619:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7619:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7619:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "7460:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7721:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7727:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7717:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7738:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7768:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7774:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7764:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7764:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7742:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7815:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7829:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7843:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7851:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7839:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7839:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7829:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7795:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7788:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7788:26:8"
															},
															"nodeType": "YulIf",
															"src": "7785:81:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7918:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "7932:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7932:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7932:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7882:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7905:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7913:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7902:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7902:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7879:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7879:38:8"
															},
															"nodeType": "YulIf",
															"src": "7876:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7681:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7690:6:8",
														"type": ""
													}
												],
												"src": "7646:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8000:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8017:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8020:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8010:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8010:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8010:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8114:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8117:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8107:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8107:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8138:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8141:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8131:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8131:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8131:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7972:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8202:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8212:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8235:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8217:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8212:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8246:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8269:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8251:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8251:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8246:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8280:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8291:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8294:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8287:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8287:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8280:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8320:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8322:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8322:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8322:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8312:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8315:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8309:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:10:8"
															},
															"nodeType": "YulIf",
															"src": "8306:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8189:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8192:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8198:3:8",
														"type": ""
													}
												],
												"src": "8158:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8509:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8519:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8531:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8542:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8527:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8527:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8519:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8599:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8612:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8623:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8608:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8608:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8555:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8555:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8555:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8680:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8693:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8704:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8689:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8689:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8636:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8636:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8636:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8762:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8775:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8786:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8771:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8771:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8718:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8718:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8718:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8465:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8477:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8485:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8493:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8504:4:8",
														"type": ""
													}
												],
												"src": "8355:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8843:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8897:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8906:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8909:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8899:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8899:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8899:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8866:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8888:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "8873:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8873:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8863:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8863:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8856:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8856:40:8"
															},
															"nodeType": "YulIf",
															"src": "8853:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8836:5:8",
														"type": ""
													}
												],
												"src": "8803:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8985:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8995:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9010:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9004:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9004:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8995:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9050:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9026:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9026:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9026:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8963:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8971:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8979:5:8",
														"type": ""
													}
												],
												"src": "8925:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9142:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9188:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9190:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9190:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9190:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9163:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9172:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9159:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9159:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9184:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9155:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9155:32:8"
															},
															"nodeType": "YulIf",
															"src": "9152:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "9281:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9296:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9310:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9300:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9325:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9368:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9379:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9364:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9364:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9388:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9335:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9335:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9325:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9112:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9123:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9135:6:8",
														"type": ""
													}
												],
												"src": "9068:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9464:149:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9474:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9497:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9479:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9479:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9474:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9508:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9531:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9513:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9513:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9508:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9542:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9554:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9557:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9550:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9550:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9542:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9584:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9586:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9586:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9586:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "9575:4:8"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9581:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9572:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9572:11:8"
															},
															"nodeType": "YulIf",
															"src": "9569:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9450:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9453:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9459:4:8",
														"type": ""
													}
												],
												"src": "9419:194:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9667:362:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9677:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9700:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9682:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9682:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9677:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9711:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9734:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9716:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9716:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9711:1:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9745:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9768:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9771:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9764:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9764:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "9749:11:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9782:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "9811:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9793:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9793:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9782:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10000:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10002:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10002:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10002:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9933:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9926:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9926:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9956:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "9963:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "9972:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "9959:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9959:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9953:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9953:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9906:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9886:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9886:113:8"
															},
															"nodeType": "YulIf",
															"src": "9883:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9650:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9653:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9659:7:8",
														"type": ""
													}
												],
												"src": "9619:410:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10063:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10080:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10083:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10073:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10073:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10073:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10177:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10180:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10170:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10170:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10170:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10201:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10204:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10194:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10194:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10194:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10035:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10263:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10273:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10296:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10278:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10278:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10273:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10307:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10330:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10312:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10312:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10307:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10354:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10356:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10356:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10356:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10351:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10344:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10344:9:8"
															},
															"nodeType": "YulIf",
															"src": "10341:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10386:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10395:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10398:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10391:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10391:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10386:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10252:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10255:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10261:1:8",
														"type": ""
													}
												],
												"src": "10221:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10518:69:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10540:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10548:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10536:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10536:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420746f6b656e20616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10552:27:8",
																		"type": "",
																		"value": "Insufficient token amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10529:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10529:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10529:51:8"
														}
													]
												},
												"name": "store_literal_in_memory_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10510:6:8",
														"type": ""
													}
												],
												"src": "10412:175:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10739:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10749:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10815:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10820:2:8",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10756:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10756:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10749:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10921:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11",
																	"nodeType": "YulIdentifier",
																	"src": "10832:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10832:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10832:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10934:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10945:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10950:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10941:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10941:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10934:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10727:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10735:3:8",
														"type": ""
													}
												],
												"src": "10593:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11136:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11146:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11158:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11169:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11154:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11154:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11146:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11193:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11204:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11189:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11189:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11212:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11218:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11208:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11208:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11182:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11182:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11182:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11238:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11372:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11246:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11246:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11238:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11116:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11131:4:8",
														"type": ""
													}
												],
												"src": "10965:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11453:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11463:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11478:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11472:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11472:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11463:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11521:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11494:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11494:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11494:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11431:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11439:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11447:5:8",
														"type": ""
													}
												],
												"src": "11390:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11616:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11662:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11664:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11664:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11664:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11637:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11646:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11633:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11633:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11658:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11629:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11629:32:8"
															},
															"nodeType": "YulIf",
															"src": "11626:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "11755:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11770:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11784:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11774:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11799:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11845:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11856:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11841:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11841:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11865:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11809:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11809:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11799:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11586:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11597:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11609:6:8",
														"type": ""
													}
												],
												"src": "11539:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12002:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12024:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12032:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12020:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12020:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420696e707574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12036:15:8",
																		"type": "",
																		"value": "Invalid input"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12013:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12013:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12013:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11994:6:8",
														"type": ""
													}
												],
												"src": "11896:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12211:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12221:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12287:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12292:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12228:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12228:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12221:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12393:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
																	"nodeType": "YulIdentifier",
																	"src": "12304:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12304:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12304:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12406:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12417:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12422:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12413:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12413:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12406:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12199:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12207:3:8",
														"type": ""
													}
												],
												"src": "12065:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12608:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12618:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12630:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12641:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12626:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12626:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12618:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12665:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12676:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12661:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12661:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12684:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12690:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12680:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12680:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12654:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12654:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12654:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12710:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12844:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12718:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12718:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12710:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12588:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12603:4:8",
														"type": ""
													}
												],
												"src": "12437:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12968:66:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12990:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12998:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12986:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12986:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206c6971756964697479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13002:24:8",
																		"type": "",
																		"value": "Insufficient liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12979:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12979:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12979:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12960:6:8",
														"type": ""
													}
												],
												"src": "12862:172:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13186:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13196:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13262:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13267:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13203:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13203:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13196:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13368:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																	"nodeType": "YulIdentifier",
																	"src": "13279:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13279:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13279:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13381:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13392:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13397:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13388:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13388:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13381:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13174:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13182:3:8",
														"type": ""
													}
												],
												"src": "13040:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13583:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13593:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13605:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13616:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13601:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13601:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13593:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13640:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13651:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13636:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13636:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13659:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13665:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13655:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13655:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13629:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13629:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13629:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13685:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13819:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13693:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13693:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13685:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13563:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13578:4:8",
														"type": ""
													}
												],
												"src": "13412:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13963:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13973:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13985:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13996:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13981:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13981:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13973:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14053:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14066:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14077:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14062:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14062:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14009:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14009:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14009:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14134:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14147:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14158:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14143:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14143:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14090:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14090:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14090:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13927:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13939:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13947:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13958:4:8",
														"type": ""
													}
												],
												"src": "13837:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14329:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14339:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14351:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14362:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14347:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14347:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14339:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14419:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14432:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14443:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14428:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14428:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14375:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14375:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14375:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14500:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14513:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14524:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14509:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14509:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14456:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14456:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14456:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14582:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14595:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14606:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14591:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14591:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14538:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14538:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14538:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14285:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14297:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14305:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14313:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14324:4:8",
														"type": ""
													}
												],
												"src": "14175:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14729:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14751:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14759:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14747:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14747:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14763:28:8",
																		"type": "",
																		"value": "Insufficient output amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14740:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14740:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14740:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14721:6:8",
														"type": ""
													}
												],
												"src": "14623:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14951:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14961:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15027:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15032:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14968:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14968:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14961:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15133:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																	"nodeType": "YulIdentifier",
																	"src": "15044:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15044:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15044:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15146:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15157:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15162:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15153:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15153:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15146:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14939:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14947:3:8",
														"type": ""
													}
												],
												"src": "14805:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15348:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15358:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15370:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15381:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15366:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15366:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15358:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15405:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15416:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15401:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15401:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15424:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15430:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15420:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15420:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15394:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15394:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15394:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15450:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15584:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15458:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15458:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15450:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15328:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15343:4:8",
														"type": ""
													}
												],
												"src": "15177:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15665:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15675:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15690:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15684:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15684:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15675:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15733:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "15706:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15706:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15706:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15643:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15651:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15659:5:8",
														"type": ""
													}
												],
												"src": "15602:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15828:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15874:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15876:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15876:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15876:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15849:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15858:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15845:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15845:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15870:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15841:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15841:32:8"
															},
															"nodeType": "YulIf",
															"src": "15838:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "15967:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15982:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15996:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15986:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16011:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16057:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16068:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16053:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16053:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16077:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "16021:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16021:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16011:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15798:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15809:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15821:6:8",
														"type": ""
													}
												],
												"src": "15751:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16214:68:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16236:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16244:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16232:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16232:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642065786368616e67652061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16248:26:8",
																		"type": "",
																		"value": "Invalid exchange address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16225:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16225:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16225:50:8"
														}
													]
												},
												"name": "store_literal_in_memory_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16206:6:8",
														"type": ""
													}
												],
												"src": "16108:174:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16434:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16444:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16510:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16515:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16451:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16451:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16444:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16616:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11",
																	"nodeType": "YulIdentifier",
																	"src": "16527:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16527:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16527:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16629:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16640:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16645:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16636:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16636:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16629:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16422:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16430:3:8",
														"type": ""
													}
												],
												"src": "16288:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16831:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16841:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16853:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16864:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16849:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16849:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16841:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16888:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16899:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16884:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16884:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16907:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16913:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16903:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16903:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16877:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16877:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16877:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16933:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17067:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16941:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16941:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16933:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16811:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16826:4:8",
														"type": ""
													}
												],
												"src": "16660:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17191:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17213:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17221:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17209:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17209:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642072657365727665",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17225:17:8",
																		"type": "",
																		"value": "Invalid reserve"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17202:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17202:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17202:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17183:6:8",
														"type": ""
													}
												],
												"src": "17085:165:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17402:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17412:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17478:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17483:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17419:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17419:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17412:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17584:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb",
																	"nodeType": "YulIdentifier",
																	"src": "17495:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17495:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17495:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17597:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17608:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17613:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17604:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17604:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17597:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17390:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17398:3:8",
														"type": ""
													}
												],
												"src": "17256:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17799:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17809:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17821:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17832:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17817:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17817:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17809:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17856:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17867:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17852:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17852:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17875:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17881:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17871:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17871:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17845:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17845:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17845:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17901:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18035:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17909:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17909:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17901:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17779:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17794:4:8",
														"type": ""
													}
												],
												"src": "17628:419:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient token amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid input\")\n\n    }\n\n    function abi_encode_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient liquidity\")\n\n    }\n\n    function abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient output amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid exchange address\")\n\n    }\n\n    function abi_encode_t_stringliteral_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid reserve\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610129575f3560e01c806395d89b41116100aa578063a9059cbb1161006e578063a9059cbb146103f3578063c2507ac11461042f578063dd62ed3e1461046b578063e0486c8a146104a7578063f7a7e324146104d7578063f979dcd7146104f357610129565b806395d89b411461031d578063966dae0e146103475780639c8f9f23146103715780639d76ea581461038d578063a457c2d7146103b757610129565b806339509351116100f1578063395093511461022357806351c6590a1461025f57806359bf5d391461027b57806370a08231146102a55780638fc7a25d146102e157610129565b806306fdde031461012d578063095ea7b31461015757806318160ddd1461019357806323b872dd146101bd578063313ce567146101f9575b5f80fd5b348015610138575f80fd5b50610141610523565b60405161014e9190611a5c565b60405180910390f35b348015610162575f80fd5b5061017d60048036038101906101789190611b0d565b6105b3565b60405161018a9190611b65565b60405180910390f35b34801561019e575f80fd5b506101a76105d5565b6040516101b49190611b8d565b60405180910390f35b3480156101c8575f80fd5b506101e360048036038101906101de9190611ba6565b6105de565b6040516101f09190611b65565b60405180910390f35b348015610204575f80fd5b5061020d61060c565b60405161021a9190611c11565b60405180910390f35b34801561022e575f80fd5b5061024960048036038101906102449190611b0d565b610614565b6040516102569190611b65565b60405180910390f35b61027960048036038101906102749190611c2a565b61064a565b005b348015610286575f80fd5b5061028f610859565b60405161029c9190611b8d565b60405180910390f35b3480156102b0575f80fd5b506102cb60048036038101906102c69190611c55565b6108f8565b6040516102d89190611b8d565b60405180910390f35b3480156102ec575f80fd5b5061030760048036038101906103029190611c2a565b61093d565b6040516103149190611b8d565b60405180910390f35b348015610328575f80fd5b5061033161099e565b60405161033e9190611a5c565b60405180910390f35b348015610352575f80fd5b5061035b610a2e565b6040516103689190611c8f565b60405180910390f35b61038b60048036038101906103869190611c2a565b610a53565b005b348015610398575f80fd5b506103a1610bce565b6040516103ae9190611c8f565b60405180910390f35b3480156103c2575f80fd5b506103dd60048036038101906103d89190611b0d565b610bf3565b6040516103ea9190611b65565b60405180910390f35b3480156103fe575f80fd5b5061041960048036038101906104149190611b0d565b610c6e565b6040516104269190611b65565b60405180910390f35b34801561043a575f80fd5b5061045560048036038101906104509190611c2a565b610c90565b6040516104629190611b8d565b60405180910390f35b348015610476575f80fd5b50610491600480360381019061048c9190611ca8565b610cf1565b60405161049e9190611b8d565b60405180910390f35b6104c160048036038101906104bc9190611ce6565b610d73565b6040516104ce9190611b8d565b60405180910390f35b6104f160048036038101906104ec9190611d24565b610ebe565b005b61050d60048036038101906105089190611c2a565b6111bd565b60405161051a9190611b8d565b60405180910390f35b60606003805461053290611da1565b80601f016020809104026020016040519081016040528092919081815260200182805461055e90611da1565b80156105a95780601f10610580576101008083540402835291602001916105a9565b820191905f5260205f20905b81548152906001019060200180831161058c57829003601f168201915b5050505050905090565b5f806105bd6112cc565b90506105ca8185856112d3565b600191505092915050565b5f600254905090565b5f806105e86112cc565b90506105f585828561149a565b61060085858561152b565b60019150509392505050565b5f6012905090565b5f8061061e6112cc565b905061063f8185856106308589610cf1565b61063a9190611dfe565b6112d3565b600191505092915050565b5f610653610859565b03610710575f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016106ba93929190611e31565b6020604051808303815f875af11580156106d6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106fa9190611e90565b505f479050610709338261161b565b5050610856565b5f344761071d9190611ebb565b90505f610728610859565b90505f8282346107389190611eee565b6107429190611f5c565b905080841015610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e90611fd6565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016107e593929190611e31565b6020604051808303815f875af1158015610801573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108259190611e90565b505f83346108316105d5565b61083b9190611eee565b6108459190611f5c565b9050610851338261161b565b505050505b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108b49190611c8f565b602060405180830381865afa1580156108cf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f39190612008565b905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f808211610980576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109779061207d565b60405180910390fd5b5f610989610859565b905061099683824761169a565b915050919050565b6060600480546109ad90611da1565b80601f01602080910402602001604051908101604052809291908181526020018280546109d990611da1565b8015610a245780601f106109fb57610100808354040283529160200191610a24565b820191905f5260205f20905b815481529060010190602001808311610a0757829003601f168201915b5050505050905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8111610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c906120e5565b60405180910390fd5b5f610a9e6105d5565b8247610aaa9190611eee565b610ab49190611f5c565b90505f610abf6105d5565b83610ac8610859565b610ad29190611eee565b610adc9190611f5c565b9050610ae8338461173a565b3373ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f19350505050158015610b2b573d5f803e3d5ffd5b5060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b88929190612103565b6020604051808303815f875af1158015610ba4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bc89190611e90565b50505050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80610bfd6112cc565b90505f610c0a8286610cf1565b905083811015610c55578481856040517fa60f030c000000000000000000000000000000000000000000000000000000008152600401610c4c9392919061212a565b60405180910390fd5b610c6282868684036112d3565b60019250505092915050565b5f80610c786112cc565b9050610c8581858561152b565b600191505092915050565b5f808211610cd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cca9061207d565b60405180910390fd5b5f610cdc610859565b9050610ce983478361169a565b915050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f80610d7d610859565b90505f610d8b85834761169a565b905083811015610dd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc7906121a9565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b8152600401610e2e93929190611e31565b6020604051808303815f875af1158015610e4a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e6e9190611e90565b503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610eb2573d5f803e3d5ffd5b50809250505092915050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306f2bf62836040518263ffffffff1660e01b8152600401610f199190611c8f565b6020604051808303815f875af1158015610f35573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f5991906121db565b90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610fc357505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b611002576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff990612250565b60405180910390fd5b5f61100b610859565b90505f61101986834761169a565b905060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b815260040161107993929190611e31565b6020604051808303815f875af1158015611095573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110b99190611e90565b505f8373ffffffffffffffffffffffffffffffffffffffff1663f979dcd783886040518363ffffffff1660e01b81526004016110f59190611b8d565b60206040518083038185885af1158015611111573d5f803e3d5ffd5b50505050506040513d601f19601f820116820180604052508101906111369190612008565b90508473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611173929190612103565b6020604051808303815f875af115801561118f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111b39190611e90565b5050505050505050565b5f806111c7610859565b90505f6111e03434476111da9190611ebb565b8461169a565b905083811015611225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121c906121a9565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611281929190612103565b6020604051808303815f875af115801561129d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112c19190611e90565b508092505050919050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611343575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161133a9190611c8f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113b3575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016113aa9190611c8f565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161148d9190611b8d565b60405180910390a3505050565b5f6114a58484610cf1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146115255781811015611517578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161150e9392919061212a565b60405180910390fd5b61152484848484036112d3565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361159b575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115929190611c8f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361160b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116029190611c8f565b60405180910390fd5b6116168383836117b9565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361168b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116829190611c8f565b60405180910390fd5b6116965f83836117b9565b5050565b5f80831180156116a957505f82115b6116e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116df906122b8565b60405180910390fd5b5f6063856116f69190611eee565b90505f83826117059190611eee565b90505f826064876117169190611eee565b6117209190611dfe565b9050808261172e9190611f5c565b93505050509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117aa575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117a19190611c8f565b60405180910390fd5b6117b5825f836117b9565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611809578060025f8282546117fd9190611dfe565b925050819055506118d7565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611892578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016118899392919061212a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361191e578060025f8282540392505081905550611968565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119c59190611b8d565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611a095780820151818401526020810190506119ee565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611a2e826119d2565b611a3881856119dc565b9350611a488185602086016119ec565b611a5181611a14565b840191505092915050565b5f6020820190508181035f830152611a748184611a24565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611aa982611a80565b9050919050565b611ab981611a9f565b8114611ac3575f80fd5b50565b5f81359050611ad481611ab0565b92915050565b5f819050919050565b611aec81611ada565b8114611af6575f80fd5b50565b5f81359050611b0781611ae3565b92915050565b5f8060408385031215611b2357611b22611a7c565b5b5f611b3085828601611ac6565b9250506020611b4185828601611af9565b9150509250929050565b5f8115159050919050565b611b5f81611b4b565b82525050565b5f602082019050611b785f830184611b56565b92915050565b611b8781611ada565b82525050565b5f602082019050611ba05f830184611b7e565b92915050565b5f805f60608486031215611bbd57611bbc611a7c565b5b5f611bca86828701611ac6565b9350506020611bdb86828701611ac6565b9250506040611bec86828701611af9565b9150509250925092565b5f60ff82169050919050565b611c0b81611bf6565b82525050565b5f602082019050611c245f830184611c02565b92915050565b5f60208284031215611c3f57611c3e611a7c565b5b5f611c4c84828501611af9565b91505092915050565b5f60208284031215611c6a57611c69611a7c565b5b5f611c7784828501611ac6565b91505092915050565b611c8981611a9f565b82525050565b5f602082019050611ca25f830184611c80565b92915050565b5f8060408385031215611cbe57611cbd611a7c565b5b5f611ccb85828601611ac6565b9250506020611cdc85828601611ac6565b9150509250929050565b5f8060408385031215611cfc57611cfb611a7c565b5b5f611d0985828601611af9565b9250506020611d1a85828601611af9565b9150509250929050565b5f805f60608486031215611d3b57611d3a611a7c565b5b5f611d4886828701611af9565b9350506020611d5986828701611af9565b9250506040611d6a86828701611ac6565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611db857607f821691505b602082108103611dcb57611dca611d74565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e0882611ada565b9150611e1383611ada565b9250828201905080821115611e2b57611e2a611dd1565b5b92915050565b5f606082019050611e445f830186611c80565b611e516020830185611c80565b611e5e6040830184611b7e565b949350505050565b611e6f81611b4b565b8114611e79575f80fd5b50565b5f81519050611e8a81611e66565b92915050565b5f60208284031215611ea557611ea4611a7c565b5b5f611eb284828501611e7c565b91505092915050565b5f611ec582611ada565b9150611ed083611ada565b9250828203905081811115611ee857611ee7611dd1565b5b92915050565b5f611ef882611ada565b9150611f0383611ada565b9250828202611f1181611ada565b91508282048414831517611f2857611f27611dd1565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f6682611ada565b9150611f7183611ada565b925082611f8157611f80611f2f565b5b828204905092915050565b7f496e73756666696369656e7420746f6b656e20616d6f756e74000000000000005f82015250565b5f611fc06019836119dc565b9150611fcb82611f8c565b602082019050919050565b5f6020820190508181035f830152611fed81611fb4565b9050919050565b5f8151905061200281611ae3565b92915050565b5f6020828403121561201d5761201c611a7c565b5b5f61202a84828501611ff4565b91505092915050565b7f496e76616c696420696e707574000000000000000000000000000000000000005f82015250565b5f612067600d836119dc565b915061207282612033565b602082019050919050565b5f6020820190508181035f8301526120948161205b565b9050919050565b7f496e73756666696369656e74206c6971756964697479000000000000000000005f82015250565b5f6120cf6016836119dc565b91506120da8261209b565b602082019050919050565b5f6020820190508181035f8301526120fc816120c3565b9050919050565b5f6040820190506121165f830185611c80565b6121236020830184611b7e565b9392505050565b5f60608201905061213d5f830186611c80565b61214a6020830185611b7e565b6121576040830184611b7e565b949350505050565b7f496e73756666696369656e74206f757470757420616d6f756e740000000000005f82015250565b5f612193601a836119dc565b915061219e8261215f565b602082019050919050565b5f6020820190508181035f8301526121c081612187565b9050919050565b5f815190506121d581611ab0565b92915050565b5f602082840312156121f0576121ef611a7c565b5b5f6121fd848285016121c7565b91505092915050565b7f496e76616c69642065786368616e6765206164647265737300000000000000005f82015250565b5f61223a6018836119dc565b915061224582612206565b602082019050919050565b5f6020820190508181035f8301526122678161222e565b9050919050565b7f496e76616c6964207265736572766500000000000000000000000000000000005f82015250565b5f6122a2600f836119dc565b91506122ad8261226e565b602082019050919050565b5f6020820190508181035f8301526122cf81612296565b905091905056fea26469706673582212207159efda554dd21452c0fe4046cb1fc6d231d596c2ca665823e6e8167de6276064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xC2507AC1 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0xE0486C8A EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0xF7A7E324 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xF979DCD7 EQ PUSH2 0x4F3 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x966DAE0E EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3B7 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x59BF5D39 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x8FC7A25D EQ PUSH2 0x2E1 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x64A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH2 0x99E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35B PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0xBCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0xC6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x455 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x1CA8 JUMP JUMPDEST PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0xEBE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x532 SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x55E SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x580 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x58C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5BD PUSH2 0x12CC JUMP JUMPDEST SWAP1 POP PUSH2 0x5CA DUP2 DUP6 DUP6 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5E8 PUSH2 0x12CC JUMP JUMPDEST SWAP1 POP PUSH2 0x5F5 DUP6 DUP3 DUP6 PUSH2 0x149A JUMP JUMPDEST PUSH2 0x600 DUP6 DUP6 DUP6 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x61E PUSH2 0x12CC JUMP JUMPDEST SWAP1 POP PUSH2 0x63F DUP2 DUP6 DUP6 PUSH2 0x630 DUP6 DUP10 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x1DFE JUMP JUMPDEST PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x653 PUSH2 0x859 JUMP JUMPDEST SUB PUSH2 0x710 JUMPI PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH0 SELFBALANCE SWAP1 POP PUSH2 0x709 CALLER DUP3 PUSH2 0x161B JUMP JUMPDEST POP POP PUSH2 0x856 JUMP JUMPDEST PUSH0 CALLVALUE SELFBALANCE PUSH2 0x71D SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x728 PUSH2 0x859 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP3 CALLVALUE PUSH2 0x738 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH2 0x742 SWAP2 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST SWAP1 POP DUP1 DUP5 LT ISZERO PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP1 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x801 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x825 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH0 DUP4 CALLVALUE PUSH2 0x831 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x83B SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST SWAP1 POP PUSH2 0x851 CALLER DUP3 PUSH2 0x161B JUMP JUMPDEST POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8CF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F3 SWAP2 SWAP1 PUSH2 0x2008 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 GT PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x977 SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x989 PUSH2 0x859 JUMP JUMPDEST SWAP1 POP PUSH2 0x996 DUP4 DUP3 SELFBALANCE PUSH2 0x169A JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9AD SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D9 SWAP1 PUSH2 0x1DA1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA24 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA24 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA07 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8C SWAP1 PUSH2 0x20E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xA9E PUSH2 0x5D5 JUMP JUMPDEST DUP3 SELFBALANCE PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH2 0xAB4 SWAP2 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xABF PUSH2 0x5D5 JUMP JUMPDEST DUP4 PUSH2 0xAC8 PUSH2 0x859 JUMP JUMPDEST PUSH2 0xAD2 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST SWAP1 POP PUSH2 0xAE8 CALLER DUP5 PUSH2 0x173A JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB2B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB88 SWAP3 SWAP2 SWAP1 PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBA4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC8 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBFD PUSH2 0x12CC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC0A DUP3 DUP7 PUSH2 0xCF1 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC55 JUMPI DUP5 DUP2 DUP6 PUSH1 0x40 MLOAD PUSH32 0xA60F030C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC62 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC78 PUSH2 0x12CC JUMP JUMPDEST SWAP1 POP PUSH2 0xC85 DUP2 DUP6 DUP6 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 GT PUSH2 0xCD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCA SWAP1 PUSH2 0x207D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xCDC PUSH2 0x859 JUMP JUMPDEST SWAP1 POP PUSH2 0xCE9 DUP4 SELFBALANCE DUP4 PUSH2 0x169A JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD7D PUSH2 0x859 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD8B DUP6 DUP4 SELFBALANCE PUSH2 0x169A JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC7 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE4A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE6E SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEB2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6F2BF62 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF19 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF35 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x21DB JUMP JUMPDEST SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xFC3 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF9 SWAP1 PUSH2 0x2250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x100B PUSH2 0x859 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1019 DUP7 DUP4 SELFBALANCE PUSH2 0x169A JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1079 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1095 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B9 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF979DCD7 DUP4 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F5 SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1111 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1136 SWAP2 SWAP1 PUSH2 0x2008 JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1173 SWAP3 SWAP2 SWAP1 PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x118F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B3 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x11C7 PUSH2 0x859 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x11E0 CALLVALUE CALLVALUE SELFBALANCE PUSH2 0x11DA SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST DUP5 PUSH2 0x169A JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1225 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121C SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1281 SWAP3 SWAP2 SWAP1 PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x129D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12C1 SWAP2 SWAP1 PUSH2 0x1E90 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1343 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133A SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AA SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x148D SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A5 DUP5 DUP5 PUSH2 0xCF1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1525 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1517 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1524 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x12D3 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x159B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1592 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x160B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1602 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1616 DUP4 DUP4 DUP4 PUSH2 0x17B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x168B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1682 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1696 PUSH0 DUP4 DUP4 PUSH2 0x17B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 GT DUP1 ISZERO PUSH2 0x16A9 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x16E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DF SWAP1 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x63 DUP6 PUSH2 0x16F6 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x1705 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x64 DUP8 PUSH2 0x1716 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH2 0x1720 SWAP2 SWAP1 PUSH2 0x1DFE JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x172E SWAP2 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17AA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A1 SWAP2 SWAP1 PUSH2 0x1C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17B5 DUP3 PUSH0 DUP4 PUSH2 0x17B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1809 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17FD SWAP2 SWAP1 PUSH2 0x1DFE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18D7 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1892 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1889 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x191E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1968 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19C5 SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A09 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19EE JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2E DUP3 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x1A38 DUP2 DUP6 PUSH2 0x19DC JUMP JUMPDEST SWAP4 POP PUSH2 0x1A48 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x19EC JUMP JUMPDEST PUSH2 0x1A51 DUP2 PUSH2 0x1A14 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A74 DUP2 DUP5 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA9 DUP3 PUSH2 0x1A80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB9 DUP2 PUSH2 0x1A9F JUMP JUMPDEST DUP2 EQ PUSH2 0x1AC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AD4 DUP2 PUSH2 0x1AB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEC DUP2 PUSH2 0x1ADA JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B07 DUP2 PUSH2 0x1AE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B23 JUMPI PUSH2 0x1B22 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B30 DUP6 DUP3 DUP7 ADD PUSH2 0x1AC6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B41 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5F DUP2 PUSH2 0x1B4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B78 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B56 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B87 DUP2 PUSH2 0x1ADA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BA0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BBD JUMPI PUSH2 0x1BBC PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BCA DUP7 DUP3 DUP8 ADD PUSH2 0x1AC6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BDB DUP7 DUP3 DUP8 ADD PUSH2 0x1AC6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BEC DUP7 DUP3 DUP8 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C0B DUP2 PUSH2 0x1BF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C24 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C3F JUMPI PUSH2 0x1C3E PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C4C DUP5 DUP3 DUP6 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C6A JUMPI PUSH2 0x1C69 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C77 DUP5 DUP3 DUP6 ADD PUSH2 0x1AC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C89 DUP2 PUSH2 0x1A9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CBE JUMPI PUSH2 0x1CBD PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CCB DUP6 DUP3 DUP7 ADD PUSH2 0x1AC6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CDC DUP6 DUP3 DUP7 ADD PUSH2 0x1AC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CFC JUMPI PUSH2 0x1CFB PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D09 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D1A DUP6 DUP3 DUP7 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D3B JUMPI PUSH2 0x1D3A PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D48 DUP7 DUP3 DUP8 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D59 DUP7 DUP3 DUP8 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D6A DUP7 DUP3 DUP8 ADD PUSH2 0x1AC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DB8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DCB JUMPI PUSH2 0x1DCA PUSH2 0x1D74 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E08 DUP3 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E13 DUP4 PUSH2 0x1ADA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E2B JUMPI PUSH2 0x1E2A PUSH2 0x1DD1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E44 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x1E51 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x1E5E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B7E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1E6F DUP2 PUSH2 0x1B4B JUMP JUMPDEST DUP2 EQ PUSH2 0x1E79 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E8A DUP2 PUSH2 0x1E66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA5 JUMPI PUSH2 0x1EA4 PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EB2 DUP5 DUP3 DUP6 ADD PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC5 DUP3 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED0 DUP4 PUSH2 0x1ADA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1EE8 JUMPI PUSH2 0x1EE7 PUSH2 0x1DD1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF8 DUP3 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP PUSH2 0x1F03 DUP4 PUSH2 0x1ADA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1F11 DUP2 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1F28 JUMPI PUSH2 0x1F27 PUSH2 0x1DD1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F66 DUP3 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP PUSH2 0x1F71 DUP4 PUSH2 0x1ADA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F81 JUMPI PUSH2 0x1F80 PUSH2 0x1F2F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E20616D6F756E7400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FC0 PUSH1 0x19 DUP4 PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1FCB DUP3 PUSH2 0x1F8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FED DUP2 PUSH2 0x1FB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2002 DUP2 PUSH2 0x1AE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x201D JUMPI PUSH2 0x201C PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x202A DUP5 DUP3 DUP6 ADD PUSH2 0x1FF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E70757400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2067 PUSH1 0xD DUP4 PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x2072 DUP3 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2094 DUP2 PUSH2 0x205B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20CF PUSH1 0x16 DUP4 PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x20DA DUP3 PUSH2 0x209B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20FC DUP2 PUSH2 0x20C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2116 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x2123 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B7E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x213D PUSH0 DUP4 ADD DUP7 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x214A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x2157 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B7E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206F757470757420616D6F756E74000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2193 PUSH1 0x1A DUP4 PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x219E DUP3 PUSH2 0x215F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21C0 DUP2 PUSH2 0x2187 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x21D5 DUP2 PUSH2 0x1AB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F0 JUMPI PUSH2 0x21EF PUSH2 0x1A7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21FD DUP5 DUP3 DUP6 ADD PUSH2 0x21C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642065786368616E676520616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x223A PUSH1 0x18 DUP4 PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x2245 DUP3 PUSH2 0x2206 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2267 DUP2 PUSH2 0x222E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726573657276650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22A2 PUSH1 0xF DUP4 PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x22AD DUP3 PUSH2 0x226E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22CF DUP2 PUSH2 0x2296 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x59EFDA554DD21452C0FE4046CB1FC6D231D5 SWAP7 0xC2 0xCA PUSH7 0x5823E6E8167DE6 0x27 PUSH1 0x64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "346:4832:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2357:89:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4580:188;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3427:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5330:247;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3285:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5972:234;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:829:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1513:122;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3582:116:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2380:253:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2559:93:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;425:29:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3641:475;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;391:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6695:493:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3894:180;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2124:248:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4132:140:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3115:518:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4124:1051;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2641:466;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2357:89:4;2402:13;2434:5;2427:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2357:89;:::o;4580:188::-;4654:4;4670:13;4686:12;:10;:12::i;:::-;4670:28;;4708:32;4717:5;4724:7;4733:6;4708:8;:32::i;:::-;4757:4;4750:11;;;4580:188;;;;:::o;3427:97::-;3479:7;3505:12;;3498:19;;3427:97;:::o;5330:247::-;5418:4;5434:15;5452:12;:10;:12::i;:::-;5434:30;;5474:38;5490:4;5496:7;5505:6;5474:15;:38::i;:::-;5522:27;5532:4;5538:2;5542:6;5522:9;:27::i;:::-;5566:4;5559:11;;;5330:247;;;;;:::o;3285:82::-;3334:5;3358:2;3351:9;;3285:82;:::o;5972:234::-;6060:4;6076:13;6092:12;:10;:12::i;:::-;6076:28;;6114:64;6123:5;6130:7;6167:10;6139:25;6149:5;6156:7;6139:9;:25::i;:::-;:38;;;;:::i;:::-;6114:8;:64::i;:::-;6195:4;6188:11;;;5972:234;;;;:::o;676:829:0:-;765:1;749:12;:10;:12::i;:::-;:17;745:753;;779:12;801;;;;;;;;;;;779:35;;825:5;:18;;;844:10;864:4;871:12;825:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;905:17;925:21;905:41;;957:28;963:10;975:9;957:5;:28::i;:::-;768:231;;745:753;;;1020:18;1065:9;1041:21;:33;;;;:::i;:::-;1020:54;;1089:20;1112:12;:10;:12::i;:::-;1089:35;;1139:19;1188:10;1173:12;1161:9;:24;;;;:::i;:::-;:37;;;;:::i;:::-;1139:59;;1237:11;1221:12;:27;;1213:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1302:12;;;;;;;;;;;1295:33;;;1329:10;1349:4;1356:11;1295:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1385:17;1433:10;1421:9;1405:13;:11;:13::i;:::-;:25;;;;:::i;:::-;:38;;;;:::i;:::-;1385:58;;1458:28;1464:10;1476:9;1458:5;:28::i;:::-;1005:493;;;;745:753;676:829;:::o;1513:122::-;1555:7;1589:12;;;;;;;;;;;1582:30;;;1621:4;1582:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1575:52;;1513:122;:::o;3582:116:4:-;3647:7;3673:9;:18;3683:7;3673:18;;;;;;;;;;;;;;;;3666:25;;3582:116;;;:::o;2380:253:0:-;2442:7;2483:1;2470:10;:14;2462:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;2513:20;2536:12;:10;:12::i;:::-;2513:35;;2566:58;2576:10;2588:12;2602:21;2566:9;:58::i;:::-;2559:65;;;2380:253;;;:::o;2559:93:4:-;2606:13;2638:7;2631:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2559:93;:::o;425:29:0:-;;;;;;;;;;;;;:::o;3641:475::-;3743:1;3725:15;:19;3717:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3784:19;3848:13;:11;:13::i;:::-;3830:15;3806:21;:39;;;;:::i;:::-;:55;;;;:::i;:::-;3784:77;;3872:21;3929:13;:11;:13::i;:::-;3911:15;3896:12;:10;:12::i;:::-;:30;;;;:::i;:::-;:46;;;;:::i;:::-;3872:70;;3955:34;3961:10;3973:15;3955:5;:34::i;:::-;4008:10;4000:28;;:41;4029:11;4000:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4059:12;;;;;;;;;;;4052:29;;;4082:10;4094:13;4052:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3706:410;;3641:475;:::o;391:27::-;;;;;;;;;;;;;:::o;6695:493:4:-;6790:4;6806:13;6822:12;:10;:12::i;:::-;6806:28;;6844:24;6871:25;6881:5;6888:7;6871:9;:25::i;:::-;6844:52;;6929:17;6910:16;:36;6906:148;;;6998:7;7007:16;7025:17;6969:74;;;;;;;;;;;;;:::i;:::-;;;;;;;;6906:148;7087:62;7096:5;7103:7;7131:17;7112:16;:36;7087:8;:62::i;:::-;7177:4;7170:11;;;;6695:493;;;;:::o;3894:180::-;3964:4;3980:13;3996:12;:10;:12::i;:::-;3980:28;;4018;4028:5;4035:2;4039:6;4018:9;:28::i;:::-;4063:4;4056:11;;;3894:180;;;;:::o;2124:248:0:-;2186:7;2225:1;2214:8;:12;2206:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2255:20;2278:12;:10;:12::i;:::-;2255:35;;2308:56;2318:8;2328:21;2351:12;2308:9;:56::i;:::-;2301:63;;;2124:248;;;:::o;4132:140:4:-;4212:7;4238:11;:18;4250:5;4238:18;;;;;;;;;;;;;;;:27;4257:7;4238:27;;;;;;;;;;;;;;;;4231:34;;4132:140;;;;:::o;3115:518:0:-;3199:7;3219:20;3242:12;:10;:12::i;:::-;3219:35;;3265:17;3285:108;3309:10;3334:12;3361:21;3285:9;:108::i;:::-;3265:128;;3425:7;3412:9;:20;;3404:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3483:12;;;;;;;;;;;3476:33;;;3510:10;3530:4;3537:10;3476:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3567:10;3559:28;;:39;3588:9;3559:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:9;3609:16;;;;3115:518;;;;:::o;4124:1051::-;4482:23;4517:14;;;;;;;;;;;4508:36;;;4545:13;4508:51;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4482:77;;4619:4;4592:32;;:15;:32;;;;:65;;;;;4655:1;4628:29;;:15;:29;;;;4592:65;4570:139;;;;;;;;;;;;:::i;:::-;;;;;;;;;4730:20;4753:12;:10;:12::i;:::-;4730:35;;4776:17;4796:108;4820:10;4845:12;4872:21;4796:9;:108::i;:::-;4776:128;;4922:12;;;;;;;;;;;4915:33;;;4949:10;4969:4;4976:10;4915:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5000:20;5033:15;5023:41;;;5072:9;5083:16;5023:77;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5000:100;;5118:13;5111:30;;;5142:10;5154:12;5111:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4270:905;;;;4124:1051;;;:::o;2641:466::-;2717:7;2737:20;2760:12;:10;:12::i;:::-;2737:35;;2783:20;2806:119;2830:9;2878;2854:21;:33;;;;:::i;:::-;2902:12;2806:9;:119::i;:::-;2783:142;;2960:10;2944:12;:26;;2936:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;3021:12;;;;;;;;;;;3014:29;;;3044:10;3056:12;3014:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3087:12;3080:19;;;;2641:466;;;:::o;641:96:7:-;694:7;720:10;713:17;;641:96;:::o;10659:380:4:-;10773:1;10756:19;;:5;:19;;;10752:89;;10827:1;10798:32;;;;;;;;;;;:::i;:::-;;;;;;;;10752:89;10873:1;10854:21;;:7;:21;;;10850:90;;10926:1;10898:31;;;;;;;;;;;:::i;:::-;;;;;;;;10850:90;10979:6;10949:11;:18;10961:5;10949:18;;;;;;;;;;;;;;;:27;10968:7;10949:27;;;;;;;;;;;;;;;:36;;;;11016:7;11000:32;;11009:5;11000:32;;;11025:6;11000:32;;;;;;:::i;:::-;;;;;;;;10659:380;;;:::o;11320:474::-;11420:24;11447:25;11457:5;11464:7;11447:9;:25::i;:::-;11420:52;;11506:17;11486:16;:37;11482:306;;11562:6;11543:16;:25;11539:132;;;11622:7;11631:16;11649:6;11595:61;;;;;;;;;;;;;:::i;:::-;;;;;;;;11539:132;11712:51;11721:5;11728:7;11756:6;11737:16;:25;11712:8;:51::i;:::-;11482:306;11410:384;11320:474;;;:::o;7553:302::-;7653:1;7637:18;;:4;:18;;;7633:86;;7705:1;7678:30;;;;;;;;;;;:::i;:::-;;;;;;;;7633:86;7746:1;7732:16;;:2;:16;;;7728:86;;7800:1;7771:32;;;;;;;;;;;:::i;:::-;;;;;;;;7728:86;7823:25;7831:4;7837:2;7841:6;7823:7;:25::i;:::-;7553:302;;;:::o;9504:210::-;9594:1;9575:21;;:7;:21;;;9571:91;;9648:1;9619:32;;;;;;;;;;;:::i;:::-;;;;;;;;9571:91;9671:36;9687:1;9691:7;9700:6;9671:7;:36::i;:::-;9504:210;;:::o;1643:473:0:-;1783:7;1826:1;1811:12;:16;:37;;;;;1847:1;1831:13;:17;1811:37;1803:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1881:26;1924:2;1910:11;:16;;;;:::i;:::-;1881:45;;1937:17;1978:13;1957:18;:34;;;;:::i;:::-;1937:54;;2002:19;2047:18;2040:3;2025:12;:18;;;;:::i;:::-;2024:41;;;;:::i;:::-;2002:63;;2097:11;2085:9;:23;;;;:::i;:::-;2078:30;;;;;1643:473;;;;;:::o;10028:208:4:-;10118:1;10099:21;;:7;:21;;;10095:89;;10170:1;10143:30;;;;;;;;;;;:::i;:::-;;;;;;;;10095:89;10193:36;10201:7;10218:1;10222:6;10193:7;:36::i;:::-;10028:208;;:::o;8155:1017::-;8261:1;8245:18;;:4;:18;;;8241:443;;8295:6;8279:12;;:22;;;;;;;:::i;:::-;;;;;;;;8241:443;;;8332:19;8354:9;:15;8364:4;8354:15;;;;;;;;;;;;;;;;8332:37;;8401:6;8387:11;:20;8383:117;;;8459:4;8465:11;8478:6;8434:51;;;;;;;;;;;;;:::i;:::-;;;;;;;;8383:117;8653:6;8639:11;:20;8621:9;:15;8631:4;8621:15;;;;;;;;;;;;;;;:38;;;;8318:366;8241:443;8712:1;8698:16;;:2;:16;;;8694:430;;8879:6;8863:12;;:22;;;;;;;;;;;8694:430;;;9093:6;9076:9;:13;9086:2;9076:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8694:430;9154:2;9139:26;;9148:4;9139:26;;;9158:6;9139:26;;;;;;:::i;:::-;;;;;;;;8155:1017;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:474::-;5943:6;5951;6000:2;5988:9;5979:7;5975:23;5971:32;5968:119;;;6006:79;;:::i;:::-;5968:119;6126:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;:::i;:::-;6141:63;;6097:117;6253:2;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6224:118;5875:474;;;;;:::o;6355:::-;6423:6;6431;6480:2;6468:9;6459:7;6455:23;6451:32;6448:119;;;6486:79;;:::i;:::-;6448:119;6606:1;6631:53;6676:7;6667:6;6656:9;6652:22;6631:53;:::i;:::-;6621:63;;6577:117;6733:2;6759:53;6804:7;6795:6;6784:9;6780:22;6759:53;:::i;:::-;6749:63;;6704:118;6355:474;;;;;:::o;6835:619::-;6912:6;6920;6928;6977:2;6965:9;6956:7;6952:23;6948:32;6945:119;;;6983:79;;:::i;:::-;6945:119;7103:1;7128:53;7173:7;7164:6;7153:9;7149:22;7128:53;:::i;:::-;7118:63;;7074:117;7230:2;7256:53;7301:7;7292:6;7281:9;7277:22;7256:53;:::i;:::-;7246:63;;7201:118;7358:2;7384:53;7429:7;7420:6;7409:9;7405:22;7384:53;:::i;:::-;7374:63;;7329:118;6835:619;;;;;:::o;7460:180::-;7508:77;7505:1;7498:88;7605:4;7602:1;7595:15;7629:4;7626:1;7619:15;7646:320;7690:6;7727:1;7721:4;7717:12;7707:22;;7774:1;7768:4;7764:12;7795:18;7785:81;;7851:4;7843:6;7839:17;7829:27;;7785:81;7913:2;7905:6;7902:14;7882:18;7879:38;7876:84;;7932:18;;:::i;:::-;7876:84;7697:269;7646:320;;;:::o;7972:180::-;8020:77;8017:1;8010:88;8117:4;8114:1;8107:15;8141:4;8138:1;8131:15;8158:191;8198:3;8217:20;8235:1;8217:20;:::i;:::-;8212:25;;8251:20;8269:1;8251:20;:::i;:::-;8246:25;;8294:1;8291;8287:9;8280:16;;8315:3;8312:1;8309:10;8306:36;;;8322:18;;:::i;:::-;8306:36;8158:191;;;;:::o;8355:442::-;8504:4;8542:2;8531:9;8527:18;8519:26;;8555:71;8623:1;8612:9;8608:17;8599:6;8555:71;:::i;:::-;8636:72;8704:2;8693:9;8689:18;8680:6;8636:72;:::i;:::-;8718;8786:2;8775:9;8771:18;8762:6;8718:72;:::i;:::-;8355:442;;;;;;:::o;8803:116::-;8873:21;8888:5;8873:21;:::i;:::-;8866:5;8863:32;8853:60;;8909:1;8906;8899:12;8853:60;8803:116;:::o;8925:137::-;8979:5;9010:6;9004:13;8995:22;;9026:30;9050:5;9026:30;:::i;:::-;8925:137;;;;:::o;9068:345::-;9135:6;9184:2;9172:9;9163:7;9159:23;9155:32;9152:119;;;9190:79;;:::i;:::-;9152:119;9310:1;9335:61;9388:7;9379:6;9368:9;9364:22;9335:61;:::i;:::-;9325:71;;9281:125;9068:345;;;;:::o;9419:194::-;9459:4;9479:20;9497:1;9479:20;:::i;:::-;9474:25;;9513:20;9531:1;9513:20;:::i;:::-;9508:25;;9557:1;9554;9550:9;9542:17;;9581:1;9575:4;9572:11;9569:37;;;9586:18;;:::i;:::-;9569:37;9419:194;;;;:::o;9619:410::-;9659:7;9682:20;9700:1;9682:20;:::i;:::-;9677:25;;9716:20;9734:1;9716:20;:::i;:::-;9711:25;;9771:1;9768;9764:9;9793:30;9811:11;9793:30;:::i;:::-;9782:41;;9972:1;9963:7;9959:15;9956:1;9953:22;9933:1;9926:9;9906:83;9883:139;;10002:18;;:::i;:::-;9883:139;9667:362;9619:410;;;;:::o;10035:180::-;10083:77;10080:1;10073:88;10180:4;10177:1;10170:15;10204:4;10201:1;10194:15;10221:185;10261:1;10278:20;10296:1;10278:20;:::i;:::-;10273:25;;10312:20;10330:1;10312:20;:::i;:::-;10307:25;;10351:1;10341:35;;10356:18;;:::i;:::-;10341:35;10398:1;10395;10391:9;10386:14;;10221:185;;;;:::o;10412:175::-;10552:27;10548:1;10540:6;10536:14;10529:51;10412:175;:::o;10593:366::-;10735:3;10756:67;10820:2;10815:3;10756:67;:::i;:::-;10749:74;;10832:93;10921:3;10832:93;:::i;:::-;10950:2;10945:3;10941:12;10934:19;;10593:366;;;:::o;10965:419::-;11131:4;11169:2;11158:9;11154:18;11146:26;;11218:9;11212:4;11208:20;11204:1;11193:9;11189:17;11182:47;11246:131;11372:4;11246:131;:::i;:::-;11238:139;;10965:419;;;:::o;11390:143::-;11447:5;11478:6;11472:13;11463:22;;11494:33;11521:5;11494:33;:::i;:::-;11390:143;;;;:::o;11539:351::-;11609:6;11658:2;11646:9;11637:7;11633:23;11629:32;11626:119;;;11664:79;;:::i;:::-;11626:119;11784:1;11809:64;11865:7;11856:6;11845:9;11841:22;11809:64;:::i;:::-;11799:74;;11755:128;11539:351;;;;:::o;11896:163::-;12036:15;12032:1;12024:6;12020:14;12013:39;11896:163;:::o;12065:366::-;12207:3;12228:67;12292:2;12287:3;12228:67;:::i;:::-;12221:74;;12304:93;12393:3;12304:93;:::i;:::-;12422:2;12417:3;12413:12;12406:19;;12065:366;;;:::o;12437:419::-;12603:4;12641:2;12630:9;12626:18;12618:26;;12690:9;12684:4;12680:20;12676:1;12665:9;12661:17;12654:47;12718:131;12844:4;12718:131;:::i;:::-;12710:139;;12437:419;;;:::o;12862:172::-;13002:24;12998:1;12990:6;12986:14;12979:48;12862:172;:::o;13040:366::-;13182:3;13203:67;13267:2;13262:3;13203:67;:::i;:::-;13196:74;;13279:93;13368:3;13279:93;:::i;:::-;13397:2;13392:3;13388:12;13381:19;;13040:366;;;:::o;13412:419::-;13578:4;13616:2;13605:9;13601:18;13593:26;;13665:9;13659:4;13655:20;13651:1;13640:9;13636:17;13629:47;13693:131;13819:4;13693:131;:::i;:::-;13685:139;;13412:419;;;:::o;13837:332::-;13958:4;13996:2;13985:9;13981:18;13973:26;;14009:71;14077:1;14066:9;14062:17;14053:6;14009:71;:::i;:::-;14090:72;14158:2;14147:9;14143:18;14134:6;14090:72;:::i;:::-;13837:332;;;;;:::o;14175:442::-;14324:4;14362:2;14351:9;14347:18;14339:26;;14375:71;14443:1;14432:9;14428:17;14419:6;14375:71;:::i;:::-;14456:72;14524:2;14513:9;14509:18;14500:6;14456:72;:::i;:::-;14538;14606:2;14595:9;14591:18;14582:6;14538:72;:::i;:::-;14175:442;;;;;;:::o;14623:176::-;14763:28;14759:1;14751:6;14747:14;14740:52;14623:176;:::o;14805:366::-;14947:3;14968:67;15032:2;15027:3;14968:67;:::i;:::-;14961:74;;15044:93;15133:3;15044:93;:::i;:::-;15162:2;15157:3;15153:12;15146:19;;14805:366;;;:::o;15177:419::-;15343:4;15381:2;15370:9;15366:18;15358:26;;15430:9;15424:4;15420:20;15416:1;15405:9;15401:17;15394:47;15458:131;15584:4;15458:131;:::i;:::-;15450:139;;15177:419;;;:::o;15602:143::-;15659:5;15690:6;15684:13;15675:22;;15706:33;15733:5;15706:33;:::i;:::-;15602:143;;;;:::o;15751:351::-;15821:6;15870:2;15858:9;15849:7;15845:23;15841:32;15838:119;;;15876:79;;:::i;:::-;15838:119;15996:1;16021:64;16077:7;16068:6;16057:9;16053:22;16021:64;:::i;:::-;16011:74;;15967:128;15751:351;;;;:::o;16108:174::-;16248:26;16244:1;16236:6;16232:14;16225:50;16108:174;:::o;16288:366::-;16430:3;16451:67;16515:2;16510:3;16451:67;:::i;:::-;16444:74;;16527:93;16616:3;16527:93;:::i;:::-;16645:2;16640:3;16636:12;16629:19;;16288:366;;;:::o;16660:419::-;16826:4;16864:2;16853:9;16849:18;16841:26;;16913:9;16907:4;16903:20;16899:1;16888:9;16884:17;16877:47;16941:131;17067:4;16941:131;:::i;:::-;16933:139;;16660:419;;;:::o;17085:165::-;17225:17;17221:1;17213:6;17209:14;17202:41;17085:165;:::o;17256:366::-;17398:3;17419:67;17483:2;17478:3;17419:67;:::i;:::-;17412:74;;17495:93;17584:3;17495:93;:::i;:::-;17613:2;17608:3;17604:12;17597:19;;17256:366;;;:::o;17628:419::-;17794:4;17832:2;17821:9;17817:18;17809:26;;17881:9;17875:4;17871:20;17867:1;17856:9;17852:17;17845:47;17909:131;18035:4;17909:131;:::i;:::-;17901:139;;17628:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1794400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"decimals()": "450",
								"decreaseAllowance(address,uint256)": "infinite",
								"ethToTokenSwap(uint256)": "infinite",
								"factoryAddress()": "2553",
								"getEthAmount(uint256)": "infinite",
								"getReserve()": "infinite",
								"getTokenAmount(uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"removeLiquidity(uint256)": "infinite",
								"symbol()": "infinite",
								"tokenAddress()": "2597",
								"tokenToEthSwap(uint256,uint256)": "infinite",
								"tokenToTokenSwap(uint256,uint256,address)": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"getAmount(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 346,
									"end": 5178,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 346,
									"end": 5178,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 346,
									"end": 5178,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 463,
									"end": 668,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 668,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 463,
									"end": 668,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 668,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 668,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 463,
									"end": 668,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 463,
									"end": 668,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 463,
									"end": 668,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "PUSH",
									"source": 4,
									"value": "4D756E69737761702D5631000000000000000000000000000000000000000000"
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "PUSH",
									"source": 4,
									"value": "4D554E492D563100000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2253,
									"end": 2258,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2250,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2245,
									"end": 2258,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2258,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2258,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2245,
									"end": 2258,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2258,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2258,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2245,
									"end": 2258,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2258,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2245,
									"end": 2258,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2258,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2278,
									"end": 2285,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2268,
									"end": 2275,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2268,
									"end": 2285,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2268,
									"end": 2285,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2268,
									"end": 2285,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2268,
									"end": 2285,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2268,
									"end": 2285,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2268,
									"end": 2285,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2268,
									"end": 2285,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2268,
									"end": 2285,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2268,
									"end": 2285,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2268,
									"end": 2285,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2292,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 560,
									"end": 561,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 542,
									"end": 562,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 542,
									"end": 562,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 542,
									"end": 548,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 542,
									"end": 562,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 542,
									"end": 562,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 542,
									"end": 562,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 534,
									"end": 588,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 534,
									"end": 588,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 616,
									"end": 622,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 601,
									"end": 613,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 601,
									"end": 613,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 601,
									"end": 622,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 650,
									"end": 660,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 633,
									"end": 647,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 633,
									"end": 647,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 633,
									"end": 660,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 668,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 346,
									"end": 5178,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 346,
									"end": 5178,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6598,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 6429,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6513,
									"end": 6524,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6547,
									"end": 6553,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6542,
									"end": 6545,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6535,
									"end": 6554,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6587,
									"end": 6591,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6582,
									"end": 6585,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6578,
									"end": 6592,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6563,
									"end": 6592,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6563,
									"end": 6592,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6598,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6598,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6598,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6429,
									"end": 6598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6604,
									"end": 6775,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 6604,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6744,
									"end": 6767,
									"name": "PUSH",
									"source": 8,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 6740,
									"end": 6741,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6732,
									"end": 6738,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6728,
									"end": 6742,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6721,
									"end": 6768,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6604,
									"end": 6775,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6604,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 7147,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 6781,
									"end": 7147,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6923,
									"end": 6926,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6944,
									"end": 7011,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 7008,
									"end": 7010,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 7003,
									"end": 7006,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6944,
									"end": 7011,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 6944,
									"end": 7011,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6944,
									"end": 7011,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 6944,
									"end": 7011,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6937,
									"end": 7011,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6937,
									"end": 7011,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7020,
									"end": 7113,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 7109,
									"end": 7112,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7020,
									"end": 7113,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 7020,
									"end": 7113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7020,
									"end": 7113,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 7020,
									"end": 7113,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7138,
									"end": 7140,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7133,
									"end": 7136,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7129,
									"end": 7141,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7122,
									"end": 7141,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7122,
									"end": 7141,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 7147,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 7147,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 7147,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 7147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7153,
									"end": 7572,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 7153,
									"end": 7572,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7319,
									"end": 7323,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7357,
									"end": 7359,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7346,
									"end": 7355,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7342,
									"end": 7360,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7334,
									"end": 7360,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7334,
									"end": 7360,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7406,
									"end": 7415,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7404,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7396,
									"end": 7416,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 7392,
									"end": 7393,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7381,
									"end": 7390,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7377,
									"end": 7394,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7370,
									"end": 7417,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7434,
									"end": 7565,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 7560,
									"end": 7564,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7434,
									"end": 7565,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 7434,
									"end": 7565,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7434,
									"end": 7565,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 7434,
									"end": 7565,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7426,
									"end": 7565,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7426,
									"end": 7565,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7153,
									"end": 7572,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7153,
									"end": 7572,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7153,
									"end": 7572,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7153,
									"end": 7572,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 346,
									"end": 5178,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 346,
									"end": 5178,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 346,
									"end": 5178,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 346,
									"end": 5178,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 346,
									"end": 5178,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 346,
									"end": 5178,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 346,
									"end": 5178,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 346,
									"end": 5178,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 346,
									"end": 5178,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207159efda554dd21452c0fe4046cb1fc6d231d596c2ca665823e6e8167de6276064736f6c63430008140033",
									".code": [
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "C2507AC1"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "E0486C8A"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "F7A7E324"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "F979DCD7"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "966DAE0E"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "9C8F9F23"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "9D76EA58"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "51C6590A"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "59BF5D39"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "8FC7A25D"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 5178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2357,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2357,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4580,
											"end": 4768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4580,
											"end": 4768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4580,
											"end": 4768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3427,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3427,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5330,
											"end": 5577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5330,
											"end": 5577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 5330,
											"end": 5577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3285,
											"end": 3367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3285,
											"end": 3367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5972,
											"end": 6206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5972,
											"end": 6206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 5972,
											"end": 6206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 676,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 676,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1513,
											"end": 1635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1513,
											"end": 1635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3582,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3582,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3582,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2380,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2380,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2380,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2559,
											"end": 2652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2559,
											"end": 2652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 425,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 425,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 425,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3641,
											"end": 4116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3641,
											"end": 4116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 391,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 391,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 6695,
											"end": 7188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6695,
											"end": 7188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 6695,
											"end": 7188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3894,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3894,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3894,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2124,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2124,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2124,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4132,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4132,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4132,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3115,
											"end": 3633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3115,
											"end": 3633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3115,
											"end": 3633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4124,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4124,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2641,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2641,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2641,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2415,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2434,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2427,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2427,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4658,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4683,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4686,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4686,
											"end": 4698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4670,
											"end": 4698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4670,
											"end": 4698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4717,
											"end": 4722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 4731,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4733,
											"end": 4739,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4708,
											"end": 4740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4740,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4708,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 4761,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4750,
											"end": 4761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4750,
											"end": 4761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4750,
											"end": 4761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3505,
											"end": 3517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5418,
											"end": 5422,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5434,
											"end": 5449,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5452,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5452,
											"end": 5464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5464,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5452,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5434,
											"end": 5464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5434,
											"end": 5464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5474,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5490,
											"end": 5494,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5496,
											"end": 5503,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5505,
											"end": 5511,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5474,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5474,
											"end": 5512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5474,
											"end": 5512,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5474,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5522,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5532,
											"end": 5536,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5538,
											"end": 5540,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5548,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5522,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5522,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5522,
											"end": 5549,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5522,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5566,
											"end": 5570,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5559,
											"end": 5570,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5559,
											"end": 5570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5559,
											"end": 5570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3339,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3360,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6060,
											"end": 6064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6076,
											"end": 6089,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6092,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 6092,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 6092,
											"end": 6104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6092,
											"end": 6104,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 6092,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6076,
											"end": 6104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6076,
											"end": 6104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6114,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 6123,
											"end": 6128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6137,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6177,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6139,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 6149,
											"end": 6154,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6163,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 6139,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6139,
											"end": 6164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6139,
											"end": 6164,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 6139,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6139,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 6139,
											"end": 6177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6139,
											"end": 6177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6139,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 6139,
											"end": 6177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6139,
											"end": 6177,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 6139,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6114,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6114,
											"end": 6178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6114,
											"end": 6178,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 6114,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6195,
											"end": 6199,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6188,
											"end": 6199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5972,
											"end": 6206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 749,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 749,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 749,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 749,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 749,
											"end": 766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 745,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 745,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 779,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 801,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 801,
											"end": 813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 801,
											"end": 813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 801,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 801,
											"end": 813,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 801,
											"end": 813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 801,
											"end": 813,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 801,
											"end": 813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 801,
											"end": 813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 779,
											"end": 814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 779,
											"end": 814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 825,
											"end": 830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 843,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 825,
											"end": 843,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 825,
											"end": 843,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 844,
											"end": 854,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 864,
											"end": 868,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 871,
											"end": 883,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 825,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 825,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 825,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 825,
											"end": 884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 905,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 946,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 905,
											"end": 946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 905,
											"end": 946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 963,
											"end": 973,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 975,
											"end": 984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 957,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 957,
											"end": 985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 985,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 957,
											"end": 985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 768,
											"end": 999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 745,
											"end": 1498,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 1498,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 745,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1020,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1041,
											"end": 1074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1041,
											"end": 1074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1074,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1041,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1020,
											"end": 1074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1020,
											"end": 1074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1112,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1112,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1124,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1112,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1161,
											"end": 1185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1161,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1185,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1161,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1161,
											"end": 1198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1161,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1198,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1161,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1248,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1248,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1213,
											"end": 1278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1213,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1302,
											"end": 1314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1329,
											"end": 1339,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1353,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1356,
											"end": 1367,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1295,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1295,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1405,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1418,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1405,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1405,
											"end": 1430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1405,
											"end": 1430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1430,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1405,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1405,
											"end": 1443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1405,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1476,
											"end": 1485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1458,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1486,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1458,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 1498,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 745,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 676,
											"end": 1505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1582,
											"end": 1612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1621,
											"end": 1625,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1582,
											"end": 1627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1582,
											"end": 1627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3690,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3666,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3666,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2442,
											"end": 2449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2470,
											"end": 2480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2462,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2462,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2536,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2536,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2548,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2536,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2576,
											"end": 2586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2588,
											"end": 2600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2602,
											"end": 2623,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2566,
											"end": 2624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2624,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2566,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2619,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2638,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2631,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2631,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 425,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3743,
											"end": 3744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3725,
											"end": 3744,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 3717,
											"end": 3771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3717,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 3848,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3848,
											"end": 3861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3830,
											"end": 3845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3827,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3806,
											"end": 3845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3806,
											"end": 3845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3845,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3806,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3806,
											"end": 3861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3806,
											"end": 3861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3861,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3806,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3872,
											"end": 3893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3929,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3929,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3929,
											"end": 3942,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3929,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3911,
											"end": 3926,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3896,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3896,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3908,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3896,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3896,
											"end": 3926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3896,
											"end": 3926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3926,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3896,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3896,
											"end": 3942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3896,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3942,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3896,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3872,
											"end": 3942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3872,
											"end": 3942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3961,
											"end": 3971,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 3988,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3955,
											"end": 3989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3989,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3955,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4008,
											"end": 4018,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4000,
											"end": 4028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 4029,
											"end": 4040,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4052,
											"end": 4081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4081,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4082,
											"end": 4092,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4052,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 4052,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 4116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 4116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 4116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 391,
											"end": 418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 391,
											"end": 418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6790,
											"end": 6794,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6822,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 6822,
											"end": 6834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6834,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6822,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6806,
											"end": 6834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6806,
											"end": 6834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6868,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6871,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 6881,
											"end": 6886,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 6895,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6871,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6871,
											"end": 6896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6871,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 6871,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6929,
											"end": 6946,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6946,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7054,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 6906,
											"end": 7054,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6998,
											"end": 7005,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7023,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7025,
											"end": 7042,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "PUSH",
											"source": 4,
											"value": "A60F030C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6969,
											"end": 7043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6969,
											"end": 7043,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7054,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 6906,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 7096,
											"end": 7101,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7103,
											"end": 7110,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7131,
											"end": 7148,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7112,
											"end": 7128,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7112,
											"end": 7148,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7087,
											"end": 7149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7149,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 7087,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7177,
											"end": 7181,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7170,
											"end": 7181,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7170,
											"end": 7181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7170,
											"end": 7181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7170,
											"end": 7181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6695,
											"end": 7188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3964,
											"end": 3968,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 3993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3996,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 3996,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3996,
											"end": 4008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3996,
											"end": 4008,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 3996,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3980,
											"end": 4008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3980,
											"end": 4008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 4028,
											"end": 4033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4035,
											"end": 4037,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4018,
											"end": 4046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4046,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 4018,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4063,
											"end": 4067,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2225,
											"end": 2226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2206,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2278,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2278,
											"end": 2290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2278,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2318,
											"end": 2326,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2349,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2308,
											"end": 2364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 2364,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2308,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2124,
											"end": 2372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4212,
											"end": 4219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4249,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4255,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4256,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4257,
											"end": 4264,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4265,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4231,
											"end": 4265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4231,
											"end": 4265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3242,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3242,
											"end": 3254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3254,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3242,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3309,
											"end": 3319,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3382,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3285,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3285,
											"end": 3393,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3285,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3432,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3432,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3404,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3404,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3476,
											"end": 3509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 3510,
											"end": 3520,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3530,
											"end": 3534,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3537,
											"end": 3547,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3476,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3476,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3577,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3559,
											"end": 3587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 3588,
											"end": 3597,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3559,
											"end": 3598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3625,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4482,
											"end": 4505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4531,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4517,
											"end": 4531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4517,
											"end": 4531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4517,
											"end": 4531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH",
											"source": 0,
											"value": "6F2BF62"
										},
										{
											"begin": 4545,
											"end": 4558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4508,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4508,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 4508,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4482,
											"end": 4559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4482,
											"end": 4559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4592,
											"end": 4624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4592,
											"end": 4624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4624,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4657,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 4592,
											"end": 4657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4655,
											"end": 4656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4628,
											"end": 4657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4628,
											"end": 4657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4628,
											"end": 4657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4657,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4628,
											"end": 4657,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4592,
											"end": 4657,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 4592,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 4570,
											"end": 4709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 4570,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4730,
											"end": 4750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 4753,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4753,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4765,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 4753,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4730,
											"end": 4765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4730,
											"end": 4765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4796,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 4820,
											"end": 4830,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 4857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4872,
											"end": 4893,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 4796,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4796,
											"end": 4904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4796,
											"end": 4904,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 4796,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4948,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4915,
											"end": 4948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4948,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 4949,
											"end": 4959,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4973,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4986,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 4915,
											"end": 4987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 4915,
											"end": 4987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4915,
											"end": 4987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5000,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5033,
											"end": 5048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5023,
											"end": 5064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5064,
											"name": "PUSH",
											"source": 0,
											"value": "F979DCD7"
										},
										{
											"begin": 5072,
											"end": 5081,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5083,
											"end": 5099,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5023,
											"end": 5100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5023,
											"end": 5100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 5023,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5000,
											"end": 5100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5000,
											"end": 5100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5131,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5111,
											"end": 5141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5141,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5142,
											"end": 5152,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5111,
											"end": 5167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5111,
											"end": 5167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5111,
											"end": 5167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 5175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 5175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 5175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 5175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 5175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2760,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2760,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2737,
											"end": 2772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2830,
											"end": 2839,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2878,
											"end": 2887,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2875,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2854,
											"end": 2887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2854,
											"end": 2887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2887,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2854,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2902,
											"end": 2914,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2806,
											"end": 2925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2925,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2806,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2960,
											"end": 2970,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2970,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2936,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2936,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3043,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3043,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3044,
											"end": 3054,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3068,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3014,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3014,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3099,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 3107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 737,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 641,
											"end": 737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 694,
											"end": 701,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 713,
											"end": 730,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 713,
											"end": 730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 641,
											"end": 737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10659,
											"end": 11039,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 10659,
											"end": 11039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10773,
											"end": 10774,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10756,
											"end": 10775,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10756,
											"end": 10775,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10756,
											"end": 10761,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10756,
											"end": 10775,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10756,
											"end": 10775,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10756,
											"end": 10775,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10752,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 10752,
											"end": 10841,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10827,
											"end": 10828,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 10798,
											"end": 10830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10798,
											"end": 10830,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10752,
											"end": 10841,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 10752,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10873,
											"end": 10874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10854,
											"end": 10875,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10854,
											"end": 10875,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10854,
											"end": 10861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10854,
											"end": 10875,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10854,
											"end": 10875,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10854,
											"end": 10875,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10850,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 10850,
											"end": 10940,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10926,
											"end": 10927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 10898,
											"end": 10929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10898,
											"end": 10929,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10850,
											"end": 10940,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 10850,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10979,
											"end": 10985,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10960,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10961,
											"end": 10966,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10949,
											"end": 10967,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10968,
											"end": 10975,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10949,
											"end": 10976,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10985,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10985,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10985,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10949,
											"end": 10985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11016,
											"end": 11023,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11009,
											"end": 11014,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11025,
											"end": 11031,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 11000,
											"end": 11032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11000,
											"end": 11032,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10659,
											"end": 11039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10659,
											"end": 11039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10659,
											"end": 11039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10659,
											"end": 11039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11320,
											"end": 11794,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 11320,
											"end": 11794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11420,
											"end": 11444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11447,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 11457,
											"end": 11462,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11464,
											"end": 11471,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11447,
											"end": 11456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 11447,
											"end": 11472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11447,
											"end": 11472,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 11447,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11420,
											"end": 11472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11420,
											"end": 11472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11506,
											"end": 11523,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11486,
											"end": 11502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11486,
											"end": 11523,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11482,
											"end": 11788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 11482,
											"end": 11788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11562,
											"end": 11568,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11543,
											"end": 11559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11543,
											"end": 11568,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11539,
											"end": 11671,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11539,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 11539,
											"end": 11671,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11622,
											"end": 11629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11631,
											"end": 11647,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11649,
											"end": 11655,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 11595,
											"end": 11656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11595,
											"end": 11656,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11539,
											"end": 11671,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 11539,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11712,
											"end": 11763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 11721,
											"end": 11726,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11728,
											"end": 11735,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11756,
											"end": 11762,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11737,
											"end": 11753,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11737,
											"end": 11762,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11712,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 11712,
											"end": 11763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11712,
											"end": 11763,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 11712,
											"end": 11763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11482,
											"end": 11788,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 11482,
											"end": 11788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11410,
											"end": 11794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11320,
											"end": 11794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11320,
											"end": 11794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11320,
											"end": 11794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11320,
											"end": 11794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7855,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 7553,
											"end": 7855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7653,
											"end": 7654,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7655,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7655,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7637,
											"end": 7641,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7637,
											"end": 7655,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7655,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7637,
											"end": 7655,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7633,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 7633,
											"end": 7719,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7705,
											"end": 7706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 7678,
											"end": 7708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7678,
											"end": 7708,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7633,
											"end": 7719,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 7633,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7746,
											"end": 7747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7732,
											"end": 7748,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7732,
											"end": 7748,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7732,
											"end": 7734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7732,
											"end": 7748,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7732,
											"end": 7748,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7732,
											"end": 7748,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7728,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 7728,
											"end": 7814,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7801,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 7771,
											"end": 7803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7771,
											"end": 7803,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7728,
											"end": 7814,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 7728,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7823,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 7831,
											"end": 7835,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7837,
											"end": 7839,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7841,
											"end": 7847,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7823,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 7823,
											"end": 7848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7823,
											"end": 7848,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 7823,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9504,
											"end": 9714,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 9504,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9594,
											"end": 9595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9575,
											"end": 9596,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9575,
											"end": 9596,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9575,
											"end": 9596,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9575,
											"end": 9596,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9575,
											"end": 9596,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9571,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 9571,
											"end": 9662,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 9619,
											"end": 9651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9651,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9571,
											"end": 9662,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 9571,
											"end": 9662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 9687,
											"end": 9688,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9691,
											"end": 9698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9700,
											"end": 9706,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 9671,
											"end": 9707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 9671,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9504,
											"end": 9714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9504,
											"end": 9714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9504,
											"end": 9714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1643,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1811,
											"end": 1823,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1811,
											"end": 1827,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1848,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 1803,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1803,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1926,
											"name": "PUSH",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1910,
											"end": 1921,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1910,
											"end": 1926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1881,
											"end": 1926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1991,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1957,
											"end": 1991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1957,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 1991,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1957,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1937,
											"end": 1991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1937,
											"end": 1991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2065,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2040,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2037,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2025,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 2024,
											"end": 2065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2024,
											"end": 2065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2065,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 2024,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2085,
											"end": 2108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2108,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 2116,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 2116,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10028,
											"end": 10236,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 10028,
											"end": 10236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10118,
											"end": 10119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10099,
											"end": 10120,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10099,
											"end": 10120,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10099,
											"end": 10106,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10099,
											"end": 10120,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10099,
											"end": 10120,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10099,
											"end": 10120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10095,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 10095,
											"end": 10184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10170,
											"end": 10171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 10143,
											"end": 10173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10143,
											"end": 10173,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10095,
											"end": 10184,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 10095,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10193,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 10201,
											"end": 10208,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10218,
											"end": 10219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10222,
											"end": 10228,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10193,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 10193,
											"end": 10229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10193,
											"end": 10229,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 10193,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10028,
											"end": 10236,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10028,
											"end": 10236,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10028,
											"end": 10236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 9172,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 8155,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8261,
											"end": 8262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8245,
											"end": 8263,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8245,
											"end": 8263,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8249,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8263,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8245,
											"end": 8263,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8263,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8241,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 8241,
											"end": 8684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8295,
											"end": 8301,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8291,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8279,
											"end": 8291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 8279,
											"end": 8301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8279,
											"end": 8301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8241,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 8241,
											"end": 8684,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8241,
											"end": 8684,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 8241,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8332,
											"end": 8351,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8354,
											"end": 8363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8364,
											"end": 8368,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8332,
											"end": 8369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8332,
											"end": 8369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8387,
											"end": 8398,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8387,
											"end": 8407,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8383,
											"end": 8500,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8383,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 8383,
											"end": 8500,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8465,
											"end": 8476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8478,
											"end": 8484,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 8434,
											"end": 8485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8485,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8383,
											"end": 8500,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 8383,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8653,
											"end": 8659,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8639,
											"end": 8650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8639,
											"end": 8659,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8630,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8631,
											"end": 8635,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8621,
											"end": 8636,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8659,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8659,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8621,
											"end": 8659,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8318,
											"end": 8684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8241,
											"end": 8684,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 8241,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8712,
											"end": 8713,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8698,
											"end": 8714,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8698,
											"end": 8714,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8698,
											"end": 8700,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8698,
											"end": 8714,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8698,
											"end": 8714,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8698,
											"end": 8714,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8694,
											"end": 9124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 8694,
											"end": 9124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8875,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8863,
											"end": 8875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8863,
											"end": 8885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8885,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8885,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8885,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8885,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8694,
											"end": 9124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 8694,
											"end": 9124,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8694,
											"end": 9124,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 8694,
											"end": 9124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9093,
											"end": 9099,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9086,
											"end": 9088,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9089,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9076,
											"end": 9099,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9099,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9099,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9099,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9099,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9099,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8694,
											"end": 9124,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 8694,
											"end": 9124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9154,
											"end": 9156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9148,
											"end": 9152,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9158,
											"end": 9164,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 9139,
											"end": 9165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9139,
											"end": 9165,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 9172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 9172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 9172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 9172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 5610,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5598,
											"end": 5635,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 5791,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 5998,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 6003,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 6006,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 6196,
											"end": 6203,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 6151,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6097,
											"end": 6214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6313,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6300,
											"end": 6322,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 6279,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6224,
											"end": 6342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5875,
											"end": 6349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6423,
											"end": 6429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6437,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6480,
											"end": 6482,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6468,
											"end": 6477,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 6466,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6455,
											"end": 6478,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6451,
											"end": 6483,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 6486,
											"end": 6565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6606,
											"end": 6607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 6676,
											"end": 6683,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6673,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6656,
											"end": 6665,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6652,
											"end": 6674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 6631,
											"end": 6684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6735,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 6804,
											"end": 6811,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6795,
											"end": 6801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6780,
											"end": 6802,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 6759,
											"end": 6812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6749,
											"end": 6812,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6749,
											"end": 6812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6704,
											"end": 6822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6835,
											"end": 7454,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6835,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6912,
											"end": 6918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6920,
											"end": 6926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6928,
											"end": 6934,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6977,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6965,
											"end": 6974,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6956,
											"end": 6963,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6952,
											"end": 6975,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6948,
											"end": 6980,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 7064,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 6945,
											"end": 7064,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 6983,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 6983,
											"end": 7062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 7062,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 6983,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 7064,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 6945,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7103,
											"end": 7104,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7128,
											"end": 7181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 7173,
											"end": 7180,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7164,
											"end": 7170,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7153,
											"end": 7162,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7149,
											"end": 7171,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 7128,
											"end": 7181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7181,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 7128,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7181,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7074,
											"end": 7191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7230,
											"end": 7232,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7256,
											"end": 7309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 7301,
											"end": 7308,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7292,
											"end": 7298,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7281,
											"end": 7290,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7277,
											"end": 7299,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7256,
											"end": 7309,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 7256,
											"end": 7309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7256,
											"end": 7309,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 7256,
											"end": 7309,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7246,
											"end": 7309,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7246,
											"end": 7309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7201,
											"end": 7319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7358,
											"end": 7360,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7384,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 7429,
											"end": 7436,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7420,
											"end": 7426,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7409,
											"end": 7418,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7405,
											"end": 7427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7384,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 7384,
											"end": 7437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7384,
											"end": 7437,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 7384,
											"end": 7437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7374,
											"end": 7437,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7374,
											"end": 7437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7329,
											"end": 7447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6835,
											"end": 7454,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6835,
											"end": 7454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6835,
											"end": 7454,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6835,
											"end": 7454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6835,
											"end": 7454,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6835,
											"end": 7454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7640,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 7460,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7585,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7586,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7605,
											"end": 7609,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 7602,
											"end": 7603,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7595,
											"end": 7610,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7629,
											"end": 7633,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7626,
											"end": 7627,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7619,
											"end": 7634,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7966,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 7646,
											"end": 7966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7727,
											"end": 7728,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7721,
											"end": 7725,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7729,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7707,
											"end": 7729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7774,
											"end": 7775,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7768,
											"end": 7772,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7764,
											"end": 7776,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7795,
											"end": 7813,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7785,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 7785,
											"end": 7866,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7851,
											"end": 7855,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7829,
											"end": 7856,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7829,
											"end": 7856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7785,
											"end": 7866,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 7785,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7913,
											"end": 7915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7905,
											"end": 7911,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7902,
											"end": 7916,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7882,
											"end": 7900,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7879,
											"end": 7917,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 7876,
											"end": 7960,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7932,
											"end": 7950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 7932,
											"end": 7950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 7932,
											"end": 7950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7932,
											"end": 7950,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 7932,
											"end": 7950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 7960,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 7876,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7697,
											"end": 7966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7966,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7972,
											"end": 8152,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 7972,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8020,
											"end": 8097,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8017,
											"end": 8018,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8010,
											"end": 8098,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8117,
											"end": 8121,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8114,
											"end": 8115,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8107,
											"end": 8122,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8141,
											"end": 8145,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8138,
											"end": 8139,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8146,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8349,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 8158,
											"end": 8349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8198,
											"end": 8201,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8217,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 8235,
											"end": 8236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8217,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 8217,
											"end": 8237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8217,
											"end": 8237,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 8217,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8237,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8251,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 8269,
											"end": 8270,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8251,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 8251,
											"end": 8271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8251,
											"end": 8271,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 8251,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8271,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8291,
											"end": 8292,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8287,
											"end": 8296,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8280,
											"end": 8296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8280,
											"end": 8296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8315,
											"end": 8318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8312,
											"end": 8313,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8309,
											"end": 8319,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8342,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 8306,
											"end": 8342,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8322,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 8322,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 8322,
											"end": 8340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8322,
											"end": 8340,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 8322,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8342,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 8306,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8349,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8349,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8797,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 8355,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8504,
											"end": 8508,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8542,
											"end": 8544,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8531,
											"end": 8540,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8527,
											"end": 8545,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8519,
											"end": 8545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8519,
											"end": 8545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8555,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 8623,
											"end": 8624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8612,
											"end": 8621,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8608,
											"end": 8625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8599,
											"end": 8605,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8555,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 8555,
											"end": 8626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8555,
											"end": 8626,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 8555,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 8704,
											"end": 8706,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8693,
											"end": 8702,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8689,
											"end": 8707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8680,
											"end": 8686,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 8636,
											"end": 8708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8636,
											"end": 8708,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 8636,
											"end": 8708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8718,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 8786,
											"end": 8788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8775,
											"end": 8784,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8771,
											"end": 8789,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8762,
											"end": 8768,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8718,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 8718,
											"end": 8790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8718,
											"end": 8790,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 8718,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8797,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8797,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8803,
											"end": 8919,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 8803,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8873,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 8888,
											"end": 8893,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8873,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 8873,
											"end": 8894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8873,
											"end": 8894,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 8873,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 8871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8863,
											"end": 8895,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8853,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 8853,
											"end": 8913,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 8910,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8907,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8911,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8853,
											"end": 8913,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 8853,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8803,
											"end": 8919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8803,
											"end": 8919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8925,
											"end": 9062,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 8925,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8979,
											"end": 8984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9010,
											"end": 9016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9004,
											"end": 9017,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8995,
											"end": 9017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8995,
											"end": 9017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9026,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 9050,
											"end": 9055,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9026,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 9026,
											"end": 9056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9026,
											"end": 9056,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 9026,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8925,
											"end": 9062,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8925,
											"end": 9062,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8925,
											"end": 9062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8925,
											"end": 9062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8925,
											"end": 9062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9413,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 9068,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9135,
											"end": 9141,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9186,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9172,
											"end": 9181,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9163,
											"end": 9170,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9159,
											"end": 9182,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9155,
											"end": 9187,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9152,
											"end": 9271,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9152,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 9152,
											"end": 9271,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9190,
											"end": 9269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 9190,
											"end": 9269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 9190,
											"end": 9269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9190,
											"end": 9269,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 9190,
											"end": 9269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9152,
											"end": 9271,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 9152,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9310,
											"end": 9311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9335,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 9388,
											"end": 9395,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9379,
											"end": 9385,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9364,
											"end": 9386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9335,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 9335,
											"end": 9396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9335,
											"end": 9396,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 9335,
											"end": 9396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9325,
											"end": 9396,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9325,
											"end": 9396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9281,
											"end": 9406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9413,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9413,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9419,
											"end": 9613,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 9419,
											"end": 9613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9459,
											"end": 9463,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9479,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 9497,
											"end": 9498,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9479,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 9479,
											"end": 9499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9479,
											"end": 9499,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 9479,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9474,
											"end": 9499,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9474,
											"end": 9499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9513,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 9531,
											"end": 9532,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9513,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 9513,
											"end": 9533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9513,
											"end": 9533,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 9513,
											"end": 9533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9557,
											"end": 9558,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9554,
											"end": 9555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9559,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9542,
											"end": 9559,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9542,
											"end": 9559,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9581,
											"end": 9582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9575,
											"end": 9579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9572,
											"end": 9583,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9569,
											"end": 9606,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9569,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 9569,
											"end": 9606,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9586,
											"end": 9604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 9586,
											"end": 9604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9569,
											"end": 9606,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 9569,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9419,
											"end": 9613,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9419,
											"end": 9613,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9419,
											"end": 9613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9419,
											"end": 9613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9419,
											"end": 9613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9619,
											"end": 10029,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 9619,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9659,
											"end": 9666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9682,
											"end": 9702,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 9700,
											"end": 9701,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9682,
											"end": 9702,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 9682,
											"end": 9702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9682,
											"end": 9702,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 9682,
											"end": 9702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 9702,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 9702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 9716,
											"end": 9736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9736,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 9716,
											"end": 9736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9711,
											"end": 9736,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9711,
											"end": 9736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9771,
											"end": 9772,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9768,
											"end": 9769,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9764,
											"end": 9773,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9793,
											"end": 9823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 9811,
											"end": 9822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9793,
											"end": 9823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 9793,
											"end": 9823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9793,
											"end": 9823,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 9793,
											"end": 9823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9963,
											"end": 9970,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9959,
											"end": 9974,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9956,
											"end": 9957,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9953,
											"end": 9975,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9933,
											"end": 9934,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9926,
											"end": 9935,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9906,
											"end": 9989,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9883,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 9883,
											"end": 10022,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10002,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 10002,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 10002,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10002,
											"end": 10020,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 10002,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9883,
											"end": 10022,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 9883,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9667,
											"end": 10029,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9619,
											"end": 10029,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9619,
											"end": 10029,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9619,
											"end": 10029,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9619,
											"end": 10029,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9619,
											"end": 10029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10035,
											"end": 10215,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 10035,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10083,
											"end": 10160,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10080,
											"end": 10081,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10073,
											"end": 10161,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10180,
											"end": 10184,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10170,
											"end": 10185,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10204,
											"end": 10208,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10201,
											"end": 10202,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10194,
											"end": 10209,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10221,
											"end": 10406,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 10221,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10261,
											"end": 10262,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10278,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 10296,
											"end": 10297,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10278,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 10278,
											"end": 10298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10278,
											"end": 10298,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 10278,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10273,
											"end": 10298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10273,
											"end": 10298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 10330,
											"end": 10331,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 10312,
											"end": 10332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10332,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 10312,
											"end": 10332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10307,
											"end": 10332,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10307,
											"end": 10332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10351,
											"end": 10352,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10341,
											"end": 10376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 10341,
											"end": 10376,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10356,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 10356,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 10356,
											"end": 10374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10356,
											"end": 10374,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 10356,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10341,
											"end": 10376,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 10341,
											"end": 10376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10398,
											"end": 10399,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10395,
											"end": 10396,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10400,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10386,
											"end": 10400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10386,
											"end": 10400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10221,
											"end": 10406,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10221,
											"end": 10406,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10221,
											"end": 10406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10221,
											"end": 10406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10221,
											"end": 10406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10412,
											"end": 10587,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 10412,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10552,
											"end": 10579,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E7420746F6B656E20616D6F756E7400000000000000"
										},
										{
											"begin": 10548,
											"end": 10549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10540,
											"end": 10546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10536,
											"end": 10550,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10529,
											"end": 10580,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10412,
											"end": 10587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10412,
											"end": 10587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10593,
											"end": 10959,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 10593,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10756,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 10820,
											"end": 10822,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 10815,
											"end": 10818,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10756,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 10756,
											"end": 10823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10756,
											"end": 10823,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 10756,
											"end": 10823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10749,
											"end": 10823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10749,
											"end": 10823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10832,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 10921,
											"end": 10924,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10832,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 10832,
											"end": 10925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10832,
											"end": 10925,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 10832,
											"end": 10925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10950,
											"end": 10952,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10945,
											"end": 10948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10941,
											"end": 10953,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10934,
											"end": 10953,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10934,
											"end": 10953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10593,
											"end": 10959,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10593,
											"end": 10959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10593,
											"end": 10959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10593,
											"end": 10959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10965,
											"end": 11384,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 10965,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11131,
											"end": 11135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11169,
											"end": 11171,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11158,
											"end": 11167,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11154,
											"end": 11172,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11146,
											"end": 11172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11146,
											"end": 11172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11218,
											"end": 11227,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11212,
											"end": 11216,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11208,
											"end": 11228,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11204,
											"end": 11205,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11193,
											"end": 11202,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11182,
											"end": 11229,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11246,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 11372,
											"end": 11376,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11246,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 11246,
											"end": 11377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11246,
											"end": 11377,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 11246,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11238,
											"end": 11377,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11238,
											"end": 11377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10965,
											"end": 11384,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10965,
											"end": 11384,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10965,
											"end": 11384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10965,
											"end": 11384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11390,
											"end": 11533,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 11390,
											"end": 11533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11447,
											"end": 11452,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11478,
											"end": 11484,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11472,
											"end": 11485,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11463,
											"end": 11485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11463,
											"end": 11485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11494,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 11521,
											"end": 11526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11494,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 11494,
											"end": 11527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11494,
											"end": 11527,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 11494,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11390,
											"end": 11533,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11390,
											"end": 11533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11390,
											"end": 11533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11390,
											"end": 11533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11390,
											"end": 11533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11539,
											"end": 11890,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 11539,
											"end": 11890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11609,
											"end": 11615,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11658,
											"end": 11660,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11646,
											"end": 11655,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11637,
											"end": 11644,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11633,
											"end": 11656,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11661,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 11626,
											"end": 11745,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11626,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 11626,
											"end": 11745,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11664,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 11664,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 11664,
											"end": 11743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11664,
											"end": 11743,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 11664,
											"end": 11743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11626,
											"end": 11745,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 11626,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11784,
											"end": 11785,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11809,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 11865,
											"end": 11872,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11856,
											"end": 11862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11845,
											"end": 11854,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11841,
											"end": 11863,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11809,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 11809,
											"end": 11873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11809,
											"end": 11873,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 11809,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11799,
											"end": 11873,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11799,
											"end": 11873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11755,
											"end": 11883,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11539,
											"end": 11890,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11539,
											"end": 11890,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11539,
											"end": 11890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11539,
											"end": 11890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11539,
											"end": 11890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11896,
											"end": 12059,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 11896,
											"end": 12059,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420696E70757400000000000000000000000000000000000000"
										},
										{
											"begin": 12032,
											"end": 12033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12024,
											"end": 12030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12034,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12013,
											"end": 12052,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11896,
											"end": 12059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11896,
											"end": 12059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12431,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 12065,
											"end": 12431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12207,
											"end": 12210,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12228,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 12292,
											"end": 12294,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 12287,
											"end": 12290,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12228,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 12228,
											"end": 12295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12228,
											"end": 12295,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 12228,
											"end": 12295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12221,
											"end": 12295,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12221,
											"end": 12295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12304,
											"end": 12397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 12393,
											"end": 12396,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12304,
											"end": 12397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 12304,
											"end": 12397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12304,
											"end": 12397,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 12304,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12422,
											"end": 12424,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12417,
											"end": 12420,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12413,
											"end": 12425,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12406,
											"end": 12425,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12406,
											"end": 12425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12431,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12437,
											"end": 12856,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 12437,
											"end": 12856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12641,
											"end": 12643,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12630,
											"end": 12639,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12626,
											"end": 12644,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12618,
											"end": 12644,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12618,
											"end": 12644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12690,
											"end": 12699,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12684,
											"end": 12688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12680,
											"end": 12700,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12676,
											"end": 12677,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12665,
											"end": 12674,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12661,
											"end": 12678,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12654,
											"end": 12701,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12718,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 12844,
											"end": 12848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12718,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 12718,
											"end": 12849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12718,
											"end": 12849,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 12718,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12710,
											"end": 12849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12710,
											"end": 12849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12437,
											"end": 12856,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12437,
											"end": 12856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12437,
											"end": 12856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12437,
											"end": 12856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12862,
											"end": 13034,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 12862,
											"end": 13034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13002,
											"end": 13026,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E74206C697175696469747900000000000000000000"
										},
										{
											"begin": 12998,
											"end": 12999,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12990,
											"end": 12996,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12986,
											"end": 13000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12979,
											"end": 13027,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12862,
											"end": 13034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12862,
											"end": 13034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13040,
											"end": 13406,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 13040,
											"end": 13406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13182,
											"end": 13185,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13203,
											"end": 13270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 13267,
											"end": 13269,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 13262,
											"end": 13265,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13203,
											"end": 13270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 13203,
											"end": 13270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13203,
											"end": 13270,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 13203,
											"end": 13270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13196,
											"end": 13270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13196,
											"end": 13270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13279,
											"end": 13372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 13368,
											"end": 13371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13279,
											"end": 13372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 13279,
											"end": 13372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13279,
											"end": 13372,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 13279,
											"end": 13372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13399,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13392,
											"end": 13395,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13388,
											"end": 13400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13381,
											"end": 13400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13381,
											"end": 13400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13040,
											"end": 13406,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13040,
											"end": 13406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13040,
											"end": 13406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13040,
											"end": 13406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13412,
											"end": 13831,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 13412,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13578,
											"end": 13582,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13616,
											"end": 13618,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13605,
											"end": 13614,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13601,
											"end": 13619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13593,
											"end": 13619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13593,
											"end": 13619,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13665,
											"end": 13674,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13659,
											"end": 13663,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13655,
											"end": 13675,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13651,
											"end": 13652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13640,
											"end": 13649,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13636,
											"end": 13653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13629,
											"end": 13676,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13693,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 13819,
											"end": 13823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13693,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 13693,
											"end": 13824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13693,
											"end": 13824,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 13693,
											"end": 13824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13685,
											"end": 13824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13685,
											"end": 13824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13412,
											"end": 13831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13412,
											"end": 13831,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13412,
											"end": 13831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13412,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13837,
											"end": 14169,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 13837,
											"end": 14169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13958,
											"end": 13962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13996,
											"end": 13998,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13985,
											"end": 13994,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13981,
											"end": 13999,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13973,
											"end": 13999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13973,
											"end": 13999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14009,
											"end": 14080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 14077,
											"end": 14078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14066,
											"end": 14075,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14062,
											"end": 14079,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14053,
											"end": 14059,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14009,
											"end": 14080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 14009,
											"end": 14080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14009,
											"end": 14080,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 14009,
											"end": 14080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14090,
											"end": 14162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 14158,
											"end": 14160,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14147,
											"end": 14156,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14134,
											"end": 14140,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14090,
											"end": 14162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 14090,
											"end": 14162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14090,
											"end": 14162,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 14090,
											"end": 14162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13837,
											"end": 14169,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13837,
											"end": 14169,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13837,
											"end": 14169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13837,
											"end": 14169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13837,
											"end": 14169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13837,
											"end": 14169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14617,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 14175,
											"end": 14617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14324,
											"end": 14328,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14362,
											"end": 14364,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 14351,
											"end": 14360,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14347,
											"end": 14365,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14339,
											"end": 14365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14339,
											"end": 14365,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14375,
											"end": 14446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 14443,
											"end": 14444,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14432,
											"end": 14441,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14428,
											"end": 14445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14419,
											"end": 14425,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14375,
											"end": 14446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 14375,
											"end": 14446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14375,
											"end": 14446,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 14375,
											"end": 14446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14456,
											"end": 14528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 14524,
											"end": 14526,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14513,
											"end": 14522,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14509,
											"end": 14527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14500,
											"end": 14506,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14456,
											"end": 14528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 14456,
											"end": 14528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14456,
											"end": 14528,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 14456,
											"end": 14528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14538,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 14606,
											"end": 14608,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14595,
											"end": 14604,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14591,
											"end": 14609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14582,
											"end": 14588,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14538,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 14538,
											"end": 14610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14538,
											"end": 14610,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 14538,
											"end": 14610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14617,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14617,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14623,
											"end": 14799,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 14623,
											"end": 14799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14791,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E74206F757470757420616D6F756E74000000000000"
										},
										{
											"begin": 14759,
											"end": 14760,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14751,
											"end": 14757,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14747,
											"end": 14761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14740,
											"end": 14792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14623,
											"end": 14799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14623,
											"end": 14799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14805,
											"end": 15171,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 14805,
											"end": 15171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14947,
											"end": 14950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 15035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 15032,
											"end": 15034,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 15027,
											"end": 15030,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14968,
											"end": 15035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 14968,
											"end": 15035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14968,
											"end": 15035,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 14968,
											"end": 15035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14961,
											"end": 15035,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14961,
											"end": 15035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15044,
											"end": 15137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 15133,
											"end": 15136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15044,
											"end": 15137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 15044,
											"end": 15137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15044,
											"end": 15137,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 15044,
											"end": 15137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15162,
											"end": 15164,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15157,
											"end": 15160,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15153,
											"end": 15165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15146,
											"end": 15165,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15146,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14805,
											"end": 15171,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14805,
											"end": 15171,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14805,
											"end": 15171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14805,
											"end": 15171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15177,
											"end": 15596,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 15177,
											"end": 15596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15343,
											"end": 15347,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15381,
											"end": 15383,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15370,
											"end": 15379,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15366,
											"end": 15384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15358,
											"end": 15384,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15358,
											"end": 15384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15430,
											"end": 15439,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15424,
											"end": 15428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15420,
											"end": 15440,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15416,
											"end": 15417,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15405,
											"end": 15414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15401,
											"end": 15418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15394,
											"end": 15441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15458,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 15584,
											"end": 15588,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15458,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 15458,
											"end": 15589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15458,
											"end": 15589,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 15458,
											"end": 15589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15450,
											"end": 15589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15450,
											"end": 15589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15177,
											"end": 15596,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15177,
											"end": 15596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15177,
											"end": 15596,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15177,
											"end": 15596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15602,
											"end": 15745,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 15602,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15659,
											"end": 15664,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15690,
											"end": 15696,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15684,
											"end": 15697,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15675,
											"end": 15697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15675,
											"end": 15697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15706,
											"end": 15739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 15733,
											"end": 15738,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15706,
											"end": 15739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 15706,
											"end": 15739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15706,
											"end": 15739,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 15706,
											"end": 15739,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15602,
											"end": 15745,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15602,
											"end": 15745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15602,
											"end": 15745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15602,
											"end": 15745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15602,
											"end": 15745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15751,
											"end": 16102,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 15751,
											"end": 16102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15821,
											"end": 15827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15870,
											"end": 15872,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15858,
											"end": 15867,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15849,
											"end": 15856,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15868,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15841,
											"end": 15873,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 15838,
											"end": 15957,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15838,
											"end": 15957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 15838,
											"end": 15957,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15876,
											"end": 15955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 15876,
											"end": 15955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 15876,
											"end": 15955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15876,
											"end": 15955,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 15876,
											"end": 15955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15838,
											"end": 15957,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 15838,
											"end": 15957,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15996,
											"end": 15997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16021,
											"end": 16085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 16077,
											"end": 16084,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16068,
											"end": 16074,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16057,
											"end": 16066,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16053,
											"end": 16075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16021,
											"end": 16085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 16021,
											"end": 16085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16021,
											"end": 16085,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 16021,
											"end": 16085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16011,
											"end": 16085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16011,
											"end": 16085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15967,
											"end": 16095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15751,
											"end": 16102,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15751,
											"end": 16102,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15751,
											"end": 16102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15751,
											"end": 16102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15751,
											"end": 16102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16108,
											"end": 16282,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 16108,
											"end": 16282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16248,
											"end": 16274,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C69642065786368616E676520616464726573730000000000000000"
										},
										{
											"begin": 16244,
											"end": 16245,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16236,
											"end": 16242,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16232,
											"end": 16246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16225,
											"end": 16275,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16108,
											"end": 16282,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16108,
											"end": 16282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16288,
											"end": 16654,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 16288,
											"end": 16654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16430,
											"end": 16433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16451,
											"end": 16518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 16515,
											"end": 16517,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 16510,
											"end": 16513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16451,
											"end": 16518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 16451,
											"end": 16518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16451,
											"end": 16518,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 16451,
											"end": 16518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16518,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16444,
											"end": 16518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16527,
											"end": 16620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 16616,
											"end": 16619,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16527,
											"end": 16620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 16527,
											"end": 16620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16527,
											"end": 16620,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 16527,
											"end": 16620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16645,
											"end": 16647,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16640,
											"end": 16643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16636,
											"end": 16648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16629,
											"end": 16648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16629,
											"end": 16648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16288,
											"end": 16654,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16288,
											"end": 16654,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16288,
											"end": 16654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16288,
											"end": 16654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16660,
											"end": 17079,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 16660,
											"end": 17079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16826,
											"end": 16830,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16864,
											"end": 16866,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16853,
											"end": 16862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16849,
											"end": 16867,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16841,
											"end": 16867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16841,
											"end": 16867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16913,
											"end": 16922,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16903,
											"end": 16923,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16899,
											"end": 16900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16888,
											"end": 16897,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16884,
											"end": 16901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16877,
											"end": 16924,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16941,
											"end": 17072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 17067,
											"end": 17071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16941,
											"end": 17072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 16941,
											"end": 17072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16941,
											"end": 17072,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 16941,
											"end": 17072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16933,
											"end": 17072,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16933,
											"end": 17072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16660,
											"end": 17079,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16660,
											"end": 17079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16660,
											"end": 17079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16660,
											"end": 17079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17085,
											"end": 17250,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 17085,
											"end": 17250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17225,
											"end": 17242,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420726573657276650000000000000000000000000000000000"
										},
										{
											"begin": 17221,
											"end": 17222,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17213,
											"end": 17219,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17209,
											"end": 17223,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17202,
											"end": 17243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17085,
											"end": 17250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17085,
											"end": 17250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17256,
											"end": 17622,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 17256,
											"end": 17622,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17398,
											"end": 17401,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17419,
											"end": 17486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 17483,
											"end": 17485,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 17478,
											"end": 17481,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17419,
											"end": 17486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 17419,
											"end": 17486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17419,
											"end": 17486,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 17419,
											"end": 17486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17412,
											"end": 17486,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17412,
											"end": 17486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17495,
											"end": 17588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 17584,
											"end": 17587,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17495,
											"end": 17588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 17495,
											"end": 17588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17495,
											"end": 17588,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 17495,
											"end": 17588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17613,
											"end": 17615,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17608,
											"end": 17611,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17604,
											"end": 17616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17597,
											"end": 17616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17597,
											"end": 17616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17256,
											"end": 17622,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17256,
											"end": 17622,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17256,
											"end": 17622,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17256,
											"end": 17622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17628,
											"end": 18047,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 17628,
											"end": 18047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17794,
											"end": 17798,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17832,
											"end": 17834,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17821,
											"end": 17830,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17817,
											"end": 17835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17809,
											"end": 17835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17809,
											"end": 17835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17881,
											"end": 17890,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17875,
											"end": 17879,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17871,
											"end": 17891,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17867,
											"end": 17868,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17856,
											"end": 17865,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17852,
											"end": 17869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17845,
											"end": 17892,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17909,
											"end": 18040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 18035,
											"end": 18039,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17909,
											"end": 18040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 17909,
											"end": 18040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17909,
											"end": 18040,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 17909,
											"end": 18040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17901,
											"end": 18040,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17901,
											"end": 18040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17628,
											"end": 18047,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17628,
											"end": 18047,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17628,
											"end": 18047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17628,
											"end": 18047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/Exchange.sol",
								"contracts/IExchange.sol",
								"contracts/IFactory.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256)": "51c6590a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"ethToTokenSwap(uint256)": "f979dcd7",
							"factoryAddress()": "966dae0e",
							"getEthAmount(uint256)": "8fc7a25d",
							"getReserve()": "59bf5d39",
							"getTokenAmount(uint256)": "c2507ac1",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"removeLiquidity(uint256)": "9c8f9f23",
							"symbol()": "95d89b41",
							"tokenAddress()": "9d76ea58",
							"tokenToEthSwap(uint256,uint256)": "e0486c8a",
							"tokenToTokenSwap(uint256,uint256,address)": "f7a7e324",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"ERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minTokens\",\"type\":\"uint256\"}],\"name\":\"ethToTokenSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenSold\",\"type\":\"uint256\"}],\"name\":\"getEthAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ethSold\",\"type\":\"uint256\"}],\"name\":\"getTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountWithrawn\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minEth\",\"type\":\"uint256\"}],\"name\":\"tokenToEthSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minTokensBought\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"tokenToTokenSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Exchange.sol\":\"Exchange\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Exchange.sol\":{\"keccak256\":\"0xef40bf2e0c6ea4e8e58e79ba7128478f9c9420322bd2f12604de20172fed9814\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5bfc00e86a0276795683d703e33e752f0c70f079099d6725aeb29eff34865180\",\"dweb:/ipfs/QmZ7ZtqfcTugm5DYP6aimrxWmbuVrrYRtbcHWNeWVx8VyQ\"]},\"contracts/IExchange.sol\":{\"keccak256\":\"0x4d9a7e69eaf0e44825eeda156be653c4ece7023707e3ee311c0e9ad56436706b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://adf8cf201a83390d4523c492fdb8acdd0b4f37fe8b57a48ad3c06aa6ae740598\",\"dweb:/ipfs/QmTJCGTB8ehgwFbLgn2BLrUBThxEH61NgETeaNhjLN5zFm\"]},\"contracts/IFactory.sol\":{\"keccak256\":\"0xcb5ba6f8a953474e16709de5f11ea0e38b0db36e23e66864412c141c2a88f161\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a72c9d1eab1bd752a8ff9de6c05e2316542b5776c011b17db421e8e98c263c24\",\"dweb:/ipfs/QmRY1wCVyiKWD4suyGcEVxsrxnmFaCzcpVaR6iVoWqHYEG\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x584ccea4d8f94c745c78df4638bb107986692e544aeae522d973a45d03d7382b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce75e401c40076bcc5874b4faa7a403e16082d7ae953ea4426249ce17d0952e1\",\"dweb:/ipfs/QmY5TJK3aHF4ZQieKMY4XDsXHCyBzHphm4jTuurbvpcYLu\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x0667be17ad4c9ee09e281b958697d0cc802711b5fa721a99ded4f835094830b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80c6c75128583b36035e5b425d3ad2cb703ff0eb2547798f50d42d9b09d30b86\",\"dweb:/ipfs/QmdatCbf8UZ8sNSFTtVRP5rxdLfYEhRhukyL4Ev9nAy7md\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2837661e72b15493671ff5e5099b565b626c53f4d90f347211dd78924aca24ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34ced2145df7d08fbb3fba9471faf5a1609fc3def76d004c658f480e5cebb013\",\"dweb:/ipfs/QmSJ42tRU39HdpJSLXCinUtzzxnxBFncnCbfK6juqqep7U\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af\",\"dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 702,
								"contract": "contracts/Exchange.sol:Exchange",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 708,
								"contract": "contracts/Exchange.sol:Exchange",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 710,
								"contract": "contracts/Exchange.sol:Exchange",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 712,
								"contract": "contracts/Exchange.sol:Exchange",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 714,
								"contract": "contracts/Exchange.sol:Exchange",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 11,
								"contract": "contracts/Exchange.sol:Exchange",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 13,
								"contract": "contracts/Exchange.sol:Exchange",
								"label": "factoryAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IExchange.sol": {
				"IExchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minTokens",
									"type": "uint256"
								}
							],
							"name": "ethToTokenSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ethToTokenSwap(uint256)": "f979dcd7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minTokens\",\"type\":\"uint256\"}],\"name\":\"ethToTokenSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IExchange.sol\":\"IExchange\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IExchange.sol\":{\"keccak256\":\"0x4d9a7e69eaf0e44825eeda156be653c4ece7023707e3ee311c0e9ad56436706b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://adf8cf201a83390d4523c492fdb8acdd0b4f37fe8b57a48ad3c06aa6ae740598\",\"dweb:/ipfs/QmTJCGTB8ehgwFbLgn2BLrUBThxEH61NgETeaNhjLN5zFm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IFactory.sol": {
				"IFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"name": "getExchange",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getExchange(address)": "06f2bf62"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IFactory.sol\":\"IFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IFactory.sol\":{\"keccak256\":\"0xcb5ba6f8a953474e16709de5f11ea0e38b0db36e23e66864412c141c2a88f161\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a72c9d1eab1bd752a8ff9de6c05e2316542b5776c011b17db421e8e98c263c24\",\"dweb:/ipfs/QmRY1wCVyiKWD4suyGcEVxsrxnmFaCzcpVaR6iVoWqHYEG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155InsufficientApprovalForAll",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the ERC6093 custom errors for ERC1155 tokens as defined in https://eips.ethereum.org/EIPS/eip-6093",
						"errors": {
							"ERC1155InsufficientApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155InsufficientApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the ERC6093 custom errors for ERC1155 tokens as defined in https://eips.ethereum.org/EIPS/eip-6093\",\"errors\":{\"ERC1155InsufficientApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x584ccea4d8f94c745c78df4638bb107986692e544aeae522d973a45d03d7382b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce75e401c40076bcc5874b4faa7a403e16082d7ae953ea4426249ce17d0952e1\",\"dweb:/ipfs/QmY5TJK3aHF4ZQieKMY4XDsXHCyBzHphm4jTuurbvpcYLu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the ERC6093 custom errors for ERC20 tokens as defined in https://eips.ethereum.org/EIPS/eip-6093",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the ERC6093 custom errors for ERC20 tokens as defined in https://eips.ethereum.org/EIPS/eip-6093\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x584ccea4d8f94c745c78df4638bb107986692e544aeae522d973a45d03d7382b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce75e401c40076bcc5874b4faa7a403e16082d7ae953ea4426249ce17d0952e1\",\"dweb:/ipfs/QmY5TJK3aHF4ZQieKMY4XDsXHCyBzHphm4jTuurbvpcYLu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the ERC6093 custom errors for ERC721 tokens as defined in https://eips.ethereum.org/EIPS/eip-6093",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the ERC6093 custom errors for ERC721 tokens as defined in https://eips.ethereum.org/EIPS/eip-6093\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x584ccea4d8f94c745c78df4638bb107986692e544aeae522d973a45d03d7382b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce75e401c40076bcc5874b4faa7a403e16082d7ae953ea4426249ce17d0952e1\",\"dweb:/ipfs/QmY5TJK3aHF4ZQieKMY4XDsXHCyBzHphm4jTuurbvpcYLu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "ERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"errors": {
							"ERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"ERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"errors\":{\"ERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `requestedDecrease`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x584ccea4d8f94c745c78df4638bb107986692e544aeae522d973a45d03d7382b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce75e401c40076bcc5874b4faa7a403e16082d7ae953ea4426249ce17d0952e1\",\"dweb:/ipfs/QmY5TJK3aHF4ZQieKMY4XDsXHCyBzHphm4jTuurbvpcYLu\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x0667be17ad4c9ee09e281b958697d0cc802711b5fa721a99ded4f835094830b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80c6c75128583b36035e5b425d3ad2cb703ff0eb2547798f50d42d9b09d30b86\",\"dweb:/ipfs/QmdatCbf8UZ8sNSFTtVRP5rxdLfYEhRhukyL4Ev9nAy7md\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2837661e72b15493671ff5e5099b565b626c53f4d90f347211dd78924aca24ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34ced2145df7d08fbb3fba9471faf5a1609fc3def76d004c658f480e5cebb013\",\"dweb:/ipfs/QmSJ42tRU39HdpJSLXCinUtzzxnxBFncnCbfK6juqqep7U\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af\",\"dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 702,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 708,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 710,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 712,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 714,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2837661e72b15493671ff5e5099b565b626c53f4d90f347211dd78924aca24ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34ced2145df7d08fbb3fba9471faf5a1609fc3def76d004c658f480e5cebb013\",\"dweb:/ipfs/QmSJ42tRU39HdpJSLXCinUtzzxnxBFncnCbfK6juqqep7U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af\",\"dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Exchange.sol": {
				"ast": {
					"absolutePath": "contracts/Exchange.sol",
					"exportedSymbols": {
						"Context": [
							1378
						],
						"ERC20": [
							1253
						],
						"Exchange": [
							526
						],
						"IERC1155Errors": [
							683
						],
						"IERC20": [
							1331
						],
						"IERC20Errors": [
							588
						],
						"IERC20Metadata": [
							1356
						],
						"IERC721Errors": [
							636
						],
						"IExchange": [
							536
						],
						"IFactory": [
							546
						]
					},
					"id": 527,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 527,
							"sourceUnit": 1332,
							"src": "70:109:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 527,
							"sourceUnit": 1254,
							"src": "181:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IFactory.sol",
							"file": "./IFactory.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 527,
							"sourceUnit": 547,
							"src": "291:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IExchange.sol",
							"file": "./IExchange.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 527,
							"sourceUnit": 537,
							"src": "317:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "ERC20",
										"nameLocations": [
											"367:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1253,
										"src": "367:5:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "367:5:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IExchange",
										"nameLocations": [
											"374:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 536,
										"src": "374:9:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "374:9:0"
								}
							],
							"canonicalName": "Exchange",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 526,
							"linearizedBaseContracts": [
								526,
								536,
								1253,
								588,
								1356,
								1331,
								1378
							],
							"name": "Exchange",
							"nameLocation": "355:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 11,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "406:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 526,
									"src": "391:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 10,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "391:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "966dae0e",
									"id": 13,
									"mutability": "mutable",
									"name": "factoryAddress",
									"nameLocation": "440:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 526,
									"src": "425:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "425:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "523:145:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 23,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "542:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 26,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "560:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "552:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 24,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "552:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "552:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "542:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "564:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "534:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "534:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "534:54:0"
											},
											{
												"expression": {
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "601:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 33,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "616:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "601:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "601:21:0"
											},
											{
												"expression": {
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 36,
														"name": "factoryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "633:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 37,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "650:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "654:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "650:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "633:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "633:27:0"
											}
										]
									},
									"id": 42,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d756e69737761702d5631",
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "497:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4064d0c36978a41e049167cc7d373189c80b2e13539e07e97aadbddda8a959d7",
														"typeString": "literal_string \"Muniswap-V1\""
													},
													"value": "Muniswap-V1"
												},
												{
													"hexValue": "4d554e492d5631",
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "512:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_85cf1ce14ecd7475b66b81010a0a5c963d72b4f764be2f01b182bcbe13eeafb2",
														"typeString": "literal_string \"MUNI-V1\""
													},
													"value": "MUNI-V1"
												}
											],
											"id": 20,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 17,
												"name": "ERC20",
												"nameLocations": [
													"491:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1253,
												"src": "491:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "491:31:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "483:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "475:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "523:0:0"
									},
									"scope": 526,
									"src": "463:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "734:771:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 47,
															"name": "getReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "749:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "749:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "765:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "749:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 146,
													"nodeType": "Block",
													"src": "1005:493:0",
													"statements": [
														{
															"assignments": [
																86
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 86,
																	"mutability": "mutable",
																	"name": "ethReserve",
																	"nameLocation": "1028:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 146,
																	"src": "1020:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 85,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1020:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 95,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 89,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1049:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Exchange_$526",
																					"typeString": "contract Exchange"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Exchange_$526",
																					"typeString": "contract Exchange"
																				}
																			],
																			"id": 88,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1041:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 87,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1041:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 90,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1041:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1055:7:0",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "1041:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 92,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1065:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1069:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "1065:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1041:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1020:54:0"
														},
														{
															"assignments": [
																97
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 97,
																	"mutability": "mutable",
																	"name": "tokenReserve",
																	"nameLocation": "1097:12:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 146,
																	"src": "1089:20:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 96,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1089:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 100,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 98,
																	"name": "getReserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "1112:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1112:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1089:35:0"
														},
														{
															"assignments": [
																102
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 102,
																	"mutability": "mutable",
																	"name": "tokenAmount",
																	"nameLocation": "1147:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 146,
																	"src": "1139:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 101,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1139:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 109,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 103,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1161:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1165:5:0",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "1161:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 105,
																		"name": "tokenReserve",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "1173:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1161:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 107,
																	"name": "ethReserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "1188:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1161:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1139:59:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 111,
																			"name": "_tokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 44,
																			"src": "1221:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 112,
																			"name": "tokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 102,
																			"src": "1237:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1221:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e7420746f6b656e20616d6f756e74",
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1250:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11",
																			"typeString": "literal_string \"Insufficient token amount\""
																		},
																		"value": "Insufficient token amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_281c9ab0b172705db32dc2501c06da9b19aa07da5c364fffcbda58dca899bf11",
																			"typeString": "literal_string \"Insufficient token amount\""
																		}
																	],
																	"id": 110,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1213:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1213:65:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 116,
															"nodeType": "ExpressionStatement",
															"src": "1213:65:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 121,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1329:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1333:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1329:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 125,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1349:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Exchange_$526",
																					"typeString": "contract Exchange"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Exchange_$526",
																					"typeString": "contract Exchange"
																				}
																			],
																			"id": 124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1341:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 123,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1341:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1341:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 127,
																		"name": "tokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 102,
																		"src": "1356:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 118,
																				"name": "tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "1302:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 117,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1331,
																			"src": "1295:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1331_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1295:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1331",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1316:12:0",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1330,
																	"src": "1295:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1295:73:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 129,
															"nodeType": "ExpressionStatement",
															"src": "1295:73:0"
														},
														{
															"assignments": [
																131
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 131,
																	"mutability": "mutable",
																	"name": "liquidity",
																	"nameLocation": "1393:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 146,
																	"src": "1385:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 130,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1385:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 139,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 132,
																			"name": "totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "1405:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1405:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 134,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1421:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1425:5:0",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "1421:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1405:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 137,
																	"name": "ethReserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1405:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1385:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 141,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1464:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1468:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1464:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 143,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 131,
																		"src": "1476:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 140,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "1458:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1458:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 145,
															"nodeType": "ExpressionStatement",
															"src": "1458:28:0"
														}
													]
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "745:753:0",
												"trueBody": {
													"id": 84,
													"nodeType": "Block",
													"src": "768:231:0",
													"statements": [
														{
															"assignments": [
																53
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 53,
																	"mutability": "mutable",
																	"name": "token",
																	"nameLocation": "786:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 84,
																	"src": "779:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1331",
																		"typeString": "contract IERC20"
																	},
																	"typeName": {
																		"id": 52,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 51,
																			"name": "IERC20",
																			"nameLocations": [
																				"779:6:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1331,
																			"src": "779:6:0"
																		},
																		"referencedDeclaration": 1331,
																		"src": "779:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1331",
																			"typeString": "contract IERC20"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 57,
															"initialValue": {
																"arguments": [
																	{
																		"id": 55,
																		"name": "tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "801:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 54,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "794:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$1331_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "794:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1331",
																	"typeString": "contract IERC20"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "779:35:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 61,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "844:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 62,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "848:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "844:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 65,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "864:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Exchange_$526",
																					"typeString": "contract Exchange"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Exchange_$526",
																					"typeString": "contract Exchange"
																				}
																			],
																			"id": 64,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "856:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 63,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "856:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 66,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "856:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 67,
																		"name": "_tokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 44,
																		"src": "871:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 58,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 53,
																		"src": "825:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1331",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "831:12:0",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1330,
																	"src": "825:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "825:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 69,
															"nodeType": "ExpressionStatement",
															"src": "825:59:0"
														},
														{
															"assignments": [
																71
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 71,
																	"mutability": "mutable",
																	"name": "liquidity",
																	"nameLocation": "913:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 84,
																	"src": "905:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "905:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 77,
															"initialValue": {
																"expression": {
																	"arguments": [
																		{
																			"id": 74,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "933:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Exchange_$526",
																				"typeString": "contract Exchange"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Exchange_$526",
																				"typeString": "contract Exchange"
																			}
																		],
																		"id": 73,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "925:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 72,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "925:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "925:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "939:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "925:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "905:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 79,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "963:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "967:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "963:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 81,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 71,
																		"src": "975:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 78,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "957:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "957:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 83,
															"nodeType": "ExpressionStatement",
															"src": "957:28:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "51c6590a",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "685:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "_tokenAmount",
												"nameLocation": "703:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "698:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "698:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:19:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:0:0"
									},
									"scope": 526,
									"src": "676:829:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "1564:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 160,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1621:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$526",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$526",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1613:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 158,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1613:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1613:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 155,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1589:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 154,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "1582:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1331_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1582:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1331",
																"typeString": "contract IERC20"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1603:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1288,
														"src": "1582:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1582:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 153,
												"id": 163,
												"nodeType": "Return",
												"src": "1575:52:0"
											}
										]
									},
									"functionSelector": "59bf5d39",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserve",
									"nameLocation": "1522:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1532:2:0"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1555:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1554:9:0"
									},
									"scope": 526,
									"src": "1513:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1792:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 177,
																	"name": "inputReserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "1811:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1826:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1811:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 180,
																	"name": "outputReserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "1831:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1847:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1831:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1811:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642072657365727665",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1850:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb",
																"typeString": "literal_string \"Invalid reserve\""
															},
															"value": "Invalid reserve"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b94e65609ee4011575dbdd5e236b5af68e0bf462c9c00af0de296039c990efb",
																"typeString": "literal_string \"Invalid reserve\""
															}
														],
														"id": 176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1803:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1803:65:0"
											},
											{
												"assignments": [
													188
												],
												"declarations": [
													{
														"constant": false,
														"id": 188,
														"mutability": "mutable",
														"name": "inputAmountWithFee",
														"nameLocation": "1889:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 212,
														"src": "1881:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 187,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1881:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 192,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 189,
														"name": "inputAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1910:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "3939",
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1924:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_99_by_1",
															"typeString": "int_const 99"
														},
														"value": "99"
													},
													"src": "1910:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1881:45:0"
											},
											{
												"assignments": [
													194
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "1945:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 212,
														"src": "1937:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 193,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1937:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 198,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 195,
														"name": "inputAmountWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "1957:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 196,
														"name": "outputReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1978:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1957:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1937:54:0"
											},
											{
												"assignments": [
													200
												],
												"declarations": [
													{
														"constant": false,
														"id": 200,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "2010:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 212,
														"src": "2002:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2002:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 207,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 201,
																	"name": "inputReserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "2025:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2040:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2025:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 204,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2024:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 205,
														"name": "inputAmountWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "2047:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2024:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2002:63:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 208,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "2085:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 209,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2097:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2085:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 175,
												"id": 211,
												"nodeType": "Return",
												"src": "2078:30:0"
											}
										]
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount",
									"nameLocation": "1652:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "inputAmount",
												"nameLocation": "1680:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1672:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "inputReserve",
												"nameLocation": "1710:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1702:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "outputReserve",
												"nameLocation": "1741:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1733:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:100:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1783:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1782:9:0"
									},
									"scope": 526,
									"src": "1643:473:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "2195:177:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 221,
																"name": "_ethSold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2214:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2225:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2214:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e707574",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2228:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
																"typeString": "literal_string \"Invalid input\""
															},
															"value": "Invalid input"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
																"typeString": "literal_string \"Invalid input\""
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2206:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2206:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "2206:38:0"
											},
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "tokenReserve",
														"nameLocation": "2263:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 242,
														"src": "2255:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2255:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 231,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 229,
														"name": "getReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2278:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2278:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2255:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 233,
															"name": "_ethSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "2318:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 236,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2336:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Exchange_$526",
																			"typeString": "contract Exchange"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Exchange_$526",
																			"typeString": "contract Exchange"
																		}
																	],
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2328:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 234,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2328:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2328:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2342:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2328:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 239,
															"name": "tokenReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "2351:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 232,
														"name": "getAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2308:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2308:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 219,
												"id": 241,
												"nodeType": "Return",
												"src": "2301:63:0"
											}
										]
									},
									"functionSelector": "c2507ac1",
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAmount",
									"nameLocation": "2133:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "_ethSold",
												"nameLocation": "2156:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2148:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:18:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2186:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2185:9:0"
									},
									"scope": 526,
									"src": "2124:248:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "2451:182:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "_tokenSold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "2470:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2483:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2470:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e707574",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2486:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
																"typeString": "literal_string \"Invalid input\""
															},
															"value": "Invalid input"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af39b50065ba9648c753f781fa674704d13ce8309cf446a262799d7aceba8e5b",
																"typeString": "literal_string \"Invalid input\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2462:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2462:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "2462:40:0"
											},
											{
												"assignments": [
													258
												],
												"declarations": [
													{
														"constant": false,
														"id": 258,
														"mutability": "mutable",
														"name": "tokenReserve",
														"nameLocation": "2521:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 272,
														"src": "2513:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 257,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2513:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "getReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2536:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2513:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 263,
															"name": "_tokenSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2576:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 264,
															"name": "tokenReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "2588:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 267,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2610:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Exchange_$526",
																			"typeString": "contract Exchange"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Exchange_$526",
																			"typeString": "contract Exchange"
																		}
																	],
																	"id": 266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2602:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 265,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2602:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2602:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2616:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2602:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 262,
														"name": "getAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2566:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 249,
												"id": 271,
												"nodeType": "Return",
												"src": "2559:65:0"
											}
										]
									},
									"functionSelector": "8fc7a25d",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthAmount",
									"nameLocation": "2389:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "_tokenSold",
												"nameLocation": "2410:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2402:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:20:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2442:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:9:0"
									},
									"scope": 526,
									"src": "2380:253:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										535
									],
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "2726:381:0",
										"statements": [
											{
												"assignments": [
													282
												],
												"declarations": [
													{
														"constant": false,
														"id": 282,
														"mutability": "mutable",
														"name": "tokenReserve",
														"nameLocation": "2745:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "2737:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2737:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 283,
														"name": "getReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2760:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2760:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2737:35:0"
											},
											{
												"assignments": [
													287
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"mutability": "mutable",
														"name": "tokensBought",
														"nameLocation": "2791:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "2783:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 286,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 301,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 289,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2830:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2834:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2830:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 293,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2862:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Exchange_$526",
																				"typeString": "contract Exchange"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Exchange_$526",
																				"typeString": "contract Exchange"
																			}
																		],
																		"id": 292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2854:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 291,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2854:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2854:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2868:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2854:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 296,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2878:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2882:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2878:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2854:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 299,
															"name": "tokenReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "2902:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 288,
														"name": "getAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2806:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2783:142:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 303,
																"name": "tokensBought",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "2944:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 304,
																"name": "_minTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "2960:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2944:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2972:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															},
															"value": "Insufficient output amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															}
														],
														"id": 302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2936:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2936:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2936:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 313,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3044:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3048:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3044:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 315,
															"name": "tokensBought",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "3056:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 310,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "3021:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 309,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "3014:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1331_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3014:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1331",
																"typeString": "contract IERC20"
															}
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3035:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1298,
														"src": "3014:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3014:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "3014:55:0"
											},
											{
												"expression": {
													"id": 318,
													"name": "tokensBought",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "3087:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 280,
												"id": 319,
												"nodeType": "Return",
												"src": "3080:19:0"
											}
										]
									},
									"functionSelector": "f979dcd7",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ethToTokenSwap",
									"nameLocation": "2650:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 277,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2700:8:0"
									},
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "_minTokens",
												"nameLocation": "2673:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "2665:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2664:20:0"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "2717:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2716:9:0"
									},
									"scope": 526,
									"src": "2641:466:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "3208:425:0",
										"statements": [
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "tokenReserve",
														"nameLocation": "3227:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 378,
														"src": "3219:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 330,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3219:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 332,
														"name": "getReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "3242:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3242:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3219:35:0"
											},
											{
												"assignments": [
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 336,
														"mutability": "mutable",
														"name": "ethBought",
														"nameLocation": "3273:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 378,
														"src": "3265:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 335,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3265:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"arguments": [
														{
															"id": 338,
															"name": "_tokenSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "3309:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 339,
															"name": "tokenReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3334:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 342,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3369:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Exchange_$526",
																			"typeString": "contract Exchange"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Exchange_$526",
																			"typeString": "contract Exchange"
																		}
																	],
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3361:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 340,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3361:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3361:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3375:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3361:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 337,
														"name": "getAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "3285:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3285:108:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3265:128:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 348,
																"name": "ethBought",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "3412:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 349,
																"name": "_minEth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "3425:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3412:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206f757470757420616d6f756e74",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3434:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															},
															"value": "Insufficient output amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e185d54b6a4477f06f9d935db5f3f87aa098f61558d7a6d802e1773173b7b90",
																"typeString": "literal_string \"Insufficient output amount\""
															}
														],
														"id": 347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3404:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3404:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "3404:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3510:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3514:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3510:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 362,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3530:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$526",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$526",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3522:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 360,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3522:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3522:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "_tokenSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "3537:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 355,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "3483:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 354,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "3476:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1331_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3476:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1331",
																"typeString": "contract IERC20"
															}
														},
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3497:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1330,
														"src": "3476:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3476:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "3476:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "ethBought",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "3588:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 369,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3567:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3571:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3567:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3559:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 367,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3559:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3559:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3579:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3559:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3559:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "3559:39:0"
											},
											{
												"expression": {
													"id": 376,
													"name": "ethBought",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 336,
													"src": "3616:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 329,
												"id": 377,
												"nodeType": "Return",
												"src": "3609:16:0"
											}
										]
									},
									"functionSelector": "e0486c8a",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToEthSwap",
									"nameLocation": "3124:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "_tokenSold",
												"nameLocation": "3147:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "3139:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "_minEth",
												"nameLocation": "3167:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "3159:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3138:37:0"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "3199:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3198:9:0"
									},
									"scope": 526,
									"src": "3115:518:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "3706:410:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 385,
																"name": "_amountWithrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "3725:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3743:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3725:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c6971756964697479",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3746:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															},
															"value": "Insufficient liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3717:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3717:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "3717:54:0"
											},
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "ethWithrawn",
														"nameLocation": "3792:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "3784:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 391,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 403,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 395,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3814:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Exchange_$526",
																			"typeString": "contract Exchange"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Exchange_$526",
																			"typeString": "contract Exchange"
																		}
																	],
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3806:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 393,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3806:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3806:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3820:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3806:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 398,
															"name": "_amountWithrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "3830:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3806:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 400,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "3848:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3848:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3806:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3784:77:0"
											},
											{
												"assignments": [
													405
												],
												"declarations": [
													{
														"constant": false,
														"id": 405,
														"mutability": "mutable",
														"name": "tokenWithrawn",
														"nameLocation": "3880:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "3872:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 404,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3872:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 406,
																"name": "getReserve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "3896:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3896:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 408,
															"name": "_amountWithrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "3911:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3896:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 410,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "3929:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3929:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3896:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3872:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 415,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3961:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3965:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3961:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 417,
															"name": "_amountWithrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "3973:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 414,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "3955:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3955:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "3955:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 426,
															"name": "ethWithrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4029:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 422,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4008:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4012:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4008:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4000:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 420,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4000:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4000:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4020:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4000:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4000:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "4000:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 433,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4082:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4086:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4082:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 435,
															"name": "tokenWithrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "4094:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 430,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "4059:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 429,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "4052:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1331_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4052:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1331",
																"typeString": "contract IERC20"
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4073:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1298,
														"src": "4052:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4052:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "4052:56:0"
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "3650:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "_amountWithrawn",
												"nameLocation": "3674:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "3666:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3665:25:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3706:0:0"
									},
									"scope": 526,
									"src": "3641:475:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "4270:905:0",
										"statements": [
											{
												"assignments": [
													449
												],
												"declarations": [
													{
														"constant": false,
														"id": 449,
														"mutability": "mutable",
														"name": "exchangeAddress",
														"nameLocation": "4490:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 524,
														"src": "4482:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 448,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4482:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"arguments": [
														{
															"id": 454,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4545:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 451,
																	"name": "factoryAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "4517:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 450,
																"name": "IFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4508:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IFactory_$546_$",
																	"typeString": "type(contract IFactory)"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4508:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFactory_$546",
																"typeString": "contract IFactory"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4533:11:0",
														"memberName": "getExchange",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 545,
														"src": "4508:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$",
															"typeString": "function (address) external returns (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4508:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4482:77:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 458,
																	"name": "exchangeAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "4592:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 461,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4619:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Exchange_$526",
																				"typeString": "contract Exchange"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Exchange_$526",
																				"typeString": "contract Exchange"
																			}
																		],
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4611:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 459,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4611:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4611:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4592:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 464,
																	"name": "exchangeAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "4628:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4655:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4647:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 465,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4647:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4647:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4628:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4592:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642065786368616e67652061646472657373",
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4672:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11",
																"typeString": "literal_string \"Invalid exchange address\""
															},
															"value": "Invalid exchange address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_742535f47e8b780921e65cd98f09ed146a14c6b1a1bbdc7237c1fdfde2ac3b11",
																"typeString": "literal_string \"Invalid exchange address\""
															}
														],
														"id": 457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4570:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:139:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "4570:139:0"
											},
											{
												"assignments": [
													475
												],
												"declarations": [
													{
														"constant": false,
														"id": 475,
														"mutability": "mutable",
														"name": "tokenReserve",
														"nameLocation": "4738:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 524,
														"src": "4730:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 474,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4730:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 478,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 476,
														"name": "getReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "4753:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4753:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4730:35:0"
											},
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "ethAmount",
														"nameLocation": "4784:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 524,
														"src": "4776:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 479,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4776:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 490,
												"initialValue": {
													"arguments": [
														{
															"id": 482,
															"name": "_tokenSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "4820:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 483,
															"name": "tokenReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "4845:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 486,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4880:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Exchange_$526",
																			"typeString": "contract Exchange"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Exchange_$526",
																			"typeString": "contract Exchange"
																		}
																	],
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4872:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 484,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4872:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4872:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4886:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "4872:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "getAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "4796:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4796:108:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4776:128:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 495,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4949:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4953:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4949:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 499,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4969:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$526",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$526",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4961:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 497,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4961:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4961:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 501,
															"name": "_tokenSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "4976:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 492,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "4922:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 491,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "4915:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1331_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4915:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1331",
																"typeString": "contract IERC20"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4936:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1330,
														"src": "4915:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4915:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "4915:72:0"
											},
											{
												"assignments": [
													505
												],
												"declarations": [
													{
														"constant": false,
														"id": 505,
														"mutability": "mutable",
														"name": "tokensBought",
														"nameLocation": "5008:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 524,
														"src": "5000:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5000:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 514,
												"initialValue": {
													"arguments": [
														{
															"id": 512,
															"name": "_minTokensBought",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "5083:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 507,
																		"name": "exchangeAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "5033:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 506,
																	"name": "IExchange",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "5023:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IExchange_$536_$",
																		"typeString": "type(contract IExchange)"
																	}
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5023:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IExchange_$536",
																	"typeString": "contract IExchange"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5050:14:0",
															"memberName": "ethToTokenSwap",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 535,
															"src": "5023:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) payable external returns (uint256)"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 510,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "5072:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5023:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint256_$returns$_t_uint256_$value",
															"typeString": "function (uint256) payable external returns (uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5023:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5000:100:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 519,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5142:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5146:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5142:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "tokensBought",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "5154:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 516,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "5118:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 515,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "5111:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1331_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5111:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1331",
																"typeString": "contract IERC20"
															}
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5133:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1298,
														"src": "5111:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5111:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "5111:56:0"
											}
										]
									},
									"functionSelector": "f7a7e324",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToTokenSwap",
									"nameLocation": "4133:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "_tokenSold",
												"nameLocation": "4168:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "4160:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "_minTokensBought",
												"nameLocation": "4198:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "4190:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "4234:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "4226:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4149:105:0"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4270:0:0"
									},
									"scope": 526,
									"src": "4124:1051:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 527,
							"src": "346:4832:0",
							"usedErrors": [
								558,
								563,
								568,
								577,
								582,
								587,
								723
							],
							"usedEvents": [
								1265,
								1274
							]
						}
					],
					"src": "42:5136:0"
				},
				"id": 0
			},
			"contracts/IExchange.sol": {
				"ast": {
					"absolutePath": "contracts/IExchange.sol",
					"exportedSymbols": {
						"IExchange": [
							536
						]
					},
					"id": 537,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 528,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IExchange",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 536,
							"linearizedBaseContracts": [
								536
							],
							"name": "IExchange",
							"nameLocation": "80:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f979dcd7",
									"id": 535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ethToTokenSwap",
									"nameLocation": "106:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "_minTokens",
												"nameLocation": "129:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "121:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "121:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "120:20:1"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "166:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "166:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:9:1"
									},
									"scope": 536,
									"src": "97:78:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 537,
							"src": "70:108:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "42:136:1"
				},
				"id": 1
			},
			"contracts/IFactory.sol": {
				"ast": {
					"absolutePath": "contracts/IFactory.sol",
					"exportedSymbols": {
						"IFactory": [
							546
						]
					},
					"id": 547,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 538,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 546,
							"linearizedBaseContracts": [
								546
							],
							"name": "IFactory",
							"nameLocation": "80:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06f2bf62",
									"id": 545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getExchange",
									"nameLocation": "105:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "125:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "117:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "117:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "116:23:2"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "157:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "157:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "156:9:2"
									},
									"scope": 546,
									"src": "96:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 547,
							"src": "70:99:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "42:127:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							683
						],
						"IERC20Errors": [
							588
						],
						"IERC721Errors": [
							636
						]
					},
					"id": 684,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 548,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 549,
								"nodeType": "StructuredDocumentation",
								"src": "58:153:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the ERC6093 custom errors for ERC20 tokens\n as defined in https://eips.ethereum.org/EIPS/eip-6093"
							},
							"fullyImplemented": true,
							"id": 588,
							"linearizedBaseContracts": [
								588
							],
							"name": "IERC20Errors",
							"nameLocation": "222:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "241:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 558,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "561:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "594:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "586:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "610:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "602:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "627:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "619:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:49:3"
									},
									"src": "555:80:3"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "641:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 563,
									"name": "ERC20InvalidSender",
									"nameLocation": "804:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "831:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "823:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:16:3"
									},
									"src": "798:41:3"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "845:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 568,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1015:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1044:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1036:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1035:18:3"
									},
									"src": "1009:45:3"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "1060:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 577,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1416:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1451:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "1443:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1468:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "1460:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1487:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "1479:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1479:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:52:3"
									},
									"src": "1410:85:3"
								},
								{
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "1501:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 582,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1686:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1715:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "1707:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1706:18:3"
									},
									"src": "1680:45:3"
								},
								{
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "1731:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 587,
									"name": "ERC20InvalidSpender",
									"nameLocation": "1937:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1965:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "1957:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1957:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:17:3"
									},
									"src": "1931:43:3"
								}
							],
							"scope": 684,
							"src": "212:1764:3",
							"usedErrors": [
								558,
								563,
								568,
								577,
								582,
								587
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 589,
								"nodeType": "StructuredDocumentation",
								"src": "1978:155:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the ERC6093 custom errors for ERC721 tokens\n as defined in https://eips.ethereum.org/EIPS/eip-6093"
							},
							"fullyImplemented": true,
							"id": 636,
							"linearizedBaseContracts": [
								636
							],
							"name": "IERC721Errors",
							"nameLocation": "2144:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "2164:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 594,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2394:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2421:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2413:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2412:15:3"
									},
									"src": "2388:40:3"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "2434:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 599,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2577:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2608:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "2600:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2600:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2599:17:3"
									},
									"src": "2571:46:3"
								},
								{
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "2623:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 608,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2923:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2952:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2944:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2968:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2960:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2960:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2985:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2977:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2943:48:3"
									},
									"src": "2917:75:3"
								},
								{
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "2998:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 613,
									"name": "ERC721InvalidSender",
									"nameLocation": "3161:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3189:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3181:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3181:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3180:16:3"
									},
									"src": "3155:42:3"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "3203:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 618,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3373:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3403:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "3395:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:18:3"
									},
									"src": "3367:46:3"
								},
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "3419:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 625,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3677:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3712:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "3704:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3704:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3730:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "3722:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3703:35:3"
									},
									"src": "3671:68:3"
								},
								{
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "3745:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 630,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3930:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "3960:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3952:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3951:18:3"
									},
									"src": "3924:46:3"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "3976:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 635,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4184:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4214:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "4206:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4205:18:3"
									},
									"src": "4178:46:3"
								}
							],
							"scope": 684,
							"src": "2134:2092:3",
							"usedErrors": [
								594,
								599,
								608,
								613,
								618,
								625,
								630,
								635
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 637,
								"nodeType": "StructuredDocumentation",
								"src": "4228:157:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the ERC6093 custom errors for ERC1155 tokens\n as defined in https://eips.ethereum.org/EIPS/eip-6093"
							},
							"fullyImplemented": true,
							"id": 683,
							"linearizedBaseContracts": [
								683
							],
							"name": "IERC1155Errors",
							"nameLocation": "4396:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "4417:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "03dee4c5",
									"id": 648,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4737:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4772:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "4764:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4788:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "4780:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4780:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4805:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "4797:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4797:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4821:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "4813:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4763:66:3"
									},
									"src": "4731:99:3"
								},
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "4836:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 653,
									"name": "ERC1155InvalidSender",
									"nameLocation": "4999:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5028:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "5020:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5020:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5019:16:3"
									},
									"src": "4993:43:3"
								},
								{
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "5042:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 658,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5212:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5243:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5235:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5235:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5234:18:3"
									},
									"src": "5206:47:3"
								},
								{
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "5259:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "313dd6cb",
									"id": 665,
									"name": "ERC1155InsufficientApprovalForAll",
									"nameLocation": "5526:33:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5568:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5560:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5560:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5586:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5578:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5578:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:33:3"
									},
									"src": "5520:73:3"
								},
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "5599:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 670,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5784:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5815:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "5807:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5807:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5806:18:3"
									},
									"src": "5778:47:3"
								},
								{
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "5831:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 675,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6039:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6070:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "6062:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6062:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6061:18:3"
									},
									"src": "6033:47:3"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "6086:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 682,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6377:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6411:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "6403:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6403:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6430:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "6422:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6422:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6402:41:3"
									},
									"src": "6371:73:3"
								}
							],
							"scope": 684,
							"src": "4386:2060:3",
							"usedErrors": [
								648,
								653,
								658,
								665,
								670,
								675,
								682
							],
							"usedEvents": []
						}
					],
					"src": "32:6415:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1378
						],
						"ERC20": [
							1253
						],
						"IERC1155Errors": [
							683
						],
						"IERC20": [
							1331
						],
						"IERC20Errors": [
							588
						],
						"IERC20Metadata": [
							1356
						],
						"IERC721Errors": [
							636
						]
					},
					"id": 1254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 685,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 686,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1254,
							"sourceUnit": 1332,
							"src": "131:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 687,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1254,
							"sourceUnit": 1357,
							"src": "154:41:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 688,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1254,
							"sourceUnit": 1379,
							"src": "196:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 689,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1254,
							"sourceUnit": 684,
							"src": "230:45:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 691,
										"name": "Context",
										"nameLocations": [
											"1548:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1378,
										"src": "1548:7:4"
									},
									"id": 692,
									"nodeType": "InheritanceSpecifier",
									"src": "1548:7:4"
								},
								{
									"baseName": {
										"id": 693,
										"name": "IERC20",
										"nameLocations": [
											"1557:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1331,
										"src": "1557:6:4"
									},
									"id": 694,
									"nodeType": "InheritanceSpecifier",
									"src": "1557:6:4"
								},
								{
									"baseName": {
										"id": 695,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1565:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1356,
										"src": "1565:14:4"
									},
									"id": 696,
									"nodeType": "InheritanceSpecifier",
									"src": "1565:14:4"
								},
								{
									"baseName": {
										"id": 697,
										"name": "IERC20Errors",
										"nameLocations": [
											"1581:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 588,
										"src": "1581:12:4"
									},
									"id": 698,
									"nodeType": "InheritanceSpecifier",
									"src": "1581:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 690,
								"nodeType": "StructuredDocumentation",
								"src": "277:1243:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1253,
							"linearizedBaseContracts": [
								1253,
								588,
								1356,
								1331,
								1378
							],
							"name": "ERC20",
							"nameLocation": "1539:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 702,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1636:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "1600:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 701,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 699,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1608:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1600:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 700,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1619:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 708,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1708:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "1652:67:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 707,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 703,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1660:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1652:47:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 706,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 704,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1679:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1671:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 705,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1690:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 710,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1742:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "1726:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 709,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1726:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 712,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1776:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "1761:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 711,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1761:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 714,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1802:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1253,
									"src": "1787:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 713,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1787:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "1816:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "a60f030c",
									"id": 723,
									"name": "ERC20FailedDecreaseAllowance",
									"nameLocation": "1898:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1935:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1927:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1927:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1952:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1944:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1978:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1970:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1926:70:4"
									},
									"src": "1892:105:4"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "2235:57:4",
										"statements": [
											{
												"expression": {
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 731,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "2245:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 732,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "2253:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2245:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "2245:13:4"
											},
											{
												"expression": {
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 735,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "2268:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 736,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "2278:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2268:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "2268:17:4"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "2003:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 740,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2205:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "2191:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 725,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2191:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2226:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "2212:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 727,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:44:4"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:4"
									},
									"scope": 1253,
									"src": "2179:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "2417:29:4",
										"statements": [
											{
												"expression": {
													"id": 746,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 712,
													"src": "2434:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 745,
												"id": 747,
												"nodeType": "Return",
												"src": "2427:12:4"
											}
										]
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "2298:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2366:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2370:2:4"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "2402:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2402:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:15:4"
									},
									"scope": 1253,
									"src": "2357:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1349
									],
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "2621:31:4",
										"statements": [
											{
												"expression": {
													"id": 755,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 714,
													"src": "2638:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 754,
												"id": 756,
												"nodeType": "Return",
												"src": "2631:14:4"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "2452:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2568:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2574:2:4"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "2606:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 752,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2606:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2605:15:4"
									},
									"scope": 1253,
									"src": "2559:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "3341:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3358:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 763,
												"id": 765,
												"nodeType": "Return",
												"src": "3351:9:4"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "2658:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3294:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3302:2:4"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3334:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 761,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3334:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3333:7:4"
									},
									"scope": 1253,
									"src": "3285:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1280
									],
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "3488:36:4",
										"statements": [
											{
												"expression": {
													"id": 773,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 710,
													"src": "3505:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 774,
												"nodeType": "Return",
												"src": "3498:19:4"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "3373:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3436:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3447:2:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3479:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3479:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:9:4"
									},
									"scope": 1253,
									"src": "3427:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1288
									],
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "3656:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 784,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3673:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 786,
													"indexExpression": {
														"id": 785,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "3683:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3673:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 783,
												"id": 787,
												"nodeType": "Return",
												"src": "3666:25:4"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "3530:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3591:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3609:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3601:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3601:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3600:17:4"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3647:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3647:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:9:4"
									},
									"scope": 1253,
									"src": "3582:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1298
									],
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "3970:104:4",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3988:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 812,
														"src": "3980:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 799,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3980:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 803,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 801,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "3996:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3996:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3980:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 805,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "4028:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "4035:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "4039:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 804,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "4018:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4018:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "4018:28:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 798,
												"id": 811,
												"nodeType": "Return",
												"src": "4056:11:4"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "3704:185:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3903:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3920:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "3912:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3912:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3932:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "3924:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3911:28:4"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "3964:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 796,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3964:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3963:6:4"
									},
									"scope": 1253,
									"src": "3894:180:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1308
									],
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "4221:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 823,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "4238:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 825,
														"indexExpression": {
															"id": 824,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "4250:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4238:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 827,
													"indexExpression": {
														"id": 826,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "4257:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4238:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 822,
												"id": 828,
												"nodeType": "Return",
												"src": "4231:34:4"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "4080:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4141:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4159:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "4151:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4151:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4174:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "4166:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4166:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4150:32:4"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "4212:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4212:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4211:9:4"
									},
									"scope": 1253,
									"src": "4132:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1318
									],
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "4660:108:4",
										"statements": [
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4678:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "4670:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 840,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4670:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 842,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "4686:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4686:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4670:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 846,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "4717:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "4724:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "4733:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "4708:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4708:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "4708:32:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4757:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 839,
												"id": 852,
												"nodeType": "Return",
												"src": "4750:11:4"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "4278:297:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4589:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4605:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "4597:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4597:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4622:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "4614:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4614:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4596:33:4"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "4654:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4654:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4653:6:4"
									},
									"scope": 1253,
									"src": "4580:188:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1330
									],
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "5424:153:4",
										"statements": [
											{
												"assignments": [
													867
												],
												"declarations": [
													{
														"constant": false,
														"id": 867,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5442:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "5434:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 866,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5434:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 870,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 868,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "5452:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5452:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5434:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 872,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "5490:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 873,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "5496:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "5505:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 871,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "5474:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5474:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "5474:38:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 878,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "5532:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "5538:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "5542:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 877,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "5522:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5522:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "5522:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5566:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 865,
												"id": 884,
												"nodeType": "Return",
												"src": "5559:11:4"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "4774:551:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5339:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5360:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "5352:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5352:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5374:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "5366:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5366:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5386:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "5378:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5378:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5351:42:4"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "5418:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5418:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5417:6:4"
									},
									"scope": 1253,
									"src": "5330:247:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "6066:140:4",
										"statements": [
											{
												"assignments": [
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6084:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "6076:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 896,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6076:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 900,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 898,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "6092:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6092:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6076:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 902,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "6123:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "6130:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 905,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "6149:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 906,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "6156:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 904,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "6139:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6139:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 908,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "6167:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6139:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "6114:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6114:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "6114:64:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6195:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 895,
												"id": 913,
												"nodeType": "Return",
												"src": "6188:11:4"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "5583:384:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5981:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "5999:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6024:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "6016:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5998:37:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "6060:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6060:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6059:6:4"
									},
									"scope": 1253,
									"src": "5972:234:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "6796:392:4",
										"statements": [
											{
												"assignments": [
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6814:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 959,
														"src": "6806:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 925,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6806:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 929,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 927,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "6822:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6822:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6806:28:4"
											},
											{
												"assignments": [
													931
												],
												"declarations": [
													{
														"constant": false,
														"id": 931,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6852:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 959,
														"src": "6844:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 930,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6844:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 936,
												"initialValue": {
													"arguments": [
														{
															"id": 933,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "6881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 934,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "6888:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 932,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "6871:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6871:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6844:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 937,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "6910:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 938,
														"name": "requestedDecrease",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "6929:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6910:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "6906:148:4",
												"trueBody": {
													"id": 946,
													"nodeType": "Block",
													"src": "6948:106:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 941,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 918,
																		"src": "6998:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 942,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 931,
																		"src": "7007:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 943,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "7025:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 940,
																	"name": "ERC20FailedDecreaseAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "6969:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256) pure"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6969:74:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 945,
															"nodeType": "RevertStatement",
															"src": "6962:81:4"
														}
													]
												}
											},
											{
												"id": 956,
												"nodeType": "UncheckedBlock",
												"src": "7063:97:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 949,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "7096:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 950,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "7103:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 951,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 931,
																		"src": "7112:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 952,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "7131:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7112:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 948,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "7087:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7087:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 955,
														"nodeType": "ExpressionStatement",
														"src": "7087:62:4"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7177:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 924,
												"id": 958,
												"nodeType": "Return",
												"src": "7170:11:4"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "6212:478:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `requestedDecrease`."
									},
									"functionSelector": "a457c2d7",
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6704:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6730:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "6722:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6722:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "6747:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "6739:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6721:44:4"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "6790:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 922,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6790:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6789:6:4"
									},
									"scope": 1253,
									"src": "6695:493:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "7623:232:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "7637:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7653:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7645:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 971,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7645:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7645:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7637:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "7633:86:4",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "7657:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7705:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7697:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 977,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7697:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7697:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 976,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "7678:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7678:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "7671:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 985,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "7732:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7746:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7738:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 986,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7738:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7738:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7732:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 999,
												"nodeType": "IfStatement",
												"src": "7728:86:4",
												"trueBody": {
													"id": 998,
													"nodeType": "Block",
													"src": "7750:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 994,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7800:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7792:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 992,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7792:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7792:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 991,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "7771:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7771:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 997,
															"nodeType": "RevertStatement",
															"src": "7764:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1001,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "7831:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "7837:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "7841:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "7823:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7823:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "7823:25:4"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "7194:354:4",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7562:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7580:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "7572:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7594:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "7586:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7586:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7606:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "7598:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7598:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7571:42:4"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7623:0:4"
									},
									"scope": 1253,
									"src": "7553:302:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "8231:941:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1017,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "8245:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8261:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8253:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1018,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8253:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8253:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8245:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1054,
													"nodeType": "Block",
													"src": "8318:366:4",
													"statements": [
														{
															"assignments": [
																1029
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1029,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "8340:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1054,
																	"src": "8332:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1028,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8332:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1033,
															"initialValue": {
																"baseExpression": {
																	"id": 1030,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "8354:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1032,
																"indexExpression": {
																	"id": 1031,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "8364:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8354:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8332:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1034,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "8387:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1035,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "8401:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8387:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1044,
															"nodeType": "IfStatement",
															"src": "8383:117:4",
															"trueBody": {
																"id": 1043,
																"nodeType": "Block",
																"src": "8409:91:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1038,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1010,
																					"src": "8459:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1039,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1029,
																					"src": "8465:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1040,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1014,
																					"src": "8478:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1037,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "8434:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8434:51:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1042,
																		"nodeType": "RevertStatement",
																		"src": "8427:58:4"
																	}
																]
															}
														},
														{
															"id": 1053,
															"nodeType": "UncheckedBlock",
															"src": "8513:161:4",
															"statements": [
																{
																	"expression": {
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1045,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 702,
																				"src": "8621:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1047,
																			"indexExpression": {
																				"id": 1046,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1010,
																				"src": "8631:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8621:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1048,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1029,
																				"src": "8639:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1049,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "8653:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8639:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8621:38:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1052,
																	"nodeType": "ExpressionStatement",
																	"src": "8621:38:4"
																}
															]
														}
													]
												},
												"id": 1055,
												"nodeType": "IfStatement",
												"src": "8241:443:4",
												"trueBody": {
													"id": 1027,
													"nodeType": "Block",
													"src": "8265:47:4",
													"statements": [
														{
															"expression": {
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1023,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "8279:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1024,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "8295:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8279:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1026,
															"nodeType": "ExpressionStatement",
															"src": "8279:22:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "8698:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8712:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8704:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1057,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8704:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8704:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8698:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "8916:208:4",
													"statements": [
														{
															"id": 1074,
															"nodeType": "UncheckedBlock",
															"src": "8930:184:4",
															"statements": [
																{
																	"expression": {
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1068,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 702,
																				"src": "9076:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1070,
																			"indexExpression": {
																				"id": 1069,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1012,
																				"src": "9086:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9076:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1071,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1014,
																			"src": "9093:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9076:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1073,
																	"nodeType": "ExpressionStatement",
																	"src": "9076:23:4"
																}
															]
														}
													]
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "8694:430:4",
												"trueBody": {
													"id": 1067,
													"nodeType": "Block",
													"src": "8716:194:4",
													"statements": [
														{
															"id": 1066,
															"nodeType": "UncheckedBlock",
															"src": "8730:170:4",
															"statements": [
																{
																	"expression": {
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1062,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "8863:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1063,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1014,
																			"src": "8879:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8863:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1065,
																	"nodeType": "ExpressionStatement",
																	"src": "8863:22:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1078,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "9148:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "9154:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "9158:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1077,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "9139:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9139:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "EmitStatement",
												"src": "9134:31:4"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "7861:289:4",
										"text": " @dev Transfers `amount` of tokens from `from` to `to`, or alternatively mints (or burns) if `from` (or `to`) is\n the zero address. All customizations to transfers, mints, and burns should be done by overriding this function.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8164:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8180:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "8172:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8172:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8194:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "8186:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8186:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8206:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "8198:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8198:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8171:42:4"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8231:0:4"
									},
									"scope": 1253,
									"src": "8155:1017:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "9561:153:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1092,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "9575:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9594:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9586:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1093,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9586:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9586:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9575:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1106,
												"nodeType": "IfStatement",
												"src": "9571:91:4",
												"trueBody": {
													"id": 1105,
													"nodeType": "Block",
													"src": "9598:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9648:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9640:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1099,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9640:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9640:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1098,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "9619:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9619:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1104,
															"nodeType": "RevertStatement",
															"src": "9612:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9687:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9679:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1108,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9679:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9679:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1112,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "9691:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "9700:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1107,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "9671:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9671:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "9671:36:4"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "9178:321:4",
										"text": " @dev Creates `amount` tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9513:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9527:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "9519:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9519:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9544:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "9536:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9536:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9518:33:4"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9561:0:4"
									},
									"scope": 1253,
									"src": "9504:210:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "10085:151:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1125,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "10099:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10118:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10110:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1126,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10110:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10110:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10099:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1139,
												"nodeType": "IfStatement",
												"src": "10095:89:4",
												"trueBody": {
													"id": 1138,
													"nodeType": "Block",
													"src": "10122:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10170:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10162:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1132,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10162:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10162:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1131,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "10143:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10143:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1137,
															"nodeType": "RevertStatement",
															"src": "10136:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1141,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "10201:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10218:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10210:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10210:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10210:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1146,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "10222:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1140,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "10193:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10193:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "10193:36:4"
											}
										]
									},
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "9720:303:4",
										"text": " @dev Destroys `amount` tokens from `account`, by transferring it to address(0).\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10037:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10051:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "10043:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10043:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10068:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "10060:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10042:33:4"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10085:0:4"
									},
									"scope": 1253,
									"src": "10028:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "10742:297:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1160,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "10756:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10773:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10765:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1161,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10765:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10765:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10756:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1174,
												"nodeType": "IfStatement",
												"src": "10752:89:4",
												"trueBody": {
													"id": 1173,
													"nodeType": "Block",
													"src": "10777:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10827:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10819:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1167,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10819:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10819:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1166,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "10798:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10798:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1172,
															"nodeType": "RevertStatement",
															"src": "10791:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1175,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "10854:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10873:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10865:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1176,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10865:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10865:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10854:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1189,
												"nodeType": "IfStatement",
												"src": "10850:90:4",
												"trueBody": {
													"id": 1188,
													"nodeType": "Block",
													"src": "10877:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10926:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10918:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1182,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10918:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10918:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1181,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "10898:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10898:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1187,
															"nodeType": "RevertStatement",
															"src": "10891:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1190,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "10949:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1193,
															"indexExpression": {
																"id": 1191,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "10961:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10949:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1194,
														"indexExpression": {
															"id": 1192,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "10968:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10949:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1195,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "10979:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10949:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "10949:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1199,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "11009:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "11016:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1201,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "11025:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1198,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "11000:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11000:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "EmitStatement",
												"src": "10995:37:4"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "10242:412:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10668:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10685:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "10677:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10700:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "10692:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10692:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10717:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "10709:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10709:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10676:48:4"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10742:0:4"
									},
									"scope": 1253,
									"src": "10659:380:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "11410:384:4",
										"statements": [
											{
												"assignments": [
													1216
												],
												"declarations": [
													{
														"constant": false,
														"id": 1216,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11428:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "11420:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1215,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11420:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1221,
												"initialValue": {
													"arguments": [
														{
															"id": 1218,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "11457:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1219,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "11464:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1217,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "11447:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11447:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11420:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1222,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "11486:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11511:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1224,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11511:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1223,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11506:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11506:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11520:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11506:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11486:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1250,
												"nodeType": "IfStatement",
												"src": "11482:306:4",
												"trueBody": {
													"id": 1249,
													"nodeType": "Block",
													"src": "11525:263:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1229,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "11543:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1230,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "11562:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11543:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1239,
															"nodeType": "IfStatement",
															"src": "11539:132:4",
															"trueBody": {
																"id": 1238,
																"nodeType": "Block",
																"src": "11570:101:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1233,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1210,
																					"src": "11622:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1234,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1216,
																					"src": "11631:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1235,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1212,
																					"src": "11649:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1232,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 577,
																				"src": "11595:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11595:61:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1237,
																		"nodeType": "RevertStatement",
																		"src": "11588:68:4"
																	}
																]
															}
														},
														{
															"id": 1248,
															"nodeType": "UncheckedBlock",
															"src": "11684:94:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1241,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1208,
																				"src": "11721:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1242,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1210,
																				"src": "11728:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1243,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1216,
																					"src": "11737:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1244,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1212,
																					"src": "11756:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11737:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1240,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1205,
																			"src": "11712:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11712:51:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1247,
																	"nodeType": "ExpressionStatement",
																	"src": "11712:51:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "11045:270:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11329:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "11345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11345:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11368:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "11360:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11360:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11385:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "11377:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11377:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11344:48:4"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11410:0:4"
									},
									"scope": 1253,
									"src": "11320:474:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1254,
							"src": "1521:10275:4",
							"usedErrors": [
								558,
								563,
								568,
								577,
								582,
								587,
								723
							],
							"usedEvents": [
								1265,
								1274
							]
						}
					],
					"src": "105:11692:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1331
						]
					},
					"id": 1332,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1256,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1331,
							"linearizedBaseContracts": [
								1331
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1265,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1274,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "704:66:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1331,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "836:72:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 1331,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "987:202:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1203:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1220:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1212:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1232:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1224:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:28:5"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1258:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1258:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:6:5"
									},
									"scope": 1331,
									"src": "1194:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "1270:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1548:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1566:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "1558:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1581:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "1573:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:32:5"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "1613:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:9:5"
									},
									"scope": 1331,
									"src": "1539:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "1628:642:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2284:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2300:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "2292:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2292:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2317:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "2309:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2309:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2291:33:5"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "2343:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:6:5"
									},
									"scope": 1331,
									"src": "2275:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "2355:287:5",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2656:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2677:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "2669:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2691:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "2683:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2703:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "2695:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:42:5"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "2729:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2729:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:6:5"
									},
									"scope": 1331,
									"src": "2647:88:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1332,
							"src": "203:2534:5",
							"usedErrors": [],
							"usedEvents": [
								1265,
								1274
							]
						}
					],
					"src": "106:2632:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1331
						],
						"IERC20Metadata": [
							1356
						]
					},
					"id": 1357,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1333,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1357,
							"sourceUnit": 1332,
							"src": "136:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1336,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1331,
										"src": "306:6:6"
									},
									"id": 1337,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1335,
								"nodeType": "StructuredDocumentation",
								"src": "161:116:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1356,
							"linearizedBaseContracts": [
								1356,
								1331
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1340,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1356,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1346,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1356,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1352,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1356,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1357,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1265,
								1274
							]
						}
					],
					"src": "110:574:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1378
						]
					},
					"id": 1379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1358,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "86:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1359,
								"nodeType": "StructuredDocumentation",
								"src": "112:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1378,
							"linearizedBaseContracts": [
								1378
							],
							"name": "Context",
							"nameLocation": "627:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "703:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1364,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "720:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "724:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "720:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1363,
												"id": 1366,
												"nodeType": "Return",
												"src": "713:17:7"
											}
										]
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "650:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "660:2:7"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "694:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:9:7"
									},
									"scope": 1378,
									"src": "641:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "810:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1373,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "827:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "831:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "827:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1372,
												"id": 1375,
												"nodeType": "Return",
												"src": "820:15:7"
											}
										]
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "752:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "760:2:7"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "794:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "794:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:16:7"
									},
									"scope": 1378,
									"src": "743:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1379,
							"src": "609:235:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:759:7"
				},
				"id": 7
			}
		}
	}
}